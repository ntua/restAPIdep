----------------------------------------------
       Endpoint dependencies per attribute       
       Number of api endpoints (nodes): 91
       Number of api endpoints (nodes) with inter-dependency: 81
       Number of dependent only api endpoints (nodes): 55
       Number of api endpoints (nodes) that only derive dependencies: 13
       Number of api endpoints (nodes) that are both dependent and derive dependencies: 13
       Number of dependencies (edges): 772
       Number of dependencies per attribute: 2018
       Number of dependencies per parameter type (body/query/path): 1885/23/110
----------------------------------------------
List all balances  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create batch payout  [ label = "currency : currency"] type: string, parameter: body
List all balances  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create order  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create template  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Update order  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Update product  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List all balances  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List all balances  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List available events  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List available events  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
List available events  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List available events  ->  Create order  [ label = "description : description"] type: string, parameter: body
List available events  ->  Create order  [ label = "name : name"] type: string, parameter: body
List available events  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List available events  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List available events  ->  Create plan  [ label = "description : description"] type: string, parameter: body
List available events  ->  Create product  [ label = "description : description"] type: string, parameter: body
List available events  ->  Create product  [ label = "name : name"] type: string, parameter: body
List available events  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List available events  ->  Create template  [ label = "name : name"] type: string, parameter: body
List available events  ->  Create template  [ label = "description : description"] type: string, parameter: body
List available events  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List available events  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List available events  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
List available events  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List available events  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List available events  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
List available events  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List available events  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List available events  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List available events  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List available events  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List available events  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List available events  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
List disputes  ->  Accept claim  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Accept offer to resolve dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Acknowledge returned item  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Activate subscription  [ label = "reason : reason"] type: string, parameter: body
List disputes  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List disputes  ->  Appeal dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Cancel subscription  [ label = "reason : reason"] type: string, parameter: body
List disputes  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Create order  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List disputes  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create template  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Deny offer to resolve dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Escalate dispute to claim  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List disputes  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List disputes  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List disputes  ->  Make offer to resolve dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Partially update dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Provide evidence  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Provide supporting information for dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List disputes  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List disputes  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Send message about dispute to other party  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Settle dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Show dispute details  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Suspend subscription  [ label = "reason : reason"] type: string, parameter: body
List disputes  ->  Update dispute status  [ label = "dispute_id : dispute_id"] type: string, parameter: path
List disputes  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List disputes  ->  Update order  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Update product  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List disputes  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List disputes  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Accept claim  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Accept offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Acknowledge returned item  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Add tracking information for multiple PayPal transactions  [ label = "transaction_id : transaction_id"] type: string, parameter: body
List event notifications  ->  Add tracking information for multiple PayPal transactions  [ label = "quantity : quantity"] type: int, parameter: body
List event notifications  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List event notifications  ->  Cancel sent invoice  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Cancel unclaimed payout item  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
List event notifications  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Capture authorized payment on subscription  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Create batch payout  [ label = "sender_batch_id : sender_batch_id"] type: string, parameter: body
List event notifications  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Create batch payout  [ label = "recipient_type : recipient_type"] type: string, parameter: body
List event notifications  ->  Create batch payout  [ label = "currency : currency"] type: string, parameter: body
List event notifications  ->  Create batch payout  [ label = "sender_item_id : sender_item_id"] type: int, parameter: body
List event notifications  ->  Create batch payout  [ label = "receiver : receiver"] type: int, parameter: body
List event notifications  ->  Create batch payout  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Create draft invoice  [ label = "invoice_number : invoice_number"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "given_name : given_name"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "email_address : email_address"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "surname : surname"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "quantity : quantity"] type: int, parameter: body
List event notifications  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Create order  [ label = "quantity : quantity"] type: int, parameter: body
List event notifications  ->  Create order  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Create order  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Create order  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Create plan  [ label = "interval_unit : interval_unit"] type: string, parameter: body
List event notifications  ->  Create plan  [ label = "setup_fee_failure_action : setup_fee_failure_action"] type: string, parameter: body
List event notifications  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Create plan  [ label = "product_id : product_id"] type: int, parameter: body
List event notifications  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Create plan  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Create plan  [ label = "tenure_type : tenure_type"] type: string, parameter: body
List event notifications  ->  Create plan  [ label = "percentage : percentage"] type: float, parameter: body
List event notifications  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List event notifications  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Create product  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Create product  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Create product  [ label = "id : id"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "full_name : full_name"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "plan_id : plan_id"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Create subscription  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "given_name : given_name"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "start_time : start_time"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "email_address : email_address"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "surname : surname"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Create subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "email_address : email_address"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "surname : surname"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "id : id"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "given_name : given_name"] type: string, parameter: body
List event notifications  ->  Create template  [ label = "quantity : quantity"] type: int, parameter: body
List event notifications  ->  Create template  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Create template  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Delete external payment  [ label = "transaction_id : transaction_id"] type: string, parameter: path
List event notifications  ->  Delete external refund  [ label = "transaction_id : transaction_id"] type: string, parameter: path
List event notifications  ->  Deny offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Escalate dispute to claim  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "given_name : given_name"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "surname : surname"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "quantity : quantity"] type: int, parameter: body
List event notifications  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "invoice_number : invoice_number"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
List event notifications  ->  Fully update invoice  [ label = "email_address : email_address"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Fully update template  [ label = "email_address : email_address"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "surname : surname"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "given_name : given_name"] type: string, parameter: body
List event notifications  ->  Fully update template  [ label = "quantity : quantity"] type: int, parameter: body
List event notifications  ->  Fully update template  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List event notifications  ->  List disputes  [ label = "start_time : start_time"] type: string, parameter: query
List event notifications  ->  List plans  [ label = "product_id : product_id"] type: int, parameter: query
List event notifications  ->  List transactions for subscription  [ label = "start_time : start_time"] type: string, parameter: query
List event notifications  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Make offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Partially update dispute  [ label = "product_id : product_id"] type: int, parameter: path
List event notifications  ->  Partially update dispute  [ label = "payout_batch_id : payout_batch_id"] type: string, parameter: path
List event notifications  ->  Partially update dispute  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Partially update dispute  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
List event notifications  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "given_name : given_name"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "surname : surname"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List event notifications  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "full_name : full_name"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "plan_id : plan_id"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Search for invoices  [ label = "invoice_number : invoice_number"] type: string, parameter: body
List event notifications  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List event notifications  ->  Send invoice  [ label = "note : note"] type: string, parameter: body
List event notifications  ->  Send message about dispute to other party  [ label = "message : message"] type: string, parameter: body
List event notifications  ->  Show payout batch details  [ label = "payout_batch_id : payout_batch_id"] type: string, parameter: path
List event notifications  ->  Show payout item details  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
List event notifications  ->  Show product details  [ label = "product_id : product_id"] type: int, parameter: path
List event notifications  ->  Simulate webhook event  [ label = "resource_version : resource_version"] type: float, parameter: body
List event notifications  ->  Simulate webhook event  [ label = "event_type : event_type"] type: string, parameter: body
List event notifications  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
List event notifications  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Update or cancel tracking information for PayPal transaction  [ label = "transaction_id : transaction_id"] type: string, parameter: body
List event notifications  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List event notifications  ->  Update order  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Update product  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Update product  [ label = "product_id : product_id"] type: int, parameter: path
List event notifications  ->  Update subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "country_code : country_code"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "postal_code : postal_code"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "full_name : full_name"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List event notifications  ->  Update subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List event notifications  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List event notifications  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
List event notifications  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List event subscriptions for webhook  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List event subscriptions for webhook  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Create order  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Create order  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List event subscriptions for webhook  ->  Create plan  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Create product  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Create product  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Create template  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Create template  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List event subscriptions for webhook  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
List event subscriptions for webhook  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List event subscriptions for webhook  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List event subscriptions for webhook  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List event subscriptions for webhook  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
List invoices  ->  Accept claim  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Accept offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Acknowledge returned item  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List invoices  ->  Cancel sent invoice  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Capture authorized payment on subscription  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create batch payout  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create draft invoice  [ label = "reference : reference"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "invoice_number : invoice_number"] type: int, parameter: body
List invoices  ->  Create draft invoice  [ label = "invoice_date : invoice_date"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "email_address : email_address"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create draft invoice  [ label = "memo : memo"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "surname : surname"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "due_date : due_date"] type: string, parameter: body
List invoices  ->  Create draft invoice  [ label = "given_name : given_name"] type: string, parameter: body
List invoices  ->  Create order  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List invoices  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create product  [ label = "id : id"] type: string, parameter: body
List invoices  ->  Create subscription  [ label = "given_name : given_name"] type: string, parameter: body
List invoices  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create subscription  [ label = "full_name : full_name"] type: string, parameter: body
List invoices  ->  Create subscription  [ label = "surname : surname"] type: string, parameter: body
List invoices  ->  Create subscription  [ label = "email_address : email_address"] type: string, parameter: body
List invoices  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Create template  [ label = "given_name : given_name"] type: string, parameter: body
List invoices  ->  Create template  [ label = "surname : surname"] type: string, parameter: body
List invoices  ->  Create template  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Create template  [ label = "memo : memo"] type: string, parameter: body
List invoices  ->  Create template  [ label = "email_address : email_address"] type: string, parameter: body
List invoices  ->  Create template  [ label = "reference : reference"] type: string, parameter: body
List invoices  ->  Create template  [ label = "id : id"] type: string, parameter: body
List invoices  ->  Create template  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Deny offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Escalate dispute to claim  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "due_date : due_date"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "email_address : email_address"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "surname : surname"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "given_name : given_name"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "reference : reference"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "invoice_number : invoice_number"] type: int, parameter: body
List invoices  ->  Fully update invoice  [ label = "invoice_date : invoice_date"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "memo : memo"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
List invoices  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Fully update template  [ label = "email_address : email_address"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "surname : surname"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "given_name : given_name"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Fully update template  [ label = "memo : memo"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Fully update template  [ label = "reference : reference"] type: string, parameter: body
List invoices  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List invoices  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Make offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Partially update dispute  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List invoices  ->  Record payment for invoice  [ label = "surname : surname"] type: string, parameter: body
List invoices  ->  Record payment for invoice  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Record payment for invoice  [ label = "given_name : given_name"] type: string, parameter: body
List invoices  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Revise plan or quantity of subscription  [ label = "full_name : full_name"] type: string, parameter: body
List invoices  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Search for invoices  [ label = "invoice_number : invoice_number"] type: int, parameter: body
List invoices  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Search for invoices  [ label = "memo : memo"] type: string, parameter: body
List invoices  ->  Search for invoices  [ label = "reference : reference"] type: string, parameter: body
List invoices  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List invoices  ->  Send invoice  [ label = "note : note"] type: string, parameter: body
List invoices  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
List invoices  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List invoices  ->  Update order  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Update product  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List invoices  ->  Update subscription  [ label = "full_name : full_name"] type: string, parameter: body
List invoices  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List invoices  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List plans  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List plans  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List plans  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List plans  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
List plans  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create order  [ label = "description : description"] type: string, parameter: body
List plans  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Create order  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create order  [ label = "name : name"] type: string, parameter: body
List plans  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List plans  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List plans  ->  Create plan  [ label = "description : description"] type: string, parameter: body
List plans  ->  Create plan  [ label = "percentage : percentage"] type: float, parameter: body
List plans  ->  Create plan  [ label = "interval_unit : interval_unit"] type: string, parameter: body
List plans  ->  Create plan  [ label = "tenure_type : tenure_type"] type: string, parameter: body
List plans  ->  Create plan  [ label = "setup_fee_failure_action : setup_fee_failure_action"] type: string, parameter: body
List plans  ->  Create product  [ label = "name : name"] type: string, parameter: body
List plans  ->  Create product  [ label = "description : description"] type: string, parameter: body
List plans  ->  Create product  [ label = "id : id"] type: string, parameter: body
List plans  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List plans  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Create template  [ label = "value : value"] type: float, parameter: body
List plans  ->  Create template  [ label = "id : id"] type: string, parameter: body
List plans  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Create template  [ label = "name : name"] type: string, parameter: body
List plans  ->  Create template  [ label = "description : description"] type: string, parameter: body
List plans  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List plans  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
List plans  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List plans  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
List plans  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List plans  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List plans  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
List plans  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
List plans  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List plans  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List plans  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List plans  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List plans  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List plans  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List plans  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List plans  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List plans  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List plans  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List plans  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List plans  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List plans  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List plans  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List plans  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List plans  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
List plans  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List plans  ->  Update order  [ label = "value : value"] type: float, parameter: body
List plans  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List plans  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List plans  ->  Update product  [ label = "value : value"] type: float, parameter: body
List plans  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List plans  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List plans  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List plans  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
List plans  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List products  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
List products  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List products  ->  Create order  [ label = "description : description"] type: string, parameter: body
List products  ->  Create order  [ label = "name : name"] type: string, parameter: body
List products  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List products  ->  Create plan  [ label = "description : description"] type: string, parameter: body
List products  ->  Create product  [ label = "name : name"] type: string, parameter: body
List products  ->  Create product  [ label = "description : description"] type: string, parameter: body
List products  ->  Create product  [ label = "id : id"] type: int, parameter: body
List products  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List products  ->  Create template  [ label = "description : description"] type: string, parameter: body
List products  ->  Create template  [ label = "id : id"] type: int, parameter: body
List products  ->  Create template  [ label = "name : name"] type: string, parameter: body
List products  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List products  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List products  ->  Fully update invoice  [ label = "id : id"] type: int, parameter: body
List products  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
List products  ->  Fully update template  [ label = "id : id"] type: int, parameter: body
List products  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
List products  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List products  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List products  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List products  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List products  ->  Trigger a sample event  [ label = "id : id"] type: int, parameter: body
List products  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List products  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List products  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
List templates  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Create draft invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "email_address : email_address"] type: string, parameter: body
List templates  ->  Create draft invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Create order  [ label = "name : name"] type: string, parameter: body
List templates  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List templates  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Create product  [ label = "id : id"] type: string, parameter: body
List templates  ->  Create product  [ label = "name : name"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Create subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Create subscription  [ label = "email_address : email_address"] type: string, parameter: body
List templates  ->  Create template  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
List templates  ->  Create template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Create template  [ label = "email_address : email_address"] type: string, parameter: body
List templates  ->  Create template  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Create template  [ label = "id : id"] type: string, parameter: body
List templates  ->  Create template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Create template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Create template  [ label = "field_name : field_name"] type: string, parameter: body
List templates  ->  Create template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Create template  [ label = "name : name"] type: string, parameter: body
List templates  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "email_address : email_address"] type: string, parameter: body
List templates  ->  Fully update invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Fully update invoice  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Fully update template  [ label = "email_address : email_address"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "field_name : field_name"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
List templates  ->  Fully update template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List templates  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Record payment for invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Record payment for invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List templates  ->  Record payment for invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Record payment for invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List templates  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List templates  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
List templates  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List templates  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Update subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
List templates  ->  Update subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
List templates  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List templates  ->  Update subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
List templates  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List templates  ->  Update subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
List templates  ->  Update subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
List templates  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
List transactions  ->  Add tracking information for multiple PayPal transactions  [ label = "transaction_id : transaction_id"] type: string, parameter: body
List transactions  ->  Cancel sent invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Capture authorized payment  [ label = "invoice_id : invoice_id"] type: int, parameter: body
List transactions  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Create order  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Create template  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Delete external payment  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Delete external payment  [ label = "transaction_id : transaction_id"] type: string, parameter: path
List transactions  ->  Delete external refund  [ label = "transaction_id : transaction_id"] type: string, parameter: path
List transactions  ->  Delete external refund  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Delete invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Fully update invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Generate QR code  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List transactions  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Partially update dispute  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Record payment for invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List transactions  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Refund captured payment  [ label = "invoice_id : invoice_id"] type: int, parameter: body
List transactions  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Send invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Send invoice reminder  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Show invoice details  [ label = "invoice_id : invoice_id"] type: int, parameter: path
List transactions  ->  Update or cancel tracking information for PayPal transaction  [ label = "transaction_id : transaction_id"] type: string, parameter: body
List transactions  ->  Update order  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Update product  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List transactions  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List transactions for subscription  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Create draft invoice  [ label = "given_name : given_name"] type: string, parameter: body
List transactions for subscription  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Create draft invoice  [ label = "surname : surname"] type: string, parameter: body
List transactions for subscription  ->  Create order  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List transactions for subscription  ->  Create plan  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Create product  [ label = "id : id"] type: string, parameter: body
List transactions for subscription  ->  Create subscription  [ label = "surname : surname"] type: string, parameter: body
List transactions for subscription  ->  Create subscription  [ label = "given_name : given_name"] type: string, parameter: body
List transactions for subscription  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Create template  [ label = "id : id"] type: string, parameter: body
List transactions for subscription  ->  Create template  [ label = "surname : surname"] type: string, parameter: body
List transactions for subscription  ->  Create template  [ label = "given_name : given_name"] type: string, parameter: body
List transactions for subscription  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Create template  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Fully update invoice  [ label = "surname : surname"] type: string, parameter: body
List transactions for subscription  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
List transactions for subscription  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List transactions for subscription  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Fully update invoice  [ label = "given_name : given_name"] type: string, parameter: body
List transactions for subscription  ->  Fully update template  [ label = "surname : surname"] type: string, parameter: body
List transactions for subscription  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
List transactions for subscription  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Fully update template  [ label = "given_name : given_name"] type: string, parameter: body
List transactions for subscription  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
List transactions for subscription  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List transactions for subscription  ->  Record payment for invoice  [ label = "surname : surname"] type: string, parameter: body
List transactions for subscription  ->  Record payment for invoice  [ label = "given_name : given_name"] type: string, parameter: body
List transactions for subscription  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List transactions for subscription  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
List transactions for subscription  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List transactions for subscription  ->  Update order  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Update plan  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Update product  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
List transactions for subscription  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
List transactions for subscription  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
List webhooks  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
List webhooks  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Create order  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Create order  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Create plan  [ label = "status : status"] type: string, parameter: body
List webhooks  ->  Create plan  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Create plan  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Create product  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Create product  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Create product  [ label = "id : id"] type: string, parameter: body
List webhooks  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Create template  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Create template  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Create template  [ label = "id : id"] type: string, parameter: body
List webhooks  ->  Create webhook  [ label = "url : url"] type: string, parameter: body
List webhooks  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
List webhooks  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
List webhooks  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
List webhooks  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
List webhooks  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
List webhooks  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
List webhooks  ->  Simulate webhook event  [ label = "url : url"] type: string, parameter: body
List webhooks  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
List webhooks  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
List webhooks  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
List webhooks  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show captured payment details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show captured payment details  ->  Authorize payment for order  [ label = "order_id : order_id"] type: string, parameter: path
Show captured payment details  ->  Cancel sent invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Capture authorized payment  [ label = "invoice_id : invoice_id"] type: int, parameter: body
Show captured payment details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Capture authorized payment  [ label = "authorization_id : authorization_id"] type: string, parameter: path
Show captured payment details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Capture payment for order  [ label = "order_id : order_id"] type: string, parameter: path
Show captured payment details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show captured payment details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show captured payment details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show captured payment details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Delete external payment  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Delete external refund  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Delete invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show captured payment details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Fully update invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show captured payment details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show captured payment details  ->  Generate QR code  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show captured payment details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Partially update dispute  [ label = "order_id : order_id"] type: string, parameter: path
Show captured payment details  ->  Partially update dispute  [ label = "authorization_id : authorization_id"] type: string, parameter: path
Show captured payment details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Partially update dispute  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Reauthorize authorized payment  [ label = "authorization_id : authorization_id"] type: string, parameter: path
Show captured payment details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Record payment for invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show captured payment details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Refund captured payment  [ label = "invoice_id : invoice_id"] type: int, parameter: body
Show captured payment details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show captured payment details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Send invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Send invoice reminder  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Show details for authorized payment  [ label = "authorization_id : authorization_id"] type: string, parameter: path
Show captured payment details  ->  Show invoice details  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show captured payment details  ->  Show order details  [ label = "order_id : order_id"] type: string, parameter: path
Show captured payment details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show captured payment details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show captured payment details  ->  Update order  [ label = "order_id : order_id"] type: string, parameter: path
Show captured payment details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show captured payment details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show captured payment details  ->  Void authorized payment  [ label = "authorization_id : authorization_id"] type: string, parameter: path
Show details for authorized payment  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show details for authorized payment  ->  Authorize payment for order  [ label = "order_id : order_id"] type: string, parameter: path
Show details for authorized payment  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Capture payment for order  [ label = "order_id : order_id"] type: string, parameter: path
Show details for authorized payment  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show details for authorized payment  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show details for authorized payment  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show details for authorized payment  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show details for authorized payment  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show details for authorized payment  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show details for authorized payment  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show details for authorized payment  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Partially update dispute  [ label = "order_id : order_id"] type: string, parameter: path
Show details for authorized payment  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show details for authorized payment  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show details for authorized payment  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Show order details  [ label = "order_id : order_id"] type: string, parameter: path
Show details for authorized payment  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show details for authorized payment  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show details for authorized payment  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Update order  [ label = "order_id : order_id"] type: string, parameter: path
Show details for authorized payment  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show details for authorized payment  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show details for authorized payment  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Accept claim  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Accept offer to resolve dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Acknowledge returned item  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Activate subscription  [ label = "reason : reason"] type: string, parameter: body
Show dispute details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show dispute details  ->  Appeal dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Cancel subscription  [ label = "reason : reason"] type: string, parameter: body
Show dispute details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show dispute details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Create product  [ label = "type : type"] type: string, parameter: body
Show dispute details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Deny offer to resolve dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Escalate dispute to claim  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show dispute details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Generate QR code  [ label = "action : action"] type: string, parameter: body
Show dispute details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show dispute details  ->  Make offer to resolve dispute  [ label = "offer_type : offer_type"] type: string, parameter: body
Show dispute details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Make offer to resolve dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Partially update dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Partially update dispute  [ label = "email : email"] type: string, parameter: body
Show dispute details  ->  Provide evidence  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Provide supporting information for dispute  [ label = "notes : notes"] type: string, parameter: body
Show dispute details  ->  Provide supporting information for dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show dispute details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Record payment for invoice  [ label = "type : type"] type: string, parameter: body
Show dispute details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show dispute details  ->  Send message about dispute to other party  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Settle dispute  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Simulate webhook event  [ label = "event_type : event_type"] type: string, parameter: body
Show dispute details  ->  Suspend subscription  [ label = "reason : reason"] type: string, parameter: body
Show dispute details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Update dispute status  [ label = "dispute_id : dispute_id"] type: string, parameter: path
Show dispute details  ->  Update dispute status  [ label = "action : action"] type: string, parameter: body
Show dispute details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show dispute details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show dispute details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show dispute details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show dispute details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show event notification details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show event notification details  ->  Authorize payment for order  [ label = "order_id : order_id"] type: string, parameter: path
Show event notification details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Capture payment for order  [ label = "order_id : order_id"] type: string, parameter: path
Show event notification details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show event notification details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show event notification details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show event notification details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show event notification details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show event notification details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show event notification details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show event notification details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Partially update dispute  [ label = "order_id : order_id"] type: string, parameter: path
Show event notification details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show event notification details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show event notification details  ->  Show order details  [ label = "order_id : order_id"] type: string, parameter: path
Show event notification details  ->  Simulate webhook event  [ label = "event_type : event_type"] type: string, parameter: body
Show event notification details  ->  Simulate webhook event  [ label = "resource_version : resource_version"] type: float, parameter: body
Show event notification details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show event notification details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show event notification details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Update order  [ label = "order_id : order_id"] type: string, parameter: path
Show event notification details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show event notification details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show event notification details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Accept claim  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Accept offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Acknowledge returned item  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Add tracking information for multiple PayPal transactions  [ label = "quantity : quantity"] type: int, parameter: body
Show invoice details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show invoice details  ->  Cancel sent invoice  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Capture authorized payment on subscription  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create batch payout  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "term_type : term_type"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "percent : percent"] type: float, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "memo : memo"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "due_date : due_date"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "label : label"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "email_address : email_address"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "surname : surname"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "reference : reference"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "quantity : quantity"] type: int, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "invoice_number : invoice_number"] type: int, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "logo_url : logo_url"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "national_number : national_number"] type: int, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "tax_id : tax_id"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "website : website"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "invoice_date : invoice_date"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "phone_type : phone_type"] type: string, parameter: body
Show invoice details  ->  Create draft invoice  [ label = "terms_and_conditions : terms_and_conditions"] type: string, parameter: body
Show invoice details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Create order  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Create order  [ label = "quantity : quantity"] type: int, parameter: body
Show invoice details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show invoice details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create plan  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show invoice details  ->  Create product  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "given_name : given_name"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Create subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "email_address : email_address"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "surname : surname"] type: string, parameter: body
Show invoice details  ->  Create subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "tax_id : tax_id"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "label : label"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "phone_type : phone_type"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "terms_and_conditions : terms_and_conditions"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Create template  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Create template  [ label = "percent : percent"] type: float, parameter: body
Show invoice details  ->  Create template  [ label = "memo : memo"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "email_address : email_address"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "surname : surname"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "given_name : given_name"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "website : website"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "national_number : national_number"] type: int, parameter: body
Show invoice details  ->  Create template  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "quantity : quantity"] type: int, parameter: body
Show invoice details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "logo_url : logo_url"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "term_type : term_type"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Create template  [ label = "reference : reference"] type: string, parameter: body
Show invoice details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Delete template  [ label = "template_id : template_id"] type: string, parameter: path
Show invoice details  ->  Deny offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Escalate dispute to claim  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "phone_type : phone_type"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "reference : reference"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "tax_id : tax_id"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "website : website"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "logo_url : logo_url"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "due_date : due_date"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "invoice_number : invoice_number"] type: int, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "national_number : national_number"] type: int, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "term_type : term_type"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "invoice_date : invoice_date"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "memo : memo"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "quantity : quantity"] type: int, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "email_address : email_address"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "surname : surname"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "percent : percent"] type: float, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Fully update invoice  [ label = "label : label"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "label : label"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "website : website"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "logo_url : logo_url"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "phone_type : phone_type"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "terms_and_conditions : terms_and_conditions"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "tax_id : tax_id"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "template_id : template_id"] type: string, parameter: path
Show invoice details  ->  Fully update template  [ label = "memo : memo"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Fully update template  [ label = "percent : percent"] type: float, parameter: body
Show invoice details  ->  Fully update template  [ label = "given_name : given_name"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "national_number : national_number"] type: int, parameter: body
Show invoice details  ->  Fully update template  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Fully update template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "quantity : quantity"] type: int, parameter: body
Show invoice details  ->  Fully update template  [ label = "email_address : email_address"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "surname : surname"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "reference : reference"] type: string, parameter: body
Show invoice details  ->  Fully update template  [ label = "term_type : term_type"] type: string, parameter: body
Show invoice details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show invoice details  ->  Make offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Partially update dispute  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "surname : surname"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Record payment for invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Revise plan or quantity of subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Search for invoices  [ label = "memo : memo"] type: string, parameter: body
Show invoice details  ->  Search for invoices  [ label = "reference : reference"] type: string, parameter: body
Show invoice details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Search for invoices  [ label = "invoice_number : invoice_number"] type: int, parameter: body
Show invoice details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show invoice details  ->  Send invoice  [ label = "note : note"] type: string, parameter: body
Show invoice details  ->  Show template details  [ label = "template_id : template_id"] type: string, parameter: path
Show invoice details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show invoice details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show invoice details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Update subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show invoice details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show invoice details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show invoice details  ->  Update subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show invoice details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show invoice details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show order details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create draft invoice  [ label = "surname : surname"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create draft invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "email_address : email_address"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Create draft invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Create draft invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create order  [ label = "intent : intent"] type: string, parameter: body
Show order details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show order details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "email_address : email_address"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "surname : surname"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "given_name : given_name"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show order details  ->  Create subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Create template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Create template  [ label = "email_address : email_address"] type: string, parameter: body
Show order details  ->  Create template  [ label = "surname : surname"] type: string, parameter: body
Show order details  ->  Create template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Create template  [ label = "given_name : given_name"] type: string, parameter: body
Show order details  ->  Create template  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Create template  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Create template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show order details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "email_address : email_address"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "surname : surname"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Fully update invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show order details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Fully update invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "email_address : email_address"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Fully update template  [ label = "surname : surname"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Fully update template  [ label = "given_name : given_name"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show order details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "surname : surname"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Record payment for invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Revise plan or quantity of subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show order details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show order details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show order details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Update subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show order details  ->  Update subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show order details  ->  Update subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show order details  ->  Update subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show order details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show order details  ->  Update subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show order details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show order details  ->  Update subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show order details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Accept claim  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Accept offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Acknowledge returned item  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Add tracking information for multiple PayPal transactions  [ label = "transaction_id : transaction_id"] type: string, parameter: body
Show payout batch details  ->  Cancel sent invoice  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Cancel unclaimed payout item  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
Show payout batch details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Capture authorized payment on subscription  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "recipient_type : recipient_type"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "sender_item_id : sender_item_id"] type: int, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "receiver : receiver"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "email_message : email_message"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "currency : currency"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "email_subject : email_subject"] type: string, parameter: body
Show payout batch details  ->  Create batch payout  [ label = "sender_batch_id : sender_batch_id"] type: string, parameter: body
Show payout batch details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Create draft invoice  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Create template  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Delete external payment  [ label = "transaction_id : transaction_id"] type: string, parameter: path
Show payout batch details  ->  Delete external refund  [ label = "transaction_id : transaction_id"] type: string, parameter: path
Show payout batch details  ->  Deny offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Escalate dispute to claim  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Fully update invoice  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Fully update template  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Make offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Partially update dispute  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Partially update dispute  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
Show payout batch details  ->  Partially update dispute  [ label = "payout_batch_id : payout_batch_id"] type: string, parameter: path
Show payout batch details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Record payment for invoice  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show payout batch details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Send invoice  [ label = "note : note"] type: string, parameter: body
Show payout batch details  ->  Send message about dispute to other party  [ label = "message : message"] type: string, parameter: body
Show payout batch details  ->  Show payout item details  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
Show payout batch details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Update or cancel tracking information for PayPal transaction  [ label = "transaction_id : transaction_id"] type: string, parameter: body
Show payout batch details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show payout batch details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show payout batch details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Accept claim  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Accept offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Acknowledge returned item  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Add tracking information for multiple PayPal transactions  [ label = "transaction_id : transaction_id"] type: string, parameter: body
Show payout item details  ->  Cancel sent invoice  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Cancel unclaimed payout item  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
Show payout item details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Capture authorized payment on subscription  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create batch payout  [ label = "sender_item_id : sender_item_id"] type: int, parameter: body
Show payout item details  ->  Create batch payout  [ label = "currency : currency"] type: string, parameter: body
Show payout item details  ->  Create batch payout  [ label = "receiver : receiver"] type: string, parameter: body
Show payout item details  ->  Create batch payout  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Create batch payout  [ label = "sender_batch_id : sender_batch_id"] type: string, parameter: body
Show payout item details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create batch payout  [ label = "recipient_type : recipient_type"] type: string, parameter: body
Show payout item details  ->  Create draft invoice  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Create template  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Delete external payment  [ label = "transaction_id : transaction_id"] type: string, parameter: path
Show payout item details  ->  Delete external refund  [ label = "transaction_id : transaction_id"] type: string, parameter: path
Show payout item details  ->  Deny offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Escalate dispute to claim  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Fully update invoice  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Fully update template  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Make offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Partially update dispute  [ label = "payout_batch_id : payout_batch_id"] type: string, parameter: path
Show payout item details  ->  Partially update dispute  [ label = "payout_item_id : payout_item_id"] type: string, parameter: path
Show payout item details  ->  Partially update dispute  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show payout item details  ->  Record payment for invoice  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Send invoice  [ label = "note : note"] type: string, parameter: body
Show payout item details  ->  Send message about dispute to other party  [ label = "message : message"] type: string, parameter: body
Show payout item details  ->  Show payout batch details  [ label = "payout_batch_id : payout_batch_id"] type: string, parameter: path
Show payout item details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Update or cancel tracking information for PayPal transaction  [ label = "transaction_id : transaction_id"] type: string, parameter: body
Show payout item details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show payout item details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show payout item details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show plan details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Create order  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "interval_unit : interval_unit"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Create plan  [ label = "tenure_type : tenure_type"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "product_id : product_id"] type: int, parameter: body
Show plan details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "setup_fee_failure_action : setup_fee_failure_action"] type: string, parameter: body
Show plan details  ->  Create plan  [ label = "percentage : percentage"] type: float, parameter: body
Show plan details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show plan details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Create product  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show plan details  ->  Create template  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show plan details  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show plan details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
Show plan details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show plan details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show plan details  ->  List plans  [ label = "product_id : product_id"] type: int, parameter: query
Show plan details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Partially update dispute  [ label = "product_id : product_id"] type: int, parameter: path
Show plan details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show plan details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show plan details  ->  Show product details  [ label = "product_id : product_id"] type: int, parameter: path
Show plan details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show plan details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show plan details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Update product  [ label = "product_id : product_id"] type: int, parameter: path
Show plan details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show plan details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show plan details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show plan details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show product details  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Create order  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Create plan  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Create product  [ label = "type : type"] type: string, parameter: body
Show product details  ->  Create product  [ label = "home_url : home_url"] type: string, parameter: body
Show product details  ->  Create product  [ label = "id : id"] type: int, parameter: body
Show product details  ->  Create product  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Create product  [ label = "image_url : image_url"] type: string, parameter: body
Show product details  ->  Create product  [ label = "category : category"] type: string, parameter: body
Show product details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Create template  [ label = "id : id"] type: int, parameter: body
Show product details  ->  Create template  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Fully update invoice  [ label = "id : id"] type: int, parameter: body
Show product details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Fully update template  [ label = "id : id"] type: int, parameter: body
Show product details  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
Show product details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show product details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Record payment for invoice  [ label = "type : type"] type: string, parameter: body
Show product details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Trigger a sample event  [ label = "id : id"] type: int, parameter: body
Show product details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show product details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show refund details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show refund details  ->  Cancel sent invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Capture authorized payment  [ label = "note_to_payer : note_to_payer"] type: string, parameter: body
Show refund details  ->  Capture authorized payment  [ label = "invoice_id : invoice_id"] type: int, parameter: body
Show refund details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show refund details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show refund details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show refund details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Delete external payment  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Delete external refund  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Delete invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show refund details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Fully update invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show refund details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show refund details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Generate QR code  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show refund details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Partially update dispute  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Record payment for invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show refund details  ->  Refund captured payment  [ label = "note_to_payer : note_to_payer"] type: string, parameter: body
Show refund details  ->  Refund captured payment  [ label = "invoice_id : invoice_id"] type: int, parameter: body
Show refund details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show refund details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Send invoice  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Send invoice reminder  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Show invoice details  [ label = "invoice_id : invoice_id"] type: int, parameter: path
Show refund details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show refund details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show refund details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show refund details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show refund details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show subscription details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show subscription details  ->  Add tracking information for multiple PayPal transactions  [ label = "quantity : quantity"] type: int, parameter: body
Show subscription details  ->  Create draft invoice  [ label = "quantity : quantity"] type: int, parameter: body
Show subscription details  ->  Create order  [ label = "quantity : quantity"] type: int, parameter: body
Show subscription details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show subscription details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show subscription details  ->  Create subscription  [ label = "plan_id : plan_id"] type: string, parameter: body
Show subscription details  ->  Create subscription  [ label = "start_time : start_time"] type: string, parameter: body
Show subscription details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show subscription details  ->  Create template  [ label = "quantity : quantity"] type: int, parameter: body
Show subscription details  ->  Fully update invoice  [ label = "quantity : quantity"] type: int, parameter: body
Show subscription details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show subscription details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show subscription details  ->  Fully update template  [ label = "quantity : quantity"] type: int, parameter: body
Show subscription details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show subscription details  ->  List disputes  [ label = "start_time : start_time"] type: string, parameter: query
Show subscription details  ->  List event notifications  [ label = "start_time : start_time"] type: string, parameter: query
Show subscription details  ->  List transactions for subscription  [ label = "start_time : start_time"] type: string, parameter: query
Show subscription details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show subscription details  ->  Revise plan or quantity of subscription  [ label = "plan_id : plan_id"] type: string, parameter: body
Show subscription details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show subscription details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show subscription details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show template details  ->  Accept claim  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Accept offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Acknowledge returned item  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Add tracking information for multiple PayPal transactions  [ label = "quantity : quantity"] type: int, parameter: body
Show template details  ->  Cancel sent invoice  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Cancel sent invoice  [ label = "additional_recipients : additional_recipients"] type: string, parameter: body
Show template details  ->  Capture authorized payment  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Capture authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Capture authorized payment on subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Capture authorized payment on subscription  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Capture authorized payment on subscription  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Create batch payout  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Create batch payout  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Create draft invoice  [ label = "memo : memo"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "email_address : email_address"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "surname : surname"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "phone_type : phone_type"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "tax_id : tax_id"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Create draft invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "website : website"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "percent : percent"] type: int, parameter: body
Show template details  ->  Create draft invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "national_number : national_number"] type: int, parameter: body
Show template details  ->  Create draft invoice  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "quantity : quantity"] type: int, parameter: body
Show template details  ->  Create draft invoice  [ label = "term_type : term_type"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "label : label"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "reference : reference"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "terms_and_conditions : terms_and_conditions"] type: string, parameter: body
Show template details  ->  Create draft invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Create draft invoice  [ label = "logo_url : logo_url"] type: string, parameter: body
Show template details  ->  Create order  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Create order  [ label = "quantity : quantity"] type: int, parameter: body
Show template details  ->  Create order  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Create order  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Create plan  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Create plan  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Create plan  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Create product  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "given_name : given_name"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "email_address : email_address"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Create subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Create subscription  [ label = "surname : surname"] type: string, parameter: body
Show template details  ->  Create subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Create template  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show template details  ->  Create template  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Create template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Create template  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Create template  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show template details  ->  Create template  [ label = "tax_id : tax_id"] type: string, parameter: body
Show template details  ->  Create template  [ label = "reference : reference"] type: string, parameter: body
Show template details  ->  Create template  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show template details  ->  Create template  [ label = "label : label"] type: string, parameter: body
Show template details  ->  Create template  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Create template  [ label = "given_name : given_name"] type: string, parameter: body
Show template details  ->  Create template  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Create template  [ label = "website : website"] type: string, parameter: body
Show template details  ->  Create template  [ label = "reference_url : reference_url"] type: string, parameter: body
Show template details  ->  Create template  [ label = "percent : percent"] type: int, parameter: body
Show template details  ->  Create template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Create template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Create template  [ label = "logo_url : logo_url"] type: string, parameter: body
Show template details  ->  Create template  [ label = "additional_info : additional_info"] type: string, parameter: body
Show template details  ->  Create template  [ label = "additional_recipients : additional_recipients"] type: string, parameter: body
Show template details  ->  Create template  [ label = "email_address : email_address"] type: string, parameter: body
Show template details  ->  Create template  [ label = "surname : surname"] type: string, parameter: body
Show template details  ->  Create template  [ label = "field_name : field_name"] type: string, parameter: body
Show template details  ->  Create template  [ label = "quantity : quantity"] type: int, parameter: body
Show template details  ->  Create template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Create template  [ label = "national_number : national_number"] type: int, parameter: body
Show template details  ->  Create template  [ label = "term_type : term_type"] type: string, parameter: body
Show template details  ->  Create template  [ label = "terms_and_conditions : terms_and_conditions"] type: string, parameter: body
Show template details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Create template  [ label = "memo : memo"] type: string, parameter: body
Show template details  ->  Create template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Create template  [ label = "phone_type : phone_type"] type: string, parameter: body
Show template details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Deny offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Escalate dispute to claim  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "website : website"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "phone_type : phone_type"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Fully update invoice  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "national_number : national_number"] type: int, parameter: body
Show template details  ->  Fully update invoice  [ label = "term_type : term_type"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "logo_url : logo_url"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "quantity : quantity"] type: int, parameter: body
Show template details  ->  Fully update invoice  [ label = "email_address : email_address"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "surname : surname"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "percent : percent"] type: int, parameter: body
Show template details  ->  Fully update invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "reference : reference"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Fully update invoice  [ label = "label : label"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "tax_id : tax_id"] type: string, parameter: body
Show template details  ->  Fully update invoice  [ label = "memo : memo"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "national_number : national_number"] type: int, parameter: body
Show template details  ->  Fully update template  [ label = "term_type : term_type"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "terms_and_conditions : terms_and_conditions"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "email_address : email_address"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "surname : surname"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "label : label"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "given_name : given_name"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "percent : percent"] type: int, parameter: body
Show template details  ->  Fully update template  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "unit_of_measure : unit_of_measure"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "reference : reference"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "additional_recipients : additional_recipients"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "reference_url : reference_url"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "tax_id : tax_id"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "additional_notes : additional_notes"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "logo_url : logo_url"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "additional_info : additional_info"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Fully update template  [ label = "website : website"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Fully update template  [ label = "phone_type : phone_type"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "quantity : quantity"] type: int, parameter: body
Show template details  ->  Fully update template  [ label = "memo : memo"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "field_name : field_name"] type: string, parameter: body
Show template details  ->  Fully update template  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  List all balances  [ label = "currency_code : currency_code"] type: string, parameter: query
Show template details  ->  Make offer to resolve dispute  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Make offer to resolve dispute  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Make offer to resolve dispute  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Partially update dispute  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Partially update dispute  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Reauthorize authorized payment  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Reauthorize authorized payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Record payment for invoice  [ label = "surname : surname"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "given_name : given_name"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Record payment for invoice  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Record payment for invoice  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Refund captured payment  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Refund captured payment  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Revise plan or quantity of subscription  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Search for invoices  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Search for invoices  [ label = "reference : reference"] type: string, parameter: body
Show template details  ->  Search for invoices  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Search for invoices  [ label = "memo : memo"] type: string, parameter: body
Show template details  ->  Send invoice  [ label = "note : note"] type: string, parameter: body
Show template details  ->  Send invoice  [ label = "additional_recipients : additional_recipients"] type: string, parameter: body
Show template details  ->  Send invoice reminder  [ label = "additional_recipients : additional_recipients"] type: string, parameter: body
Show template details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show template details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Update order  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Update plan  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Update pricing  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Update pricing  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Update product  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Update subscription  [ label = "admin_area_2 : admin_area_2"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "currency_code : currency_code"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "admin_area_1 : admin_area_1"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "address_line_2 : address_line_2"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "country_code : country_code"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "address_line_1 : address_line_1"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "postal_code : postal_code"] type: int, parameter: body
Show template details  ->  Update subscription  [ label = "full_name : full_name"] type: string, parameter: body
Show template details  ->  Update subscription  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Update webhook  [ label = "value : value"] type: float, parameter: body
Show template details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Add tracking information for multiple PayPal transactions  [ label = "status : status"] type: string, parameter: body
Show webhook details  ->  Create draft invoice  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Create draft invoice  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Create order  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Create order  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Create plan  [ label = "status : status"] type: string, parameter: body
Show webhook details  ->  Create plan  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Create plan  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Create product  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Create product  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Create product  [ label = "id : id"] type: string, parameter: body
Show webhook details  ->  Create subscription  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Create template  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Create template  [ label = "id : id"] type: string, parameter: body
Show webhook details  ->  Create template  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Create webhook  [ label = "url : url"] type: string, parameter: body
Show webhook details  ->  Create webhook  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Fully update invoice  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Fully update invoice  [ label = "status : status"] type: string, parameter: body
Show webhook details  ->  Fully update invoice  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Fully update invoice  [ label = "id : id"] type: string, parameter: body
Show webhook details  ->  Fully update template  [ label = "description : description"] type: string, parameter: body
Show webhook details  ->  Fully update template  [ label = "id : id"] type: string, parameter: body
Show webhook details  ->  Fully update template  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Record payment for invoice  [ label = "method : method"] type: string, parameter: body
Show webhook details  ->  Record payment for invoice  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Revise plan or quantity of subscription  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Search for invoices  [ label = "status : status"] type: string, parameter: body
Show webhook details  ->  Simulate webhook event  [ label = "url : url"] type: string, parameter: body
Show webhook details  ->  Trigger a sample event  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Trigger a sample event  [ label = "id : id"] type: string, parameter: body
Show webhook details  ->  Update or cancel tracking information for PayPal transaction  [ label = "status : status"] type: string, parameter: body
Show webhook details  ->  Update subscription  [ label = "name : name"] type: string, parameter: body
Show webhook details  ->  Update webhook  [ label = "name : name"] type: string, parameter: body
Resend event notification
User Info
Delete webhook
Deactivate plan
Generate access_token
Activate plan
Generate client_token
Generate invoice number
Verify webhook signature
Terminate access_token

-----------List of endpoints and methods--------------

Generate access_token, method: POST
Terminate access_token, method: POST
User Info, method: GET
Generate client_token, method: POST
Create order, method: POST
Show order details, method: GET
Update order, method: PATCH
Authorize payment for order, method: POST
Capture payment for order, method: POST
Show details for authorized payment, method: GET
Reauthorize authorized payment, method: POST
Void authorized payment, method: POST
Capture authorized payment, method: POST
Show captured payment details, method: GET
Refund captured payment, method: POST
Show refund details, method: GET
Generate invoice number, method: POST
Create draft invoice, method: POST
Show invoice details, method: GET
List invoices, method: GET
Generate QR code, method: POST
Fully update invoice, method: PUT
Send invoice, method: POST
Send invoice reminder, method: POST
Cancel sent invoice, method: POST
Delete invoice, method: DELETE
Search for invoices, method: POST
Record payment for invoice, method: POST
Delete external payment, method: DELETE
Delete external refund, method: DELETE
List templates, method: GET
Create template, method: POST
Show template details, method: GET
Fully update template, method: PUT
Delete template, method: DELETE
Create product, method: POST
List products, method: GET
Show product details, method: GET
Update product, method: PATCH
Create plan, method: POST
List plans, method: GET
Show plan details, method: GET
Update plan, method: PATCH
Deactivate plan, method: POST
Activate plan, method: POST
Update pricing, method: POST
Create subscription, method: POST
Show subscription details, method: GET
Update subscription, method: PATCH
Revise plan or quantity of subscription, method: POST
Suspend subscription, method: POST
Activate subscription, method: POST
Cancel subscription, method: POST
Capture authorized payment on subscription, method: POST
List transactions for subscription, method: GET
Create batch payout, method: POST
Show payout batch details, method: GET
Show payout item details, method: GET
Cancel unclaimed payout item, method: POST
List available events, method: GET
Create webhook, method: POST
List webhooks, method: GET
Show webhook details, method: GET
List event notifications, method: GET
List event subscriptions for webhook, method: GET
Show event notification details, method: GET
Trigger a sample event, method: POST
Verify webhook signature, method: POST
Resend event notification, method: POST
Simulate webhook event, method: POST
Update webhook, method: PATCH
Delete webhook, method: DELETE
Add tracking information for multiple PayPal transactions, method: POST
Update or cancel tracking information for PayPal transaction, method: PUT
List transactions, method: GET
List all balances, method: GET
List disputes, method: GET
Show dispute details, method: GET
Accept claim, method: POST
Appeal dispute, method: POST
Settle dispute, method: POST
Update dispute status, method: POST
Make offer to resolve dispute, method: POST
Provide evidence, method: POST
Acknowledge returned item, method: POST
Provide supporting information for dispute, method: POST
Escalate dispute to claim, method: POST
Accept offer to resolve dispute, method: POST
Send message about dispute to other party, method: POST
Deny offer to resolve dispute, method: POST
Partially update dispute, method: PATCH
