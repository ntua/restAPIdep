----------------------------------------------
       Endpoint dependencies per attribute       
       Number of api endpoints (nodes): 255
       Number of api endpoints (nodes) with inter-dependency: 215
       Number of dependent only api endpoints (nodes): 87
       Number of api endpoints (nodes) that only derive dependencies: 44
       Number of api endpoints (nodes) that are both dependent and derive dependencies: 84
       Number of dependencies (edges): 1775
       Number of dependencies per attribute: 3154
       Number of dependencies per parameter type (body/query/path): 2175/592/387
----------------------------------------------
Add IM directory group members  ->  Add group admins  [ label = "ids : id"] type: string, parameter: body
Add IM directory group members  ->  Add group members  [ label = "ids : id"] type: string, parameter: body
Add a Zoom Room  ->  Add a location  [ label = "location_id : parent_location_id"] type: string, parameter: body
Add a Zoom Room  ->  Change Zoom Rooms app version  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Change Zoom Rooms app version  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Change a Zoom Room's location  [ label = "location_id : location_id"] type: string, parameter: body
Add a Zoom Room  ->  Change a Zoom Room's location  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Change a Zoom Room's location  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Change the assigned parent location  [ label = "location_id : parent_location_id"] type: string, parameter: body
Add a Zoom Room  ->  Change the assigned parent location  [ label = "location_id : locationId"] type: string, parameter: path
Add a Zoom Room  ->  Check-in or check-out of a Zoom Room  [ label = "id : id"] type: string, parameter: path
Add a Zoom Room  ->  Check-in or check-out of a Zoom Room  [ label = "room_id : id"] type: string, parameter: path
Add a Zoom Room  ->  Create a device profile  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Create a device profile  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Create a reservation  [ label = "id : workspaceId"] type: string, parameter: path
Add a Zoom Room  ->  Create a reservation  [ label = "room_id : workspaceId"] type: string, parameter: path
Add a Zoom Room  ->  Delete a Zoom Room  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Delete a Zoom Room  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Delete a device profile  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Delete a device profile  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Delete a reservation  [ label = "id : workspaceId"] type: string, parameter: path
Add a Zoom Room  ->  Delete a reservation  [ label = "room_id : workspaceId"] type: string, parameter: path
Add a Zoom Room  ->  Get Zoom Room location profile  [ label = "location_id : locationId"] type: string, parameter: path
Add a Zoom Room  ->  Get Zoom Room profile  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get Zoom Room profile  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get Zoom Room settings  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get Zoom Room settings  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get a device profile  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get a device profile  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get device information  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get device information  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Get location settings  [ label = "location_id : locationId"] type: string, parameter: path
Add a Zoom Room  ->  List Zoom Room devices  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  List Zoom Room devices  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  List Zoom Room locations  [ label = "location_id : parent_location_id"] type: string, parameter: query
Add a Zoom Room  ->  List Zoom Rooms  [ label = "location_id : location_id"] type: string, parameter: query
Add a Zoom Room  ->  List Zoom Rooms  [ label = "type : type"] type: string, parameter: query
Add a Zoom Room  ->  List device profiles  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  List device profiles  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  List workspaces  [ label = "location_id : location_id"] type: string, parameter: query
Add a Zoom Room  ->  Update E911 digital signage  [ label = "id : target_ids"] type: string, parameter: body
Add a Zoom Room  ->  Update E911 digital signage  [ label = "room_id : target_ids"] type: string, parameter: body
Add a Zoom Room  ->  Update Zoom Room location profile  [ label = "location_id : locationId"] type: string, parameter: path
Add a Zoom Room  ->  Update Zoom Room settings  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Update Zoom Room settings  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Update a Zoom Room profile  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Update a Zoom Room profile  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Update a Zoom Room profile  [ label = "name : name"] type: string, parameter: body
Add a Zoom Room  ->  Update a device profile  [ label = "id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Update a device profile  [ label = "room_id : roomId"] type: string, parameter: path
Add a Zoom Room  ->  Update a reservation  [ label = "id : workspaceId"] type: string, parameter: path
Add a Zoom Room  ->  Update a reservation  [ label = "room_id : workspaceId"] type: string, parameter: path
Add a Zoom Room  ->  Update location settings  [ label = "location_id : locationId"] type: string, parameter: path
Add a location  ->  Add a Zoom Room  [ label = "id : location_id"] type: string, parameter: body
Add a location  ->  Add a Zoom Room  [ label = "parent_location_id : location_id"] type: string, parameter: body
Add a location  ->  Change a Zoom Room's location  [ label = "id : location_id"] type: string, parameter: body
Add a location  ->  Change a Zoom Room's location  [ label = "parent_location_id : location_id"] type: string, parameter: body
Add a location  ->  Change the assigned parent location  [ label = "id : parent_location_id"] type: string, parameter: body
Add a location  ->  Change the assigned parent location  [ label = "id : locationId"] type: string, parameter: path
Add a location  ->  Change the assigned parent location  [ label = "parent_location_id : parent_location_id"] type: string, parameter: body
Add a location  ->  Change the assigned parent location  [ label = "parent_location_id : locationId"] type: string, parameter: path
Add a location  ->  Get Zoom Room location profile  [ label = "parent_location_id : locationId"] type: string, parameter: path
Add a location  ->  Get Zoom Room location profile  [ label = "id : locationId"] type: string, parameter: path
Add a location  ->  Get location settings  [ label = "parent_location_id : locationId"] type: string, parameter: path
Add a location  ->  Get location settings  [ label = "id : locationId"] type: string, parameter: path
Add a location  ->  List Zoom Room locations  [ label = "parent_location_id : parent_location_id"] type: string, parameter: query
Add a location  ->  List Zoom Room locations  [ label = "id : parent_location_id"] type: string, parameter: query
Add a location  ->  List Zoom Rooms  [ label = "parent_location_id : location_id"] type: string, parameter: query
Add a location  ->  List Zoom Rooms  [ label = "id : location_id"] type: string, parameter: query
Add a location  ->  List workspaces  [ label = "id : location_id"] type: string, parameter: query
Add a location  ->  List workspaces  [ label = "parent_location_id : location_id"] type: string, parameter: query
Add a location  ->  Update Zoom Room location profile  [ label = "parent_location_id : locationId"] type: string, parameter: path
Add a location  ->  Update Zoom Room location profile  [ label = "id : locationId"] type: string, parameter: path
Add a location  ->  Update location settings  [ label = "parent_location_id : locationId"] type: string, parameter: path
Add a location  ->  Update location settings  [ label = "id : locationId"] type: string, parameter: path
Add a meeting registrant  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Add a meeting registrant  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Add a meeting registrant  ->  Delete a meeting  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  Delete a webinar  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  Get a meeting  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  Get a webinar registrant  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  Get webinar absentees  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  List meeting registrants  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  List webinar registrants  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Add a meeting registrant  ->  Update a meeting  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a meeting registrant  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Add a meeting registrant  ->  Update registrant's status  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a user's TSP account  ->  Create a meeting  [ label = "code : weekly_days"] type: int, parameter: body
Add a user's TSP account  ->  Create a webinar  [ label = "code : weekly_days"] type: int, parameter: body
Add a user's TSP account  ->  Delete a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
Add a user's TSP account  ->  Get a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
Add a user's TSP account  ->  Get active/inactive host reports  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  Get meeting recordings  [ label = "code : ttl"] type: int, parameter: query
Add a user's TSP account  ->  Get telephone reports  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  Get telephone reports  [ label = "code : type"] type: int, parameter: query
Add a user's TSP account  ->  Get zoom meetings client feedback  [ label = "code : feedbackId"] type: int, parameter: path
Add a user's TSP account  ->  List H.323/SIP devices  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List IM directory group members  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List SIP phones  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List Zoom Rooms  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List group members  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List meeting registrants  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List meetings  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List members in a role  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List recording registrants  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List users  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List webinar registrants  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  List webinars  [ label = "code : page_number"] type: int, parameter: query
Add a user's TSP account  ->  Update a TSP account  [ label = "code : code"] type: int, parameter: body
Add a user's TSP account  ->  Update a TSP account  [ label = "country_label : country_label"] type: string, parameter: body
Add a user's TSP account  ->  Update a TSP account  [ label = "leader_pin : tsp_bridge"] type: string, parameter: body
Add a user's TSP account  ->  Update a TSP account  [ label = "code : tspId"] type: int, parameter: path
Add a user's TSP account  ->  Update a TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Add a user's TSP account  ->  Update a TSP account  [ label = "conference_code : conference_code"] type: string, parameter: body
Add a user's TSP account  ->  Update a TSP account  [ label = "type : type"] type: string, parameter: body
Add a user's TSP account  ->  Update a TSP account  [ label = "number : number"] type: string, parameter: body
Add a user's TSP account  ->  Update a user  [ label = "code : value"] type: int, parameter: body
Add a user's TSP account  ->  Update account's TSP information  [ label = "leader_pin : tsp_bridge"] type: string, parameter: body
Add a user's TSP account  ->  Update account's TSP information  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Add a webinar registrant  ->  Create a webinar  [ label = "topic : topic"] type: string, parameter: body
Add a webinar registrant  ->  Create a webinar  [ label = "topic : agenda"] type: string, parameter: body
Add a webinar registrant  ->  Delete a meeting  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  Delete a webinar  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  Get a meeting  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  Get a webinar registrant  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  Get webinar absentees  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  List meeting registrants  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  List webinar registrants  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  Update a meeting  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add a webinar registrant  ->  Update a webinar  [ label = "topic : agenda"] type: string, parameter: body
Add a webinar registrant  ->  Update a webinar  [ label = "topic : topic"] type: string, parameter: body
Add a webinar registrant  ->  Update registrant's status  [ label = "occurrence_id : occurrence_id"] type: int, parameter: query
Add assistants  ->  Create a reservation  [ label = "ids : reserve_for"] type: string, parameter: body
Add assistants  ->  Delete Virtual Background files  [ label = "ids : userId"] type: string, parameter: path
Add assistants  ->  Delete a scheduler  [ label = "ids : schedulerId"] type: string, parameter: path
Add assistants  ->  Delete a user assistant  [ label = "ids : assistantId"] type: string, parameter: path
Add assistants  ->  Update a user  [ label = "ids : cms_user_id"] type: string, parameter: body
Add assistants  ->  Update a user's presence status  [ label = "ids : userId"] type: string, parameter: path
Add assistants  ->  Upload Virtual Background files  [ label = "ids : userId"] type: string, parameter: path
Add group admins  ->  Add IM directory group members  [ label = "ids : id"] type: string, parameter: body
Add group admins  ->  Add group members  [ label = "ids : id"] type: string, parameter: body
Add group members  ->  Add IM directory group members  [ label = "ids : id"] type: string, parameter: body
Add group members  ->  Add group admins  [ label = "ids : id"] type: string, parameter: body
Add panelists  ->  Delete a webinar registrant  [ label = "id : webinarId"] type: int, parameter: path
Add panelists  ->  Get a webinar  [ label = "id : webinarId"] type: int, parameter: path
Add panelists  ->  Get live stream details  [ label = "id : webinarId"] type: int, parameter: path
Add panelists  ->  List webinar participants  [ label = "id : webinarId"] type: int, parameter: path
Assign a role  ->  Delete a role  [ label = "ids : roleId"] type: int, parameter: path
Assign a role  ->  Get role information  [ label = "ids : roleId"] type: int, parameter: path
Assign a role  ->  List members in a role  [ label = "ids : roleId"] type: int, parameter: path
Assign a role  ->  List members in a role  [ label = "ids : page_count"] type: int, parameter: query
Assign a role  ->  Unassign a role  [ label = "ids : roleId"] type: int, parameter: path
Assign a role  ->  Update role information  [ label = "ids : id"] type: int, parameter: body
Assign a role  ->  Update role information  [ label = "ids : roleId"] type: int, parameter: path
Create a H.323/SIP device  ->  Delete a H.323/SIP device  [ label = "id : deviceId"] type: string, parameter: path
Create a H.323/SIP device  ->  Update a H.323/SIP device  [ label = "id : deviceId"] type: string, parameter: path
Create a H.323/SIP device  ->  Update a H.323/SIP device  [ label = "ip : ip"] type: string, parameter: body
Create a H.323/SIP device  ->  Update a H.323/SIP device  [ label = "name : name"] type: string, parameter: body
Create a H.323/SIP device  ->  Update a H.323/SIP device  [ label = "protocol : protocol"] type: string, parameter: body
Create a H.323/SIP device  ->  Update a H.323/SIP device  [ label = "encryption : encryption"] type: string, parameter: body
Create a group  ->  Create an IM directory group  [ label = "name : name"] type: string, parameter: body
Create a group  ->  Update a group  [ label = "name : name"] type: string, parameter: body
Create a group  ->  Update a user  [ label = "name : dept"] type: string, parameter: body
Create a group  ->  Update an IM directory group  [ label = "name : name"] type: string, parameter: body
Create a meeting  ->  Add IM directory group members  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Add IM directory group members  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Add a meeting registrant  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Add a meeting registrant  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Add a user's TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Create a meeting  ->  Add a webinar registrant  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Add a webinar registrant  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Add assistants  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Add assistants  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Add group admins  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Add group admins  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Add group members  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Add group members  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Check a user email  [ label = "host_email : email"] type: string, parameter: query
Create a meeting  ->  Check a user email  [ label = "contact_email : email"] type: string, parameter: query
Create a meeting  ->  Create a recording registrant  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Create a recording registrant  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Create a tracking field  [ label = "field : field"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "value : password"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "weekly_days : weekly_days"] type: int, parameter: body
Create a meeting  ->  Create a webinar  [ label = "alternative_hosts : alternative_hosts"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "value : value"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "field : field"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "contact_email : contact_email"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "host_email : contact_email"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "contact_name : contact_name"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "h323_password : password"] type: int, parameter: body
Create a meeting  ->  Create a webinar  [ label = "end_date_time : end_date_time"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Create a meeting  ->  Create a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Create a meeting  ->  Create meeting's invite links  [ label = "contact_name : name"] type: string, parameter: body
Create a meeting  ->  Create users  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Create users  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Create webinar's invite links  [ label = "contact_name : name"] type: string, parameter: body
Create a meeting  ->  Delete SIP phone  [ label = "value : phoneId"] type: string, parameter: path
Create a meeting  ->  Delete SIP phone  [ label = "h323_password : phoneId"] type: int, parameter: path
Create a meeting  ->  Delete a user  [ label = "host_email : transfer_email"] type: string, parameter: query
Create a meeting  ->  Delete a user  [ label = "contact_email : transfer_email"] type: string, parameter: query
Create a meeting  ->  Delete a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Create a meeting  ->  Enable SIP phone  [ label = "host_email : user_email"] type: string, parameter: body
Create a meeting  ->  Enable SIP phone  [ label = "value : password"] type: string, parameter: body
Create a meeting  ->  Enable SIP phone  [ label = "h323_password : password"] type: int, parameter: body
Create a meeting  ->  Enable SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Create a meeting  ->  Enable SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Create a meeting  ->  Enable SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Create a meeting  ->  Enable SIP phone  [ label = "contact_email : user_email"] type: string, parameter: body
Create a meeting  ->  Get a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Create a meeting  ->  Get active/inactive host reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  Get meeting recordings  [ label = "weekly_days : ttl"] type: int, parameter: query
Create a meeting  ->  Get telephone reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  Get telephone reports  [ label = "weekly_days : type"] type: int, parameter: query
Create a meeting  ->  Get zoom meetings client feedback  [ label = "weekly_days : feedbackId"] type: int, parameter: path
Create a meeting  ->  List H.323/SIP devices  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List IM directory group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List SIP phones  [ label = "contact_email : search_key"] type: string, parameter: query
Create a meeting  ->  List SIP phones  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List SIP phones  [ label = "host_email : search_key"] type: string, parameter: query
Create a meeting  ->  List Zoom Rooms  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List meeting registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List meetings  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List members in a role  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List recording registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List users  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List webinar registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  List webinars  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a meeting  ->  Perform batch registration  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Perform batch registration  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Update Live Stream Status  [ label = "contact_name : display_name"] type: string, parameter: body
Create a meeting  ->  Update SIP phone  [ label = "value : phoneId"] type: string, parameter: path
Create a meeting  ->  Update SIP phone  [ label = "h323_password : phoneId"] type: int, parameter: path
Create a meeting  ->  Update SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Create a meeting  ->  Update SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Create a meeting  ->  Update SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Create a meeting  ->  Update SIP phone  [ label = "h323_password : password"] type: int, parameter: body
Create a meeting  ->  Update SIP phone  [ label = "value : password"] type: string, parameter: body
Create a meeting  ->  Update a TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Create a meeting  ->  Update a TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Create a meeting  ->  Update a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "agenda : topic"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "agenda : agenda"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "start_time : value"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "created_at : value"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "value : password"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Create a meeting  ->  Update a meeting  [ label = "h323_password : password"] type: int, parameter: body
Create a meeting  ->  Update a tracking field  [ label = "field : field"] type: string, parameter: body
Create a meeting  ->  Update a user  [ label = "weekly_days : value"] type: int, parameter: body
Create a meeting  ->  Update a user's email  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Update a user's email  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Update a webinar  [ label = "h323_password : password"] type: int, parameter: body
Create a meeting  ->  Update a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Create a meeting  ->  Update a webinar  [ label = "value : password"] type: string, parameter: body
Create a meeting  ->  Update account settings  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Create a meeting  ->  Update account settings  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Create a meeting  ->  Update registrant's status  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Update registrant's status  [ label = "host_email : email"] type: string, parameter: body
Create a meeting  ->  Update user settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Create a meeting  ->  Update user settings  [ label = "value : audio_type"] type: string, parameter: body
Create a meeting  ->  Use in-meeting cloud recording controls  [ label = "contact_email : email"] type: string, parameter: body
Create a meeting  ->  Use in-meeting cloud recording controls  [ label = "host_email : email"] type: string, parameter: body
Create a meeting poll  ->  Create a webinar's poll  [ label = "name : name"] type: string, parameter: body
Create a meeting poll  ->  Create a webinar's poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a meeting poll  ->  Create a webinar's poll  [ label = "type : type"] type: string, parameter: body
Create a meeting poll  ->  Create a webinar's poll  [ label = "title : title"] type: string, parameter: body
Create a meeting poll  ->  Create a webinar's poll  [ label = "value : value"] type: string, parameter: body
Create a meeting poll  ->  Delete a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Create a meeting poll  ->  Delete a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Create a meeting poll  ->  Get a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Create a meeting poll  ->  Get a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Create a meeting poll  ->  Perform batch poll creation  [ label = "title : title"] type: string, parameter: body
Create a meeting poll  ->  Perform batch poll creation  [ label = "name : name"] type: string, parameter: body
Create a meeting poll  ->  Perform batch poll creation  [ label = "value : value"] type: string, parameter: body
Create a meeting poll  ->  Perform batch poll creation  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a meeting poll  ->  Perform batch poll creation  [ label = "type : type"] type: string, parameter: body
Create a meeting poll  ->  Update a meeting poll  [ label = "name : name"] type: string, parameter: body
Create a meeting poll  ->  Update a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a meeting poll  ->  Update a meeting poll  [ label = "value : value"] type: string, parameter: body
Create a meeting poll  ->  Update a meeting poll  [ label = "title : title"] type: string, parameter: body
Create a meeting poll  ->  Update a meeting poll  [ label = "type : type"] type: string, parameter: body
Create a meeting poll  ->  Update a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Create a meeting poll  ->  Update a webinar poll  [ label = "title : title"] type: string, parameter: body
Create a meeting poll  ->  Update a webinar poll  [ label = "value : value"] type: string, parameter: body
Create a meeting poll  ->  Update a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Create a meeting poll  ->  Update a webinar poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a meeting poll  ->  Update a webinar poll  [ label = "name : name"] type: string, parameter: body
Create a meeting poll  ->  Update a webinar poll  [ label = "type : type"] type: string, parameter: body
Create a recording registrant  ->  Create a reservation  [ label = "topic : topic"] type: string, parameter: body
Create a recording registrant  ->  Update a reservation  [ label = "topic : topic"] type: string, parameter: body
Create a recording registrant  ->  Update meeting recording settings  [ label = "topic : topic"] type: string, parameter: body
Create a recording registrant  ->  Update registrant's status  [ label = "registrant_id : id"] type: string, parameter: body
Create a reservation  ->  Check-in or check-out of a Zoom Room  [ label = "reservation_id  : event_id"] type: string, parameter: body
Create a reservation  ->  Delete a reservation  [ label = "reservation_id  : reservationId"] type: string, parameter: path
Create a reservation  ->  Update a reservation  [ label = "reservation_id  : reservationId"] type: string, parameter: path
Create a role  ->  Add a user's TSP account  [ label = "id : code"] type: int, parameter: body
Create a role  ->  Create a meeting  [ label = "id : weekly_days"] type: int, parameter: body
Create a role  ->  Create a webinar  [ label = "id : weekly_days"] type: int, parameter: body
Create a role  ->  Delete a user's TSP account  [ label = "id : tspId"] type: int, parameter: path
Create a role  ->  Get a user's TSP account  [ label = "id : tspId"] type: int, parameter: path
Create a role  ->  Get active/inactive host reports  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  Get meeting recordings  [ label = "id : ttl"] type: int, parameter: query
Create a role  ->  Get telephone reports  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  Get telephone reports  [ label = "id : type"] type: int, parameter: query
Create a role  ->  Get zoom meetings client feedback  [ label = "id : feedbackId"] type: int, parameter: path
Create a role  ->  List H.323/SIP devices  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List IM directory group members  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List SIP phones  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List Zoom Rooms  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List group members  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List meeting registrants  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List meetings  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List members in a role  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List recording registrants  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List users  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List webinar registrants  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  List webinars  [ label = "id : page_number"] type: int, parameter: query
Create a role  ->  Update a TSP account  [ label = "id : tspId"] type: int, parameter: path
Create a role  ->  Update a TSP account  [ label = "id : code"] type: int, parameter: body
Create a role  ->  Update a user  [ label = "id : value"] type: int, parameter: body
Create a role  ->  Update role information  [ label = "description : name"] type: string, parameter: body
Create a role  ->  Update role information  [ label = "name : name"] type: string, parameter: body
Create a role  ->  Update role information  [ label = "name : description"] type: string, parameter: body
Create a role  ->  Update role information  [ label = "description : description"] type: string, parameter: body
Create a tracking field  ->  Create a meeting  [ label = "field : field"] type: string, parameter: body
Create a tracking field  ->  Create a webinar  [ label = "field : field"] type: string, parameter: body
Create a tracking field  ->  Delete a tracking field  [ label = "id : fieldId"] type: string, parameter: path
Create a tracking field  ->  Get a tracking field  [ label = "id : fieldId"] type: string, parameter: path
Create a tracking field  ->  Update a tracking field  [ label = "field : field"] type: string, parameter: body
Create a tracking field  ->  Update a tracking field  [ label = "id : fieldId"] type: string, parameter: path
Create a webinar  ->  Add IM directory group members  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Add IM directory group members  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Add IM directory group members  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Add a meeting registrant  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Add a meeting registrant  [ label = "email_language : language"] type: string, parameter: body
Create a webinar  ->  Add a meeting registrant  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Add a meeting registrant  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Add a user's TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Create a webinar  ->  Add a webinar registrant  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Add a webinar registrant  [ label = "email_language : language"] type: string, parameter: body
Create a webinar  ->  Add a webinar registrant  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Add a webinar registrant  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Add assistants  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Add assistants  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Add assistants  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Add group admins  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Add group admins  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Add group admins  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Add group members  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Add group members  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Add group members  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Check a user email  [ label = "alternative_hosts : email"] type: string, parameter: query
Create a webinar  ->  Check a user email  [ label = "host_email : email"] type: string, parameter: query
Create a webinar  ->  Check a user email  [ label = "contact_email : email"] type: string, parameter: query
Create a webinar  ->  Create a meeting  [ label = "contact_name : contact_name"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "value : audio"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "weekly_days : weekly_days"] type: int, parameter: body
Create a webinar  ->  Create a meeting  [ label = "value : password"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "value : value"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "alternative_hosts : contact_email"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "contact_name : name"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "field : field"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "end_date_time : end_date_time"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "host_email : contact_email"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "alternative_hosts : schedule_for"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Create a meeting  [ label = "contact_email : contact_email"] type: string, parameter: body
Create a webinar  ->  Create a recording registrant  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Create a recording registrant  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Create a recording registrant  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Create a tracking field  [ label = "field : field"] type: string, parameter: body
Create a webinar  ->  Create meeting's invite links  [ label = "contact_name : name"] type: string, parameter: body
Create a webinar  ->  Create users  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Create users  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Create users  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Create webinar's invite links  [ label = "contact_name : name"] type: string, parameter: body
Create a webinar  ->  Delete SIP phone  [ label = "value : phoneId"] type: string, parameter: path
Create a webinar  ->  Delete a user  [ label = "alternative_hosts : transfer_email"] type: string, parameter: query
Create a webinar  ->  Delete a user  [ label = "host_email : transfer_email"] type: string, parameter: query
Create a webinar  ->  Delete a user  [ label = "contact_email : transfer_email"] type: string, parameter: query
Create a webinar  ->  Delete a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Create a webinar  ->  Enable SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Create a webinar  ->  Enable SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Create a webinar  ->  Enable SIP phone  [ label = "alternative_hosts : user_email"] type: string, parameter: body
Create a webinar  ->  Enable SIP phone  [ label = "contact_email : user_email"] type: string, parameter: body
Create a webinar  ->  Enable SIP phone  [ label = "value : password"] type: string, parameter: body
Create a webinar  ->  Enable SIP phone  [ label = "host_email : user_email"] type: string, parameter: body
Create a webinar  ->  Enable SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Create a webinar  ->  Get a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Create a webinar  ->  Get active/inactive host reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  Get meeting recordings  [ label = "weekly_days : ttl"] type: int, parameter: query
Create a webinar  ->  Get telephone reports  [ label = "weekly_days : type"] type: int, parameter: query
Create a webinar  ->  Get telephone reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  Get webinar absentees  [ label = "uuid : WebinarUUID"] type: string, parameter: path
Create a webinar  ->  Get zoom meetings client feedback  [ label = "weekly_days : feedbackId"] type: int, parameter: path
Create a webinar  ->  List H.323/SIP devices  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List IM directory group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List SIP phones  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List SIP phones  [ label = "alternative_hosts : search_key"] type: string, parameter: query
Create a webinar  ->  List SIP phones  [ label = "contact_email : search_key"] type: string, parameter: query
Create a webinar  ->  List SIP phones  [ label = "host_email : search_key"] type: string, parameter: query
Create a webinar  ->  List Zoom Rooms  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List meeting registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List meeting templates  [ label = "host_id : userId"] type: string, parameter: path
Create a webinar  ->  List meetings  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List members in a role  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List recording registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List users  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List webinar registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  List webinars  [ label = "weekly_days : page_number"] type: int, parameter: query
Create a webinar  ->  Perform batch registration  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Perform batch registration  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Perform batch registration  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Set global dial-in URL for a TSP user  [ label = "survey_url : audio_url"] type: string, parameter: body
Create a webinar  ->  Update Live Stream Status  [ label = "contact_name : display_name"] type: string, parameter: body
Create a webinar  ->  Update SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Create a webinar  ->  Update SIP phone  [ label = "value : password"] type: string, parameter: body
Create a webinar  ->  Update SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Create a webinar  ->  Update SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Create a webinar  ->  Update SIP phone  [ label = "value : phoneId"] type: string, parameter: path
Create a webinar  ->  Update a TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Create a webinar  ->  Update a TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Create a webinar  ->  Update a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Create a webinar  ->  Update a meeting  [ label = "alternative_hosts : schedule_for"] type: string, parameter: body
Create a webinar  ->  Update a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Create a webinar  ->  Update a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Create a webinar  ->  Update a meeting  [ label = "value : password"] type: string, parameter: body
Create a webinar  ->  Update a meeting survey  [ label = "survey_url : third_party_survey"] type: string, parameter: body
Create a webinar  ->  Update a tracking field  [ label = "field : field"] type: string, parameter: body
Create a webinar  ->  Update a user  [ label = "weekly_days : value"] type: int, parameter: body
Create a webinar  ->  Update a user's email  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Update a user's email  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Update a user's email  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "agenda : agenda"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "value : password"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "start_time : value"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "topic : agenda"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "created_at : value"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "topic : topic"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "agenda : topic"] type: string, parameter: body
Create a webinar  ->  Update a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Create a webinar  ->  Update a webinar survey  [ label = "survey_url : third_party_survey"] type: string, parameter: body
Create a webinar  ->  Update account settings  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Create a webinar  ->  Update account settings  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Create a webinar  ->  Update registrant's status  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Update registrant's status  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Update registrant's status  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Update user settings  [ label = "value : audio_type"] type: string, parameter: body
Create a webinar  ->  Update user settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Create a webinar  ->  Use in-meeting cloud recording controls  [ label = "alternative_hosts : email"] type: string, parameter: body
Create a webinar  ->  Use in-meeting cloud recording controls  [ label = "host_email : email"] type: string, parameter: body
Create a webinar  ->  Use in-meeting cloud recording controls  [ label = "contact_email : email"] type: string, parameter: body
Create a webinar  ->  Use in-meeting cloud recording controls  [ label = "host_id : id"] type: string, parameter: body
Create a webinar's poll  ->  Create a meeting poll  [ label = "name : name"] type: string, parameter: body
Create a webinar's poll  ->  Create a meeting poll  [ label = "value : value"] type: string, parameter: body
Create a webinar's poll  ->  Create a meeting poll  [ label = "type : type"] type: string, parameter: body
Create a webinar's poll  ->  Create a meeting poll  [ label = "title : title"] type: string, parameter: body
Create a webinar's poll  ->  Create a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a webinar's poll  ->  Delete a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Create a webinar's poll  ->  Delete a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Create a webinar's poll  ->  Get a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Create a webinar's poll  ->  Get a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Create a webinar's poll  ->  Perform batch poll creation  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a webinar's poll  ->  Perform batch poll creation  [ label = "title : title"] type: string, parameter: body
Create a webinar's poll  ->  Perform batch poll creation  [ label = "type : type"] type: string, parameter: body
Create a webinar's poll  ->  Perform batch poll creation  [ label = "value : value"] type: string, parameter: body
Create a webinar's poll  ->  Perform batch poll creation  [ label = "name : name"] type: string, parameter: body
Create a webinar's poll  ->  Update a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Create a webinar's poll  ->  Update a meeting poll  [ label = "type : type"] type: string, parameter: body
Create a webinar's poll  ->  Update a meeting poll  [ label = "value : value"] type: string, parameter: body
Create a webinar's poll  ->  Update a meeting poll  [ label = "name : name"] type: string, parameter: body
Create a webinar's poll  ->  Update a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a webinar's poll  ->  Update a meeting poll  [ label = "title : title"] type: string, parameter: body
Create a webinar's poll  ->  Update a webinar poll  [ label = "name : name"] type: string, parameter: body
Create a webinar's poll  ->  Update a webinar poll  [ label = "value : value"] type: string, parameter: body
Create a webinar's poll  ->  Update a webinar poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Create a webinar's poll  ->  Update a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Create a webinar's poll  ->  Update a webinar poll  [ label = "title : title"] type: string, parameter: body
Create a webinar's poll  ->  Update a webinar poll  [ label = "type : type"] type: string, parameter: body
Create an IM directory group  ->  Create a group  [ label = "name : name"] type: string, parameter: body
Create an IM directory group  ->  Update a group  [ label = "name : name"] type: string, parameter: body
Create an IM directory group  ->  Update a user  [ label = "name : dept"] type: string, parameter: body
Create an IM directory group  ->  Update an IM directory group  [ label = "name : name"] type: string, parameter: body
Create meeting's invite links  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
Create meeting's invite links  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
Create meeting's invite links  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
Create meeting's invite links  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
Create meeting's invite links  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
Create meeting's invite links  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
Create meeting's invite links  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
Create users  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Create users  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Create users  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
Create users  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
Create users  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Create users  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
Create users  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
Create users  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Create users  ->  Add assistants  [ label = "id : id"] type: string, parameter: body
Create users  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Create users  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Create users  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Create users  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
Create users  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Create users  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Create users  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Create users  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
Create users  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Create users  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
Create users  ->  Create a reservation  [ label = "id : reserve_for"] type: string, parameter: body
Create users  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Create users  ->  Delete Virtual Background files  [ label = "id : userId"] type: string, parameter: path
Create users  ->  Delete a scheduler  [ label = "id : schedulerId"] type: string, parameter: path
Create users  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Create users  ->  Delete a user assistant  [ label = "id : assistantId"] type: string, parameter: path
Create users  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Create users  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Create users  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
Create users  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
Create users  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Create users  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Create users  ->  Update a user  [ label = "id : cms_user_id"] type: string, parameter: body
Create users  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
Create users  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
Create users  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Create users  ->  Update a user's presence status  [ label = "id : userId"] type: string, parameter: path
Create users  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Create users  ->  Upload Virtual Background files  [ label = "id : userId"] type: string, parameter: path
Create users  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Create webinar's invite links  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
Create webinar's invite links  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
Create webinar's invite links  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
Create webinar's invite links  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
Create webinar's invite links  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
Create webinar's invite links  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
Create webinar's invite links  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get IM metrics  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get IM metrics  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get Zoom Room account profile  ->  Update Zoom Room account profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room account profile  ->  Update Zoom Room account profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room account profile  ->  Update Zoom Room account profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room account profile  ->  Update Zoom Room location profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room account profile  ->  Update Zoom Room location profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room account profile  ->  Update Zoom Room location profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room account profile  ->  Update a Zoom Room profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room account profile  ->  Update a Zoom Room profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room account profile  ->  Update a Zoom Room profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room account profile  ->  Update a live stream  [ label = "support_email : stream_key"] type: string, parameter: body
Get Zoom Room account profile  ->  Update a livestream  [ label = "support_email : stream_key"] type: string, parameter: body
Get Zoom Room location profile  ->  List Zoom Room locations  [ label = "name : type"] type: string, parameter: query
Get Zoom Room location profile  ->  Update Zoom Room account profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room account profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room account profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "address : description "] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "address : address"] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "name : name"] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "timezone : timezone"] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "description  : address"] type: string, parameter: body
Get Zoom Room location profile  ->  Update Zoom Room location profile  [ label = "description  : description "] type: string, parameter: body
Get Zoom Room location profile  ->  Update a Zoom Room profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room location profile  ->  Update a Zoom Room profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room location profile  ->  Update a Zoom Room profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room location profile  ->  Update a live stream  [ label = "support_email : stream_key"] type: string, parameter: body
Get Zoom Room location profile  ->  Update a livestream  [ label = "support_email : stream_key"] type: string, parameter: body
Get Zoom Room location structure  ->  Update E911 digital signage  [ label = "structures : target_type"] type: string, parameter: body
Get Zoom Room location structure  ->  Update Zoom Rooms location structure  [ label = "structures : structures"] type: string, parameter: body
Get Zoom Room profile  ->  Add a Zoom Room  [ label = "name : name"] type: string, parameter: body
Get Zoom Room profile  ->  Update Zoom Room account profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room profile  ->  Update Zoom Room account profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room profile  ->  Update Zoom Room account profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room profile  ->  Update Zoom Room location profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room profile  ->  Update Zoom Room location profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room profile  ->  Update Zoom Room location profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room profile  ->  Update a Zoom Room profile  [ label = "support_phone : support_phone"] type: int, parameter: body
Get Zoom Room profile  ->  Update a Zoom Room profile  [ label = "room_passcode : room_passcode"] type: int, parameter: body
Get Zoom Room profile  ->  Update a Zoom Room profile  [ label = "support_email : support_email"] type: string, parameter: body
Get Zoom Room profile  ->  Update a Zoom Room profile  [ label = "name : name"] type: string, parameter: body
Get Zoom Room profile  ->  Update a Zoom Room profile  [ label = "device_profile_id : device_profile_id"] type: string, parameter: body
Get Zoom Room profile  ->  Update a live stream  [ label = "support_email : stream_key"] type: string, parameter: body
Get Zoom Room profile  ->  Update a livestream  [ label = "support_email : stream_key"] type: string, parameter: body
Get Zoom Room settings  ->  Update Zoom Room settings  [ label = "encryption_type : encryption_type"] type: string, parameter: body
Get Zoom Room settings  ->  Update location settings  [ label = "encryption_type : encryption_type"] type: string, parameter: body
Get Zoom Rooms details  ->  Assign a role  [ label = "device_ip : email"] type: string, parameter: body
Get Zoom Rooms details  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get Zoom Rooms details  ->  Create a group  [ label = "value : name"] type: string, parameter: body
Get Zoom Rooms details  ->  Create an IM directory group  [ label = "value : name"] type: string, parameter: body
Get Zoom Rooms details  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get Zoom Rooms details  ->  List Zoom Rooms  [ label = "status : status"] type: string, parameter: query
Get Zoom Rooms details  ->  Update a group  [ label = "value : name"] type: string, parameter: body
Get Zoom Rooms details  ->  Update a user  [ label = "value : dept"] type: string, parameter: body
Get Zoom Rooms details  ->  Update an IM directory group  [ label = "value : name"] type: string, parameter: body
Get a device profile  ->  Create a device profile  [ label = "speaker_id : speaker_id"] type: string, parameter: body
Get a device profile  ->  Create a device profile  [ label = "camera_id : camera_id"] type: string, parameter: body
Get a device profile  ->  Create a device profile  [ label = "microphone_id : microphone_id"] type: string, parameter: body
Get a device profile  ->  Create a device profile  [ label = "name : name"] type: string, parameter: body
Get a device profile  ->  Update a device profile  [ label = "speaker_id : speaker_id"] type: string, parameter: body
Get a device profile  ->  Update a device profile  [ label = "camera_id : camera_id"] type: string, parameter: body
Get a device profile  ->  Update a device profile  [ label = "microphone_id : microphone_id"] type: string, parameter: body
Get a group  ->  Create a group  [ label = "name : name"] type: string, parameter: body
Get a group  ->  Create an IM directory group  [ label = "name : name"] type: string, parameter: body
Get a group  ->  Update a group  [ label = "name : name"] type: string, parameter: body
Get a group  ->  Update a user  [ label = "name : dept"] type: string, parameter: body
Get a group  ->  Update an IM directory group  [ label = "name : name"] type: string, parameter: body
Get a group's settings  ->  Add a meeting registrant  [ label = "unchecked_data_center_regions : country"] type: string, parameter: body
Get a group's settings  ->  Add a meeting registrant  [ label = "value : country"] type: string, parameter: body
Get a group's settings  ->  Add a webinar registrant  [ label = "unchecked_data_center_regions : country"] type: string, parameter: body
Get a group's settings  ->  Add a webinar registrant  [ label = "value : country"] type: string, parameter: body
Get a group's settings  ->  Create a recording registrant  [ label = "value : country"] type: string, parameter: body
Get a group's settings  ->  Create a recording registrant  [ label = "unchecked_data_center_regions : country"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "who_can_share_screen : entry_exit_chime"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "unchecked_data_center_regions : value"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "value : value"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "custom_service_instructions : custom_service_instructions"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "audio_type : audio_type"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "who_can_share_screen : who_can_share_screen"] type: string, parameter: body
Get a group's settings  ->  Update a group's settings  [ label = "ip_addresses_or_ranges : ip_addresses_or_ranges"] type: string, parameter: body
Get a group's settings  ->  Update a user  [ label = "unchecked_data_center_regions : phone_country"] type: string, parameter: body
Get a group's settings  ->  Update a user  [ label = "unchecked_data_center_regions : country"] type: string, parameter: body
Get a group's settings  ->  Update a user  [ label = "value : country"] type: string, parameter: body
Get a group's settings  ->  Update a user  [ label = "value : phone_country"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "audio_type : audio_type"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "custom_service_instructions : custom_service_instructions"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "who_can_share_screen : entry_exit_chime"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "who_can_share_screen : who_can_share_screen"] type: string, parameter: body
Get a group's settings  ->  Update account settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get a group's settings  ->  Update locked settings  [ label = "ip_addresses_or_ranges : ip_addresses_or_ranges"] type: string, parameter: body
Get a group's settings  ->  Update locked settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get a group's settings  ->  Update locked settings  [ label = "who_can_share_screen_when_someone_is_sharing : entry_exit_chime"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "custom_service_instructions : custom_service_instructions"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "who_can_share_screen_when_someone_is_sharing : entry_exit_chime"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen"] type: string, parameter: body
Get a group's settings  ->  Update user settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get a meeting  ->  Add IM directory group members  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Add IM directory group members  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Add a meeting registrant  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Add a meeting registrant  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Add a user's TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Get a meeting  ->  Add a webinar registrant  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Add a webinar registrant  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Add assistants  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Add assistants  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Add group admins  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Add group admins  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Add group members  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Add group members  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Check a user email  [ label = "contact_email : email"] type: string, parameter: query
Get a meeting  ->  Check a user email  [ label = "host_email : email"] type: string, parameter: query
Get a meeting  ->  Create a meeting  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "value : password"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "alternative_hosts : alternative_hosts"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "contact_name : name"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "h323_password : password"] type: int, parameter: body
Get a meeting  ->  Create a meeting  [ label = "agenda : topic"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "field : field"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "contact_email : contact_email"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "end_date_time : end_date_time"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "encryption_type : encryption_type"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "contact_name : contact_name"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "value : audio"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "weekly_days : weekly_days"] type: int, parameter: body
Get a meeting  ->  Create a meeting  [ label = "host_email : contact_email"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "agenda : agenda"] type: string, parameter: body
Get a meeting  ->  Create a meeting  [ label = "value : value"] type: string, parameter: body
Get a meeting  ->  Create a recording registrant  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Create a recording registrant  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Create a tracking field  [ label = "field : field"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "contact_name : contact_name"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "h323_password : password"] type: int, parameter: body
Get a meeting  ->  Create a webinar  [ label = "contact_email : contact_email"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "host_email : contact_email"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "value : password"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "value : value"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "alternative_hosts : alternative_hosts"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "weekly_days : weekly_days"] type: int, parameter: body
Get a meeting  ->  Create a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "field : field"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "end_date_time : end_date_time"] type: string, parameter: body
Get a meeting  ->  Create a webinar  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Get a meeting  ->  Create meeting's invite links  [ label = "contact_name : name"] type: string, parameter: body
Get a meeting  ->  Create users  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Create users  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Create webinar's invite links  [ label = "contact_name : name"] type: string, parameter: body
Get a meeting  ->  Delete SIP phone  [ label = "value : phoneId"] type: string, parameter: path
Get a meeting  ->  Delete SIP phone  [ label = "h323_password : phoneId"] type: int, parameter: path
Get a meeting  ->  Delete a user  [ label = "contact_email : transfer_email"] type: string, parameter: query
Get a meeting  ->  Delete a user  [ label = "host_email : transfer_email"] type: string, parameter: query
Get a meeting  ->  Delete a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Get a meeting  ->  Enable SIP phone  [ label = "contact_email : user_email"] type: string, parameter: body
Get a meeting  ->  Enable SIP phone  [ label = "h323_password : password"] type: int, parameter: body
Get a meeting  ->  Enable SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Get a meeting  ->  Enable SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Get a meeting  ->  Enable SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Get a meeting  ->  Enable SIP phone  [ label = "value : password"] type: string, parameter: body
Get a meeting  ->  Enable SIP phone  [ label = "host_email : user_email"] type: string, parameter: body
Get a meeting  ->  Get a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Get a meeting  ->  Get active/inactive host reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  Get meeting recordings  [ label = "weekly_days : ttl"] type: int, parameter: query
Get a meeting  ->  Get telephone reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  Get telephone reports  [ label = "weekly_days : type"] type: int, parameter: query
Get a meeting  ->  Get zoom meetings client feedback  [ label = "weekly_days : feedbackId"] type: int, parameter: path
Get a meeting  ->  List H.323/SIP devices  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List IM directory group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List SIP phones  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List SIP phones  [ label = "host_email : search_key"] type: string, parameter: query
Get a meeting  ->  List SIP phones  [ label = "contact_email : search_key"] type: string, parameter: query
Get a meeting  ->  List Zoom Rooms  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List meeting registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List meeting templates  [ label = "host_id : userId"] type: string, parameter: path
Get a meeting  ->  List meetings  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List members in a role  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List recording registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List users  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List webinar registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  List webinars  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a meeting  ->  Perform batch registration  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Perform batch registration  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Update Live Stream Status  [ label = "contact_name : display_name"] type: string, parameter: body
Get a meeting  ->  Update SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Get a meeting  ->  Update SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Get a meeting  ->  Update SIP phone  [ label = "value : phoneId"] type: string, parameter: path
Get a meeting  ->  Update SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Get a meeting  ->  Update SIP phone  [ label = "value : password"] type: string, parameter: body
Get a meeting  ->  Update SIP phone  [ label = "h323_password : phoneId"] type: int, parameter: path
Get a meeting  ->  Update SIP phone  [ label = "h323_password : password"] type: int, parameter: body
Get a meeting  ->  Update a TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Get a meeting  ->  Update a TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Get a meeting  ->  Update a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "start_time : value"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "agenda : agenda"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "h323_password : password"] type: int, parameter: body
Get a meeting  ->  Update a meeting  [ label = "agenda : topic"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "created_at : value"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "value : password"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Get a meeting  ->  Update a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Get a meeting  ->  Update a tracking field  [ label = "field : field"] type: string, parameter: body
Get a meeting  ->  Update a user  [ label = "weekly_days : value"] type: int, parameter: body
Get a meeting  ->  Update a user's email  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Update a user's email  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Update a webinar  [ label = "value : password"] type: string, parameter: body
Get a meeting  ->  Update a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Get a meeting  ->  Update a webinar  [ label = "h323_password : password"] type: int, parameter: body
Get a meeting  ->  Update account settings  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Get a meeting  ->  Update account settings  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Get a meeting  ->  Update registrant's status  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Update registrant's status  [ label = "host_email : email"] type: string, parameter: body
Get a meeting  ->  Update user settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a meeting  ->  Update user settings  [ label = "value : audio_type"] type: string, parameter: body
Get a meeting  ->  Use in-meeting cloud recording controls  [ label = "host_id : id"] type: string, parameter: body
Get a meeting  ->  Use in-meeting cloud recording controls  [ label = "contact_email : email"] type: string, parameter: body
Get a meeting  ->  Use in-meeting cloud recording controls  [ label = "host_email : email"] type: string, parameter: body
Get a meeting poll  ->  Create a meeting poll  [ label = "value : value"] type: string, parameter: body
Get a meeting poll  ->  Create a meeting poll  [ label = "type : type"] type: string, parameter: body
Get a meeting poll  ->  Create a meeting poll  [ label = "name : name"] type: string, parameter: body
Get a meeting poll  ->  Create a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a meeting poll  ->  Create a meeting poll  [ label = "title : title"] type: string, parameter: body
Get a meeting poll  ->  Create a webinar's poll  [ label = "type : type"] type: string, parameter: body
Get a meeting poll  ->  Create a webinar's poll  [ label = "value : value"] type: string, parameter: body
Get a meeting poll  ->  Create a webinar's poll  [ label = "name : name"] type: string, parameter: body
Get a meeting poll  ->  Create a webinar's poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a meeting poll  ->  Create a webinar's poll  [ label = "title : title"] type: string, parameter: body
Get a meeting poll  ->  Delete a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Get a meeting poll  ->  Delete a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Get a meeting poll  ->  Get a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Get a meeting poll  ->  Perform batch poll creation  [ label = "value : value"] type: string, parameter: body
Get a meeting poll  ->  Perform batch poll creation  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a meeting poll  ->  Perform batch poll creation  [ label = "title : title"] type: string, parameter: body
Get a meeting poll  ->  Perform batch poll creation  [ label = "name : name"] type: string, parameter: body
Get a meeting poll  ->  Perform batch poll creation  [ label = "type : type"] type: string, parameter: body
Get a meeting poll  ->  Update a meeting poll  [ label = "value : value"] type: string, parameter: body
Get a meeting poll  ->  Update a meeting poll  [ label = "type : type"] type: string, parameter: body
Get a meeting poll  ->  Update a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a meeting poll  ->  Update a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Get a meeting poll  ->  Update a meeting poll  [ label = "title : title"] type: string, parameter: body
Get a meeting poll  ->  Update a meeting poll  [ label = "name : name"] type: string, parameter: body
Get a meeting poll  ->  Update a webinar poll  [ label = "title : title"] type: string, parameter: body
Get a meeting poll  ->  Update a webinar poll  [ label = "type : type"] type: string, parameter: body
Get a meeting poll  ->  Update a webinar poll  [ label = "name : name"] type: string, parameter: body
Get a meeting poll  ->  Update a webinar poll  [ label = "value : value"] type: string, parameter: body
Get a meeting poll  ->  Update a webinar poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a meeting poll  ->  Update a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Get a meeting registrant  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "job_title : job_title"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "address : address"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "purchasing_time_frame : purchasing_time_frame"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "org : org"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "value : value"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "state : state"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "phone : phone"] type: int, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "city : city"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "role_in_purchase_process : role_in_purchase_process"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "country : country"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "comments : comments"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "no_of_employees : no_of_employees"] type: string, parameter: body
Get a meeting registrant  ->  Add a meeting registrant  [ label = "zip : zip"] type: int, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "address : address"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "job_title : job_title"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "role_in_purchase_process : role_in_purchase_process"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "org : org"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "state : state"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "comments : comments"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "no_of_employees : no_of_employees"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "zip : zip"] type: int, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "country : country"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "city : city"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "purchasing_time_frame : purchasing_time_frame"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "phone : phone"] type: int, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "value : value"] type: string, parameter: body
Get a meeting registrant  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a meeting registrant  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get a meeting registrant  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
Get a meeting registrant  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get a meeting registrant  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "zip : zip"] type: int, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "country : country"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "state : state"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "status : status"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "comments : comments"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "no_of_employees : no_of_employees"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "phone : phone"] type: int, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "city : city"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "job_title : job_title"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "role_in_purchase_process : role_in_purchase_process"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "purchasing_time_frame : purchasing_time_frame"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "org : org"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "address : address"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Create a recording registrant  [ label = "value : value"] type: string, parameter: body
Get a meeting registrant  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get a meeting registrant  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
Get a meeting registrant  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
Get a meeting registrant  ->  Delete a meeting registrant  [ label = "id : registrantId"] type: string, parameter: path
Get a meeting registrant  ->  Delete a meeting registrant  [ label = "status : occurrence_id"] type: string, parameter: query
Get a meeting registrant  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get a meeting registrant  ->  Delete a webinar registrant  [ label = "id : registrantId"] type: string, parameter: path
Get a meeting registrant  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get a meeting registrant  ->  Get a webinar registrant  [ label = "id : registrantId"] type: string, parameter: path
Get a meeting registrant  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get a meeting registrant  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
Get a meeting registrant  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
Get a meeting registrant  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Update a group's settings  [ label = "country : value"] type: string, parameter: body
Get a meeting registrant  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get a meeting registrant  ->  Update a user  [ label = "phone : phone_number"] type: int, parameter: body
Get a meeting registrant  ->  Update a user  [ label = "country : phone_country"] type: string, parameter: body
Get a meeting registrant  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
Get a meeting registrant  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
Get a meeting registrant  ->  Update a user  [ label = "country : country"] type: string, parameter: body
Get a meeting registrant  ->  Update a user  [ label = "phone : number"] type: int, parameter: body
Get a meeting registrant  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get a meeting registrant  ->  Update registrant's status  [ label = "id : id"] type: string, parameter: body
Get a meeting registrant  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get a meeting survey  ->  Create a webinar  [ label = "third_party_survey : survey_url"] type: string, parameter: body
Get a meeting survey  ->  Set global dial-in URL for a TSP user  [ label = "third_party_survey : audio_url"] type: string, parameter: body
Get a meeting survey  ->  Update a meeting survey  [ label = "third_party_survey : third_party_survey"] type: string, parameter: body
Get a meeting survey  ->  Update a webinar survey  [ label = "third_party_survey : third_party_survey"] type: string, parameter: body
Get a meeting's archived files  ->  Add IM directory group members  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Add a meeting registrant  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Add a webinar registrant  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Add assistants  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Add group admins  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Add group members  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Check a user email  [ label = "participant_email : email"] type: string, parameter: query
Get a meeting's archived files  ->  Create a meeting  [ label = "participant_email : contact_email"] type: string, parameter: body
Get a meeting's archived files  ->  Create a meeting  [ label = "participant_email : schedule_for"] type: string, parameter: body
Get a meeting's archived files  ->  Create a meeting  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Create a recording registrant  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Create a reservation  [ label = "topic : topic"] type: string, parameter: body
Get a meeting's archived files  ->  Create a webinar  [ label = "participant_email : contact_email"] type: string, parameter: body
Get a meeting's archived files  ->  Create users  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Delete a meeting recording file  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Delete a user  [ label = "participant_email : transfer_email"] type: string, parameter: query
Get a meeting's archived files  ->  Delete meeting recordings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Enable SIP phone  [ label = "participant_email : user_email"] type: string, parameter: body
Get a meeting's archived files  ->  Get meeting recording settings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Get meeting recordings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Get registration questions  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  List SIP phones  [ label = "participant_email : search_key"] type: string, parameter: query
Get a meeting's archived files  ->  Perform batch registration  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Recover a single recording  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Update Zoom Room location profile  [ label = "timezone : timezone"] type: string, parameter: body
Get a meeting's archived files  ->  Update a meeting  [ label = "participant_email : schedule_for"] type: string, parameter: body
Get a meeting's archived files  ->  Update a reservation  [ label = "topic : topic"] type: string, parameter: body
Get a meeting's archived files  ->  Update a user's email  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Update meeting recording settings  [ label = "topic : topic"] type: string, parameter: body
Get a meeting's archived files  ->  Update meeting recording settings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Update registrant's status  [ label = "participant_email : email"] type: string, parameter: body
Get a meeting's archived files  ->  Update registration questions  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
Get a meeting's archived files  ->  Use in-meeting cloud recording controls  [ label = "participant_email : email"] type: string, parameter: body
Get a tracking field  ->  Create a meeting  [ label = "field : field"] type: string, parameter: body
Get a tracking field  ->  Create a tracking field  [ label = "field : field"] type: string, parameter: body
Get a tracking field  ->  Create a webinar  [ label = "field : field"] type: string, parameter: body
Get a tracking field  ->  Delete a tracking field  [ label = "id : fieldId"] type: string, parameter: path
Get a tracking field  ->  Update a tracking field  [ label = "field : field"] type: string, parameter: body
Get a tracking field  ->  Update a tracking field  [ label = "id : fieldId"] type: string, parameter: path
Get a user  ->  Add IM directory group members  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "language : language"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "country : country"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "phone_country : country"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "company : first_name"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a user  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a user  ->  Add a user's TSP account  [ label = "value : code"] type: int, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "country : country"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "language : language"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "company : first_name"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a user  ->  Add a webinar registrant  [ label = "phone_country : country"] type: string, parameter: body
Get a user  ->  Add assistants  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Add assistants  [ label = "cms_user_id : id"] type: string, parameter: body
Get a user  ->  Add group admins  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Add group members  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get a user  ->  Check a user email  [ label = "im_group_ids : email"] type: string, parameter: query
Get a user  ->  Check a user's PM room  [ label = "company : vanity_name"] type: string, parameter: query
Get a user  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
Get a user  ->  Create a group  [ label = "dept : name"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "personal_meeting_url : authentication_domains"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "im_group_ids : contact_email"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "value : weekly_days"] type: int, parameter: body
Get a user  ->  Create a meeting  [ label = "pic_url : authentication_domains"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "vanity_url : authentication_domains"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get a user  ->  Create a meeting  [ label = "im_group_ids : schedule_for"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "country : country"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "company : first_name"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "phone_country : country"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a user  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a user  ->  Create a reservation  [ label = "cms_user_id : reserve_for"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "personal_meeting_url : enforce_login_domains"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "pic_url : authentication_domains"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "vanity_url : authentication_domains"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "vanity_url : enforce_login_domains"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "pic_url : enforce_login_domains"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "personal_meeting_url : authentication_domains"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "im_group_ids : contact_email"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "language : email_language"] type: string, parameter: body
Get a user  ->  Create a webinar  [ label = "value : weekly_days"] type: int, parameter: body
Get a user  ->  Create an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get a user  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
Get a user  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
Get a user  ->  Create users  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Create users  [ label = "company : first_name"] type: string, parameter: body
Get a user  ->  Delete Virtual Background files  [ label = "cms_user_id : userId"] type: string, parameter: path
Get a user  ->  Delete a scheduler  [ label = "cms_user_id : schedulerId"] type: string, parameter: path
Get a user  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get a user  ->  Delete a user  [ label = "im_group_ids : transfer_email"] type: string, parameter: query
Get a user  ->  Delete a user assistant  [ label = "cms_user_id : assistantId"] type: string, parameter: path
Get a user  ->  Delete a user's TSP account  [ label = "value : tspId"] type: int, parameter: path
Get a user  ->  Enable SIP phone  [ label = "im_group_ids : user_email"] type: string, parameter: body
Get a user  ->  Enable SIP phone  [ label = "pic_url : domain"] type: string, parameter: body
Get a user  ->  Enable SIP phone  [ label = "vanity_url : domain"] type: string, parameter: body
Get a user  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get a user  ->  Enable SIP phone  [ label = "personal_meeting_url : domain"] type: string, parameter: body
Get a user  ->  Get a user's TSP account  [ label = "value : tspId"] type: int, parameter: path
Get a user  ->  Get account's managed domains  [ label = "account_id : accountId"] type: string, parameter: path
Get a user  ->  Get account's trusted domains  [ label = "account_id : accountId"] type: string, parameter: path
Get a user  ->  Get active/inactive host reports  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  Get meeting recordings  [ label = "value : ttl"] type: int, parameter: query
Get a user  ->  Get telephone reports  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  Get telephone reports  [ label = "value : type"] type: int, parameter: query
Get a user  ->  Get zoom meetings client feedback  [ label = "value : feedbackId"] type: int, parameter: path
Get a user  ->  List H.323/SIP devices  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List IM directory group members  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get a user  ->  List SIP phones  [ label = "im_group_ids : search_key"] type: string, parameter: query
Get a user  ->  List SIP phones  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List Zoom Rooms  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List group members  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List meeting registrants  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List meeting registrants  [ label = "status : status"] type: string, parameter: query
Get a user  ->  List meetings  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List members in a role  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List recording registrants  [ label = "status : status"] type: string, parameter: query
Get a user  ->  List recording registrants  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List users  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List users  [ label = "role_id : role_id"] type: int, parameter: query
Get a user  ->  List webinar registrants  [ label = "status : status"] type: string, parameter: query
Get a user  ->  List webinar registrants  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  List webinars  [ label = "value : page_number"] type: int, parameter: query
Get a user  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
Get a user  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Perform batch registration  [ label = "company : first_name"] type: string, parameter: body
Get a user  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
Get a user  ->  Perform batch registration  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Update SIP phone  [ label = "vanity_url : domain"] type: string, parameter: body
Get a user  ->  Update SIP phone  [ label = "personal_meeting_url : domain"] type: string, parameter: body
Get a user  ->  Update SIP phone  [ label = "pic_url : domain"] type: string, parameter: body
Get a user  ->  Update Zoom Room location profile  [ label = "timezone : timezone"] type: string, parameter: body
Get a user  ->  Update a TSP account  [ label = "value : tspId"] type: int, parameter: path
Get a user  ->  Update a TSP account  [ label = "value : code"] type: int, parameter: body
Get a user  ->  Update a group  [ label = "dept : name"] type: string, parameter: body
Get a user  ->  Update a group's settings  [ label = "country : value"] type: string, parameter: body
Get a user  ->  Update a group's settings  [ label = "phone_country : value"] type: string, parameter: body
Get a user  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get a user  ->  Update a meeting  [ label = "im_group_ids : schedule_for"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "cms_user_id : cms_user_id"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "country : country"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "dept : dept"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "label : label"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "code : code"] type: int, parameter: body
Get a user  ->  Update a user  [ label = "phone_country : country"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "phone_country : phone_country"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "key : key"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "value : value"] type: int, parameter: body
Get a user  ->  Update a user  [ label = "name : name"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "company : first_name"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "country : phone_country"] type: string, parameter: body
Get a user  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
Get a user  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Update a user's email  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Update a user's presence status  [ label = "cms_user_id : userId"] type: string, parameter: path
Get a user  ->  Update account settings  [ label = "vanity_url : enforce_login_domains"] type: string, parameter: body
Get a user  ->  Update account settings  [ label = "pic_url : enforce_login_domains"] type: string, parameter: body
Get a user  ->  Update account settings  [ label = "personal_meeting_url : enforce_login_domains"] type: string, parameter: body
Get a user  ->  Update an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get a user  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Update registrant's status  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user  ->  Upload Virtual Background files  [ label = "cms_user_id : userId"] type: string, parameter: path
Get a user  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get a user  ->  Use in-meeting cloud recording controls  [ label = "im_group_ids : email"] type: string, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "conference_code : conference_code"] type: string, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "id : code"] type: int, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "code : code"] type: int, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "type : type"] type: string, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "number : number"] type: string, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "country_label : country_label"] type: string, parameter: body
Get a user's TSP account  ->  Add a user's TSP account  [ label = "tsp_bridge : leader_pin"] type: string, parameter: body
Get a user's TSP account  ->  Create a meeting  [ label = "id : weekly_days"] type: int, parameter: body
Get a user's TSP account  ->  Create a meeting  [ label = "code : weekly_days"] type: int, parameter: body
Get a user's TSP account  ->  Create a webinar  [ label = "id : weekly_days"] type: int, parameter: body
Get a user's TSP account  ->  Create a webinar  [ label = "code : weekly_days"] type: int, parameter: body
Get a user's TSP account  ->  Delete a user's TSP account  [ label = "id : tspId"] type: int, parameter: path
Get a user's TSP account  ->  Delete a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
Get a user's TSP account  ->  Get active/inactive host reports  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  Get active/inactive host reports  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  Get meeting recordings  [ label = "id : ttl"] type: int, parameter: query
Get a user's TSP account  ->  Get meeting recordings  [ label = "code : ttl"] type: int, parameter: query
Get a user's TSP account  ->  Get telephone reports  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  Get telephone reports  [ label = "id : type"] type: int, parameter: query
Get a user's TSP account  ->  Get telephone reports  [ label = "code : type"] type: int, parameter: query
Get a user's TSP account  ->  Get telephone reports  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  Get zoom meetings client feedback  [ label = "id : feedbackId"] type: int, parameter: path
Get a user's TSP account  ->  Get zoom meetings client feedback  [ label = "code : feedbackId"] type: int, parameter: path
Get a user's TSP account  ->  List H.323/SIP devices  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List H.323/SIP devices  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List IM directory group members  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List IM directory group members  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List SIP phones  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List SIP phones  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List Zoom Rooms  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List Zoom Rooms  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List group members  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List group members  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List meeting registrants  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List meeting registrants  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List meetings  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List meetings  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List members in a role  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List members in a role  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List recording registrants  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List recording registrants  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List users  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List users  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List webinar registrants  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List webinar registrants  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List webinars  [ label = "code : page_number"] type: int, parameter: query
Get a user's TSP account  ->  List webinars  [ label = "id : page_number"] type: int, parameter: query
Get a user's TSP account  ->  Update a TSP account  [ label = "conference_code : conference_code"] type: string, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "type : type"] type: string, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "number : number"] type: string, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "code : code"] type: int, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "country_label : country_label"] type: string, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "leader_pin : leader_pin"] type: int, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "id : code"] type: int, parameter: body
Get a user's TSP account  ->  Update a TSP account  [ label = "id : tspId"] type: int, parameter: path
Get a user's TSP account  ->  Update a TSP account  [ label = "code : tspId"] type: int, parameter: path
Get a user's TSP account  ->  Update a user  [ label = "code : value"] type: int, parameter: body
Get a user's TSP account  ->  Update a user  [ label = "id : value"] type: int, parameter: body
Get a user's TSP account  ->  Update account's TSP information  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Get a webinar  ->  Add IM directory group members  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Add IM directory group members  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Add IM directory group members  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Add a meeting registrant  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Add a meeting registrant  [ label = "email_language : language"] type: string, parameter: body
Get a webinar  ->  Add a meeting registrant  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Add a meeting registrant  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Add a user's TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Get a webinar  ->  Add a webinar registrant  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Add a webinar registrant  [ label = "email_language : language"] type: string, parameter: body
Get a webinar  ->  Add a webinar registrant  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Add a webinar registrant  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Add assistants  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Add assistants  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Add assistants  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Add group admins  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Add group admins  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Add group admins  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Add group members  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Add group members  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Add group members  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Check a user email  [ label = "contact_email : email"] type: string, parameter: query
Get a webinar  ->  Check a user email  [ label = "alternative_hosts : email"] type: string, parameter: query
Get a webinar  ->  Check a user email  [ label = "host_email : email"] type: string, parameter: query
Get a webinar  ->  Create a meeting  [ label = "field : field"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "contact_email : contact_email"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "alternative_hosts : contact_email"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "alternative_hosts : schedule_for"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "end_date_time : end_date_time"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "contact_name : name"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "value : audio"] type: int, parameter: body
Get a webinar  ->  Create a meeting  [ label = "weekly_days : weekly_days"] type: int, parameter: body
Get a webinar  ->  Create a meeting  [ label = "host_email : contact_email"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "value : value"] type: int, parameter: body
Get a webinar  ->  Create a meeting  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "value : password"] type: int, parameter: body
Get a webinar  ->  Create a meeting  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "contact_name : contact_name"] type: string, parameter: body
Get a webinar  ->  Create a meeting  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Create a recording registrant  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Create a recording registrant  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Create a recording registrant  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Create a tracking field  [ label = "field : field"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "topic : topic"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "survey_url : survey_url"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "value : value"] type: int, parameter: body
Get a webinar  ->  Create a webinar  [ label = "end_date_time : end_date_time"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "value : password"] type: int, parameter: body
Get a webinar  ->  Create a webinar  [ label = "weekly_days : weekly_days"] type: int, parameter: body
Get a webinar  ->  Create a webinar  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "alternative_hosts : contact_email"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "field : field"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "host_email : contact_email"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "contact_email : contact_email"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "topic : agenda"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "agenda : topic"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "contact_name : contact_name"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "email_language : email_language"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "agenda : agenda"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Get a webinar  ->  Create a webinar  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a webinar  ->  Create meeting's invite links  [ label = "contact_name : name"] type: string, parameter: body
Get a webinar  ->  Create users  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Create users  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Create users  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Create webinar's invite links  [ label = "contact_name : name"] type: string, parameter: body
Get a webinar  ->  Delete SIP phone  [ label = "value : phoneId"] type: int, parameter: path
Get a webinar  ->  Delete a user  [ label = "host_email : transfer_email"] type: string, parameter: query
Get a webinar  ->  Delete a user  [ label = "alternative_hosts : transfer_email"] type: string, parameter: query
Get a webinar  ->  Delete a user  [ label = "contact_email : transfer_email"] type: string, parameter: query
Get a webinar  ->  Delete a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Get a webinar  ->  Enable SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Get a webinar  ->  Enable SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Get a webinar  ->  Enable SIP phone  [ label = "contact_email : user_email"] type: string, parameter: body
Get a webinar  ->  Enable SIP phone  [ label = "value : password"] type: int, parameter: body
Get a webinar  ->  Enable SIP phone  [ label = "alternative_hosts : user_email"] type: string, parameter: body
Get a webinar  ->  Enable SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Get a webinar  ->  Enable SIP phone  [ label = "host_email : user_email"] type: string, parameter: body
Get a webinar  ->  Get a user's TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Get a webinar  ->  Get active/inactive host reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  Get meeting recordings  [ label = "weekly_days : ttl"] type: int, parameter: query
Get a webinar  ->  Get telephone reports  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  Get telephone reports  [ label = "weekly_days : type"] type: int, parameter: query
Get a webinar  ->  Get zoom meetings client feedback  [ label = "weekly_days : feedbackId"] type: int, parameter: path
Get a webinar  ->  List H.323/SIP devices  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List IM directory group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List SIP phones  [ label = "host_email : search_key"] type: string, parameter: query
Get a webinar  ->  List SIP phones  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List SIP phones  [ label = "contact_email : search_key"] type: string, parameter: query
Get a webinar  ->  List SIP phones  [ label = "alternative_hosts : search_key"] type: string, parameter: query
Get a webinar  ->  List Zoom Rooms  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List group members  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List meeting registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List meeting templates  [ label = "host_id : userId"] type: string, parameter: path
Get a webinar  ->  List meetings  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List members in a role  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List recording registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List users  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List webinar registrants  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  List webinars  [ label = "weekly_days : page_number"] type: int, parameter: query
Get a webinar  ->  Perform batch registration  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Perform batch registration  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Perform batch registration  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Set global dial-in URL for a TSP user  [ label = "survey_url : audio_url"] type: string, parameter: body
Get a webinar  ->  Update Live Stream Status  [ label = "contact_name : display_name"] type: string, parameter: body
Get a webinar  ->  Update SIP phone  [ label = "value : phoneId"] type: int, parameter: path
Get a webinar  ->  Update SIP phone  [ label = "value : password"] type: int, parameter: body
Get a webinar  ->  Update SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Get a webinar  ->  Update SIP phone  [ label = "authentication_domains : domain"] type: string, parameter: body
Get a webinar  ->  Update SIP phone  [ label = "contact_name : user_name"] type: string, parameter: body
Get a webinar  ->  Update a TSP account  [ label = "weekly_days : code"] type: int, parameter: body
Get a webinar  ->  Update a TSP account  [ label = "weekly_days : tspId"] type: int, parameter: path
Get a webinar  ->  Update a meeting  [ label = "contact_email : schedule_for"] type: string, parameter: body
Get a webinar  ->  Update a meeting  [ label = "timezone : timezone"] type: string, parameter: body
Get a webinar  ->  Update a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Get a webinar  ->  Update a meeting  [ label = "value : password"] type: int, parameter: body
Get a webinar  ->  Update a meeting  [ label = "alternative_hosts : schedule_for"] type: string, parameter: body
Get a webinar  ->  Update a meeting survey  [ label = "survey_url : third_party_survey"] type: string, parameter: body
Get a webinar  ->  Update a tracking field  [ label = "field : field"] type: string, parameter: body
Get a webinar  ->  Update a user  [ label = "weekly_days : value"] type: int, parameter: body
Get a webinar  ->  Update a user's email  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Update a user's email  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Update a user's email  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "start_time : value"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "value : password"] type: int, parameter: body
Get a webinar  ->  Update a webinar  [ label = "agenda : agenda"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "timezone : timezone"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "topic : agenda"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "created_at : value"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "agenda : topic"] type: string, parameter: body
Get a webinar  ->  Update a webinar  [ label = "topic : topic"] type: string, parameter: body
Get a webinar  ->  Update a webinar survey  [ label = "survey_url : third_party_survey"] type: string, parameter: body
Get a webinar  ->  Update account settings  [ label = "authentication_domains : enforce_login_domains"] type: string, parameter: body
Get a webinar  ->  Update account settings  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Get a webinar  ->  Update registrant's status  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Update registrant's status  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Update registrant's status  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar  ->  Update user settings  [ label = "value : audio_type"] type: int, parameter: body
Get a webinar  ->  Update user settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get a webinar  ->  Use in-meeting cloud recording controls  [ label = "host_id : id"] type: string, parameter: body
Get a webinar  ->  Use in-meeting cloud recording controls  [ label = "host_email : email"] type: string, parameter: body
Get a webinar  ->  Use in-meeting cloud recording controls  [ label = "contact_email : email"] type: string, parameter: body
Get a webinar  ->  Use in-meeting cloud recording controls  [ label = "alternative_hosts : email"] type: string, parameter: body
Get a webinar poll  ->  Create a meeting poll  [ label = "title : title"] type: string, parameter: body
Get a webinar poll  ->  Create a meeting poll  [ label = "type : type"] type: string, parameter: body
Get a webinar poll  ->  Create a meeting poll  [ label = "value : value"] type: string, parameter: body
Get a webinar poll  ->  Create a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a webinar poll  ->  Create a meeting poll  [ label = "name : name"] type: string, parameter: body
Get a webinar poll  ->  Create a webinar's poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a webinar poll  ->  Create a webinar's poll  [ label = "value : value"] type: string, parameter: body
Get a webinar poll  ->  Create a webinar's poll  [ label = "title : title"] type: string, parameter: body
Get a webinar poll  ->  Create a webinar's poll  [ label = "type : type"] type: string, parameter: body
Get a webinar poll  ->  Create a webinar's poll  [ label = "name : name"] type: string, parameter: body
Get a webinar poll  ->  Delete a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Get a webinar poll  ->  Delete a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Get a webinar poll  ->  Get a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Get a webinar poll  ->  Perform batch poll creation  [ label = "title : title"] type: string, parameter: body
Get a webinar poll  ->  Perform batch poll creation  [ label = "value : value"] type: string, parameter: body
Get a webinar poll  ->  Perform batch poll creation  [ label = "type : type"] type: string, parameter: body
Get a webinar poll  ->  Perform batch poll creation  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a webinar poll  ->  Perform batch poll creation  [ label = "name : name"] type: string, parameter: body
Get a webinar poll  ->  Update a meeting poll  [ label = "type : type"] type: string, parameter: body
Get a webinar poll  ->  Update a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Get a webinar poll  ->  Update a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a webinar poll  ->  Update a meeting poll  [ label = "title : title"] type: string, parameter: body
Get a webinar poll  ->  Update a meeting poll  [ label = "name : name"] type: string, parameter: body
Get a webinar poll  ->  Update a meeting poll  [ label = "value : value"] type: string, parameter: body
Get a webinar poll  ->  Update a webinar poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Get a webinar poll  ->  Update a webinar poll  [ label = "title : title"] type: string, parameter: body
Get a webinar poll  ->  Update a webinar poll  [ label = "type : type"] type: string, parameter: body
Get a webinar poll  ->  Update a webinar poll  [ label = "value : value"] type: string, parameter: body
Get a webinar poll  ->  Update a webinar poll  [ label = "name : name"] type: string, parameter: body
Get a webinar poll  ->  Update a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Get a webinar registrant  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "address : address"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "purchasing_time_frame : purchasing_time_frame"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "city : city"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "comments : comments"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "language : language"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "no_of_employees : no_of_employees"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "value : value"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "job_title : job_title"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "org : org"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "state : state"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "role_in_purchase_process : role_in_purchase_process"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "zip : zip"] type: int, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "country : country"] type: string, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "phone : phone"] type: int, parameter: body
Get a webinar registrant  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "org : org"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "state : state"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "phone : phone"] type: int, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "role_in_purchase_process : role_in_purchase_process"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "country : country"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "no_of_employees : no_of_employees"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "zip : zip"] type: int, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "value : value"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "city : city"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "address : address"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "purchasing_time_frame : purchasing_time_frame"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "language : language"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "comments : comments"] type: string, parameter: body
Get a webinar registrant  ->  Add a webinar registrant  [ label = "job_title : job_title"] type: string, parameter: body
Get a webinar registrant  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get a webinar registrant  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
Get a webinar registrant  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get a webinar registrant  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "phone : phone"] type: int, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "address : address"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "value : value"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "purchasing_time_frame : purchasing_time_frame"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "job_title : job_title"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "state : state"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "role_in_purchase_process : role_in_purchase_process"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "zip : zip"] type: int, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "status : status"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "country : country"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "city : city"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "comments : comments"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "no_of_employees : no_of_employees"] type: string, parameter: body
Get a webinar registrant  ->  Create a recording registrant  [ label = "org : org"] type: string, parameter: body
Get a webinar registrant  ->  Create a webinar  [ label = "language : email_language"] type: string, parameter: body
Get a webinar registrant  ->  Create a webinar  [ label = "create_time : start_time"] type: string, parameter: body
Get a webinar registrant  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get a webinar registrant  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
Get a webinar registrant  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
Get a webinar registrant  ->  Delete a meeting registrant  [ label = "status : occurrence_id"] type: string, parameter: query
Get a webinar registrant  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get a webinar registrant  ->  Delete a webinar registrant  [ label = "id : webinarId"] type: int, parameter: path
Get a webinar registrant  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get a webinar registrant  ->  Get a webinar  [ label = "id : webinarId"] type: int, parameter: path
Get a webinar registrant  ->  Get live stream details  [ label = "id : webinarId"] type: int, parameter: path
Get a webinar registrant  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get a webinar registrant  ->  List webinar participants  [ label = "id : webinarId"] type: int, parameter: path
Get a webinar registrant  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
Get a webinar registrant  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
Get a webinar registrant  ->  Update a group's settings  [ label = "country : value"] type: string, parameter: body
Get a webinar registrant  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get a webinar registrant  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
Get a webinar registrant  ->  Update a user  [ label = "country : country"] type: string, parameter: body
Get a webinar registrant  ->  Update a user  [ label = "country : phone_country"] type: string, parameter: body
Get a webinar registrant  ->  Update a user  [ label = "phone : number"] type: int, parameter: body
Get a webinar registrant  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
Get a webinar registrant  ->  Update a user  [ label = "phone : phone_number"] type: int, parameter: body
Get a webinar registrant  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get a webinar registrant  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get a webinar survey  ->  Create a webinar  [ label = "third_party_survey : survey_url"] type: string, parameter: body
Get a webinar survey  ->  Set global dial-in URL for a TSP user  [ label = "third_party_survey : audio_url"] type: string, parameter: body
Get a webinar survey  ->  Update a meeting survey  [ label = "third_party_survey : third_party_survey"] type: string, parameter: body
Get a webinar survey  ->  Update a webinar survey  [ label = "third_party_survey : third_party_survey"] type: string, parameter: body
Get account settings  ->  Create a device profile  [ label = "use_cdn : noise_suppression"] type: string, parameter: body
Get account settings  ->  Create a meeting  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Get account settings  ->  Create a webinar  [ label = "enforce_login_domains : authentication_domains"] type: string, parameter: body
Get account settings  ->  Create a webinar  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Get account settings  ->  Enable SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Get account settings  ->  Update SIP phone  [ label = "enforce_login_domains : domain"] type: string, parameter: body
Get account settings  ->  Update a device profile  [ label = "use_cdn : noise_suppression"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "audio_type : audio_type"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "who_can_share_screen : who_can_share_screen"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "who_can_share_screen_when_someone_is_sharing : entry_exit_chime"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "who_can_share_screen : entry_exit_chime"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "custom_service_instructions : custom_service_instructions"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get account settings  ->  Update a group's settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "who_can_share_screen : who_can_share_screen"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "value : ports_range"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "audio_type : audio_type"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "sign_in_with_two_factor_auth : sign_in_with_two_factor_auth"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "enforce_login_domains : enforce_login_domains"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "custom_service_instructions : custom_service_instructions"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "who_can_share_screen_when_someone_is_sharing : entry_exit_chime"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "use_cdn : use_cdn"] type: string, parameter: body
Get account settings  ->  Update account settings  [ label = "who_can_share_screen : entry_exit_chime"] type: string, parameter: body
Get account settings  ->  Update locked settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get account settings  ->  Update user settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get account settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get account settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen"] type: string, parameter: body
Get account settings  ->  Update user settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get account settings  ->  Update user settings  [ label = "custom_service_instructions : custom_service_instructions"] type: string, parameter: body
Get account settings  ->  Update user settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get account's TSP information  ->  Add a user's TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Get account's TSP information  ->  Add a user's TSP account  [ label = "code : code"] type: int, parameter: body
Get account's TSP information  ->  Add a user's TSP account  [ label = "tsp_bridge : leader_pin"] type: string, parameter: body
Get account's TSP information  ->  Add a user's TSP account  [ label = "type : type"] type: string, parameter: body
Get account's TSP information  ->  Add a user's TSP account  [ label = "number : number"] type: string, parameter: body
Get account's TSP information  ->  Create a meeting  [ label = "code : weekly_days"] type: int, parameter: body
Get account's TSP information  ->  Create a webinar  [ label = "code : weekly_days"] type: int, parameter: body
Get account's TSP information  ->  Delete a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
Get account's TSP information  ->  Get a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
Get account's TSP information  ->  Get active/inactive host reports  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  Get meeting recordings  [ label = "code : ttl"] type: int, parameter: query
Get account's TSP information  ->  Get telephone reports  [ label = "code : type"] type: int, parameter: query
Get account's TSP information  ->  Get telephone reports  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  Get zoom meetings client feedback  [ label = "code : feedbackId"] type: int, parameter: path
Get account's TSP information  ->  List H.323/SIP devices  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List IM directory group members  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List SIP phones  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List Zoom Rooms  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List group members  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List meeting registrants  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List meetings  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List members in a role  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List recording registrants  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List users  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List webinar registrants  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  List webinars  [ label = "code : page_number"] type: int, parameter: query
Get account's TSP information  ->  Update a TSP account  [ label = "number : number"] type: string, parameter: body
Get account's TSP information  ->  Update a TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Get account's TSP information  ->  Update a TSP account  [ label = "code : tspId"] type: int, parameter: path
Get account's TSP information  ->  Update a TSP account  [ label = "code : code"] type: int, parameter: body
Get account's TSP information  ->  Update a TSP account  [ label = "type : type"] type: string, parameter: body
Get account's TSP information  ->  Update a user  [ label = "code : value"] type: int, parameter: body
Get account's TSP information  ->  Update account's TSP information  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
Get account's TSP information  ->  Update account's TSP information  [ label = "tsp_provider : tsp_provider"] type: string, parameter: body
Get account's managed domains  ->  Create a meeting  [ label = "domain : authentication_domains"] type: string, parameter: body
Get account's managed domains  ->  Create a webinar  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get account's managed domains  ->  Create a webinar  [ label = "domain : authentication_domains"] type: string, parameter: body
Get account's managed domains  ->  Enable SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get account's managed domains  ->  Update SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get account's managed domains  ->  Update account settings  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get account's trusted domains  ->  Create a meeting  [ label = "trusted_domains : authentication_domains"] type: string, parameter: body
Get account's trusted domains  ->  Create a webinar  [ label = "trusted_domains : enforce_login_domains"] type: string, parameter: body
Get account's trusted domains  ->  Create a webinar  [ label = "trusted_domains : authentication_domains"] type: string, parameter: body
Get account's trusted domains  ->  Enable SIP phone  [ label = "trusted_domains : domain"] type: string, parameter: body
Get account's trusted domains  ->  Update SIP phone  [ label = "trusted_domains : domain"] type: string, parameter: body
Get account's trusted domains  ->  Update account settings  [ label = "trusted_domains : enforce_login_domains"] type: string, parameter: body
Get active/inactive host reports  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get active/inactive host reports  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Create a meeting  [ label = "user_name : contact_name"] type: string, parameter: body
Get active/inactive host reports  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get active/inactive host reports  ->  Create a meeting  [ label = "user_name : name"] type: string, parameter: body
Get active/inactive host reports  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get active/inactive host reports  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Create a webinar  [ label = "user_name : contact_name"] type: string, parameter: body
Get active/inactive host reports  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get active/inactive host reports  ->  Create meeting's invite links  [ label = "user_name : name"] type: string, parameter: body
Get active/inactive host reports  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Create webinar's invite links  [ label = "user_name : name"] type: string, parameter: body
Get active/inactive host reports  ->  Delete a meeting's archived files  [ label = "key : meetingUUID"] type: string, parameter: path
Get active/inactive host reports  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get active/inactive host reports  ->  Enable SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get active/inactive host reports  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get active/inactive host reports  ->  Get a meeting's archived files  [ label = "key : meetingUUID"] type: string, parameter: path
Get active/inactive host reports  ->  Get past meeting participants  [ label = "key : meetingUUID"] type: string, parameter: path
Get active/inactive host reports  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get active/inactive host reports  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Recover meeting recordings  [ label = "key : meetingUUID"] type: string, parameter: path
Get active/inactive host reports  ->  Update Live Stream Status  [ label = "user_name : display_name"] type: string, parameter: body
Get active/inactive host reports  ->  Update SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get active/inactive host reports  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get active/inactive host reports  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get active/inactive host reports  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get billing invoice reports  ->  Get daily usage report  [ label = "invoice_number : month"] type: int, parameter: query
Get billing reports  ->  Get billing invoice reports  [ label = "id : billing_id"] type: string, parameter: query
Get chat messages reports  ->  Add IM directory group members  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Add IM directory group members  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Add a meeting registrant  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Add a meeting registrant  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Add a webinar registrant  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Add a webinar registrant  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Add assistants  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Add assistants  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Add group admins  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Add group admins  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Add group members  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Add group members  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Check a user email  [ label = "reply_main_message_id : email"] type: string, parameter: query
Get chat messages reports  ->  Check a user email  [ label = "receiver : email"] type: string, parameter: query
Get chat messages reports  ->  Create a meeting  [ label = "reply_main_message_id : schedule_for"] type: string, parameter: body
Get chat messages reports  ->  Create a meeting  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Create a meeting  [ label = "receiver : contact_email"] type: string, parameter: body
Get chat messages reports  ->  Create a meeting  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Create a meeting  [ label = "reply_main_message_id : contact_email"] type: string, parameter: body
Get chat messages reports  ->  Create a meeting  [ label = "receiver : schedule_for"] type: string, parameter: body
Get chat messages reports  ->  Create a recording registrant  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Create a recording registrant  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Create a webinar  [ label = "receiver : contact_email"] type: string, parameter: body
Get chat messages reports  ->  Create a webinar  [ label = "reply_main_message_id : contact_email"] type: string, parameter: body
Get chat messages reports  ->  Create users  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Create users  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Delete a user  [ label = "reply_main_message_id : transfer_email"] type: string, parameter: query
Get chat messages reports  ->  Delete a user  [ label = "receiver : transfer_email"] type: string, parameter: query
Get chat messages reports  ->  Enable SIP phone  [ label = "reply_main_message_id : user_email"] type: string, parameter: body
Get chat messages reports  ->  Enable SIP phone  [ label = "receiver : user_email"] type: string, parameter: body
Get chat messages reports  ->  Get active/inactive host reports  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get chat messages reports  ->  Get sign In / sign out activity report  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get chat messages reports  ->  Get telephone reports  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get chat messages reports  ->  List SIP phones  [ label = "reply_main_message_id : search_key"] type: string, parameter: query
Get chat messages reports  ->  List SIP phones  [ label = "receiver : search_key"] type: string, parameter: query
Get chat messages reports  ->  Perform batch registration  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Perform batch registration  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Update a meeting  [ label = "receiver : schedule_for"] type: string, parameter: body
Get chat messages reports  ->  Update a meeting  [ label = "reply_main_message_id : schedule_for"] type: string, parameter: body
Get chat messages reports  ->  Update a user's email  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Update a user's email  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Update registrant's status  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat messages reports  ->  Update registrant's status  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Use in-meeting cloud recording controls  [ label = "receiver : email"] type: string, parameter: body
Get chat messages reports  ->  Use in-meeting cloud recording controls  [ label = "reply_main_message_id : email"] type: string, parameter: body
Get chat metrics  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get chat metrics  ->  List Zoom Rooms  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get chat sessions reports  ->  Add IM directory group members  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Add a meeting registrant  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Add a webinar registrant  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Add assistants  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Add group admins  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Add group members  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Check a user email  [ label = "name : email"] type: string, parameter: query
Get chat sessions reports  ->  Create a meeting  [ label = "name : schedule_for"] type: string, parameter: body
Get chat sessions reports  ->  Create a meeting  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Create a meeting  [ label = "name : contact_email"] type: string, parameter: body
Get chat sessions reports  ->  Create a recording registrant  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Create a webinar  [ label = "name : contact_email"] type: string, parameter: body
Get chat sessions reports  ->  Create users  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Delete a user  [ label = "name : transfer_email"] type: string, parameter: query
Get chat sessions reports  ->  Enable SIP phone  [ label = "name : user_email"] type: string, parameter: body
Get chat sessions reports  ->  Get chat messages reports  [ label = "id : sessionId"] type: string, parameter: path
Get chat sessions reports  ->  List SIP phones  [ label = "name : search_key"] type: string, parameter: query
Get chat sessions reports  ->  Perform batch registration  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Update a meeting  [ label = "name : schedule_for"] type: string, parameter: body
Get chat sessions reports  ->  Update a user's email  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Update registrant's status  [ label = "name : email"] type: string, parameter: body
Get chat sessions reports  ->  Use in-meeting cloud recording controls  [ label = "name : email"] type: string, parameter: body
Get device information  ->  Create a device profile  [ label = "id : speaker_id"] type: string, parameter: body
Get device information  ->  Create a device profile  [ label = "id : camera_id"] type: string, parameter: body
Get device information  ->  Update a device profile  [ label = "id : speaker_id"] type: string, parameter: body
Get device information  ->  Update a device profile  [ label = "id : camera_id"] type: string, parameter: body
Get issues of Zoom Rooms  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get live stream details  ->  Update Zoom Room account profile  [ label = "stream_key : support_email"] type: string, parameter: body
Get live stream details  ->  Update Zoom Room location profile  [ label = "stream_key : support_email"] type: string, parameter: body
Get live stream details  ->  Update a Zoom Room profile  [ label = "stream_key : support_email"] type: string, parameter: body
Get live stream details  ->  Update a live stream  [ label = "stream_url : stream_url"] type: string, parameter: body
Get live stream details  ->  Update a live stream  [ label = "stream_key : stream_key"] type: string, parameter: body
Get live stream details  ->  Update a live stream  [ label = "page_url : page_url"] type: string, parameter: body
Get live stream details  ->  Update a livestream  [ label = "page_url : page_url"] type: string, parameter: body
Get live stream details  ->  Update a livestream  [ label = "stream_key : stream_key"] type: string, parameter: body
Get live stream details  ->  Update a livestream  [ label = "stream_url : stream_url"] type: string, parameter: body
Get livestream details  ->  Update a live stream  [ label = "stream_url : stream_url"] type: string, parameter: body
Get livestream details  ->  Update a live stream  [ label = "page_url : page_url"] type: string, parameter: body
Get livestream details  ->  Update a livestream  [ label = "page_url : page_url"] type: string, parameter: body
Get livestream details  ->  Update a livestream  [ label = "stream_url : stream_url"] type: string, parameter: body
Get location settings  ->  Update Zoom Room settings  [ label = "encryption_type : encryption_type"] type: string, parameter: body
Get location settings  ->  Update location settings  [ label = "encryption_type : encryption_type"] type: string, parameter: body
Get locked settings  ->  Update a group's settings  [ label = "ip_addresses_or_ranges : ip_addresses_or_ranges"] type: string, parameter: body
Get locked settings  ->  Update a group's settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get locked settings  ->  Update account settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get locked settings  ->  Update locked settings  [ label = "ip_addresses_or_ranges : ip_addresses_or_ranges"] type: string, parameter: body
Get locked settings  ->  Update locked settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get locked settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get locked settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen"] type: string, parameter: body
Get locked settings  ->  Update user settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get meeting detail reports  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Add a meeting registrant  [ label = "value : country"] type: string, parameter: body
Get meeting detail reports  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Add a webinar registrant  [ label = "value : country"] type: string, parameter: body
Get meeting detail reports  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get meeting detail reports  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get meeting detail reports  ->  Create a meeting  [ label = "user_name : contact_name"] type: string, parameter: body
Get meeting detail reports  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get meeting detail reports  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get meeting detail reports  ->  Create a meeting  [ label = "user_name : name"] type: string, parameter: body
Get meeting detail reports  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Get meeting detail reports  ->  Create a recording registrant  [ label = "value : country"] type: string, parameter: body
Get meeting detail reports  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get meeting detail reports  ->  Create a webinar  [ label = "user_name : contact_name"] type: string, parameter: body
Get meeting detail reports  ->  Create meeting's invite links  [ label = "user_name : name"] type: string, parameter: body
Get meeting detail reports  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Create webinar's invite links  [ label = "user_name : name"] type: string, parameter: body
Get meeting detail reports  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get meeting detail reports  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get meeting detail reports  ->  Enable SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get meeting detail reports  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get meeting detail reports  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Update Live Stream Status  [ label = "user_name : display_name"] type: string, parameter: body
Get meeting detail reports  ->  Update SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get meeting detail reports  ->  Update a group's settings  [ label = "value : value"] type: string, parameter: body
Get meeting detail reports  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Get meeting detail reports  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get meeting detail reports  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get meeting detail reports  ->  Update a user  [ label = "value : country"] type: string, parameter: body
Get meeting detail reports  ->  Update a user  [ label = "value : phone_country"] type: string, parameter: body
Get meeting detail reports  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get meeting detail reports  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get meeting details  ->  Add a meeting registrant  [ label = "value : country"] type: string, parameter: body
Get meeting details  ->  Add a webinar registrant  [ label = "value : country"] type: string, parameter: body
Get meeting details  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get meeting details  ->  Create a group  [ label = "dept : name"] type: string, parameter: body
Get meeting details  ->  Create a recording registrant  [ label = "value : country"] type: string, parameter: body
Get meeting details  ->  Create an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get meeting details  ->  Update a group  [ label = "dept : name"] type: string, parameter: body
Get meeting details  ->  Update a group's settings  [ label = "value : value"] type: string, parameter: body
Get meeting details  ->  Update a user  [ label = "dept : dept"] type: string, parameter: body
Get meeting details  ->  Update a user  [ label = "value : country"] type: string, parameter: body
Get meeting details  ->  Update a user  [ label = "value : phone_country"] type: string, parameter: body
Get meeting details  ->  Update an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get meeting participant QoS  ->  Create a meeting  [ label = "domain : authentication_domains"] type: string, parameter: body
Get meeting participant QoS  ->  Create a webinar  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get meeting participant QoS  ->  Create a webinar  [ label = "domain : authentication_domains"] type: string, parameter: body
Get meeting participant QoS  ->  Enable SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get meeting participant QoS  ->  Update SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get meeting participant QoS  ->  Update account settings  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get meeting participant reports  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get meeting participant reports  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get meeting participant reports  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get meeting participant reports  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get meeting participant reports  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get meeting participant reports  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get meeting participant reports  ->  Get account settings  [ label = "status : custom_query_fields"] type: string, parameter: query
Get meeting participant reports  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get meeting participant reports  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get meeting participant reports  ->  List meeting templates  [ label = "id : userId"] type: string, parameter: path
Get meeting participant reports  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get meeting participant reports  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get meeting participant reports  ->  Use in-meeting cloud recording controls  [ label = "id : id"] type: string, parameter: body
Get meeting participant reports  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get meeting poll reports  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get meeting poll reports  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get meeting poll reports  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get meeting poll reports  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get meeting poll reports  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get meeting poll reports  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
Get meeting poll reports  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get meeting poll reports  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get meeting poll reports  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
Get meeting poll reports  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
Get meeting poll reports  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
Get meeting poll reports  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
Get meeting poll reports  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get meeting poll reports  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
Get meeting poll reports  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
Get meeting poll reports  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
Get meeting poll reports  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
Get meeting poll reports  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
Get meeting poll reports  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting poll reports  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get meeting poll reports  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get meeting poll reports  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get meeting poll reports  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting poll reports  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting poll reports  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get meeting poll reports  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
Get meeting poll reports  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
Get meeting poll reports  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting poll reports  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
Get meeting poll reports  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get meeting poll reports  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get meeting poll reports  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
Get meeting poll reports  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
Get meeting poll reports  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get meeting poll reports  ->  Update registration questions  [ label = "question : title"] type: string, parameter: body
Get meeting poll reports  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get meeting recording settings  ->  Create a reservation  [ label = "topic : topic"] type: string, parameter: body
Get meeting recording settings  ->  Update a reservation  [ label = "topic : topic"] type: string, parameter: body
Get meeting recording settings  ->  Update meeting recording settings  [ label = "password : password"] type: int, parameter: body
Get meeting recording settings  ->  Update meeting recording settings  [ label = "share_recording : share_recording"] type: string, parameter: body
Get meeting recording settings  ->  Update meeting recording settings  [ label = "authentication_domains : authentication_domains"] type: string, parameter: body
Get meeting recording settings  ->  Update meeting recording settings  [ label = "authentication_option : authentication_option"] type: string, parameter: body
Get meeting recording settings  ->  Update meeting recording settings  [ label = "topic : topic"] type: string, parameter: body
Get meeting recordings  ->  Create a reservation  [ label = "start_time : end_time"] type: string, parameter: body
Get meeting recordings  ->  Create a reservation  [ label = "start_time : start_time"] type: string, parameter: body
Get meeting recordings  ->  Update a reservation  [ label = "start_time : end_time"] type: string, parameter: body
Get meeting recordings  ->  Update a reservation  [ label = "start_time : start_time"] type: string, parameter: body
Get meeting reports  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get meeting reports  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get meeting reports  ->  Create a meeting  [ label = "user_name : contact_name"] type: string, parameter: body
Get meeting reports  ->  Create a meeting  [ label = "user_name : name"] type: string, parameter: body
Get meeting reports  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get meeting reports  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Get meeting reports  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get meeting reports  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get meeting reports  ->  Create a webinar  [ label = "user_name : contact_name"] type: string, parameter: body
Get meeting reports  ->  Create meeting's invite links  [ label = "user_name : name"] type: string, parameter: body
Get meeting reports  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Create webinar's invite links  [ label = "user_name : name"] type: string, parameter: body
Get meeting reports  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting reports  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get meeting reports  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get meeting reports  ->  Enable SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get meeting reports  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting reports  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting reports  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get meeting reports  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get meeting reports  ->  Update Live Stream Status  [ label = "user_name : display_name"] type: string, parameter: body
Get meeting reports  ->  Update SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get meeting reports  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Get meeting reports  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get meeting reports  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get meeting reports  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get meeting reports  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get operation logs report  ->  Delete a user  [ label = "action : action"] type: string, parameter: query
Get operation logs report  ->  Get zoom meetings client feedback  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get past meeting details  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get past meeting details  ->  Create a group  [ label = "dept : name"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "user_name : name"] type: string, parameter: body
Get past meeting details  ->  Create a meeting  [ label = "user_name : contact_name"] type: string, parameter: body
Get past meeting details  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Create a webinar  [ label = "user_name : contact_name"] type: string, parameter: body
Get past meeting details  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get past meeting details  ->  Create an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get past meeting details  ->  Create meeting's invite links  [ label = "user_name : name"] type: string, parameter: body
Get past meeting details  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Create webinar's invite links  [ label = "user_name : name"] type: string, parameter: body
Get past meeting details  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get past meeting details  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get past meeting details  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get past meeting details  ->  Enable SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get past meeting details  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get past meeting details  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get past meeting details  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get past meeting details  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get past meeting details  ->  Update Live Stream Status  [ label = "user_name : display_name"] type: string, parameter: body
Get past meeting details  ->  Update SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get past meeting details  ->  Update a group  [ label = "dept : name"] type: string, parameter: body
Get past meeting details  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get past meeting details  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get past meeting details  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Get past meeting details  ->  Update a user  [ label = "dept : dept"] type: string, parameter: body
Get past meeting details  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Update an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get past meeting details  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get past meeting details  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get past meeting participants  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
Get past meeting participants  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get past meeting participants  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
Get past meeting participants  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get past meeting participants  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get past meeting participants  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
Get past meeting participants  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
Get past meeting participants  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
Get past meeting participants  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get past meeting participants  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get past meeting participants  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get past meeting participants  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get past meeting participants  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get past meeting participants  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
Get past meeting participants  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get past meeting participants  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get past meeting participants  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get past meeting participants  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get post meeting feedback  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get post webinar feedback  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get registration questions  ->  Update registration questions  [ label = "field_name : field_name"] type: string, parameter: body
Get registration questions  ->  Update registration questions  [ label = "title : title"] type: string, parameter: body
Get registration questions  ->  Update registration questions  [ label = "type : type"] type: string, parameter: body
Get role information  ->  Assign a role  [ label = "id : roleId"] type: int, parameter: path
Get role information  ->  Create a role  [ label = "description : name"] type: string, parameter: body
Get role information  ->  Create a role  [ label = "name : name"] type: string, parameter: body
Get role information  ->  Create a role  [ label = "name : description"] type: string, parameter: body
Get role information  ->  Create a role  [ label = "description : description"] type: string, parameter: body
Get role information  ->  Delete a role  [ label = "id : roleId"] type: int, parameter: path
Get role information  ->  List members in a role  [ label = "id : roleId"] type: int, parameter: path
Get role information  ->  List members in a role  [ label = "id : page_count"] type: int, parameter: query
Get role information  ->  Unassign a role  [ label = "id : roleId"] type: int, parameter: path
Get role information  ->  Update role information  [ label = "name : description"] type: string, parameter: body
Get role information  ->  Update role information  [ label = "description : description"] type: string, parameter: body
Get role information  ->  Update role information  [ label = "id : roleId"] type: int, parameter: path
Get role information  ->  Update role information  [ label = "description : name"] type: string, parameter: body
Get role information  ->  Update role information  [ label = "id : id"] type: int, parameter: body
Get role information  ->  Update role information  [ label = "name : name"] type: string, parameter: body
Get sharing/recording details  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get sign In / sign out activity report  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get sign In / sign out activity report  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get sign In / sign out activity report  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get sign In / sign out activity report  ->  Enable SIP phone  [ label = "ip_address : register_server"] type: string, parameter: body
Get sign In / sign out activity report  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get sign In / sign out activity report  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get sign In / sign out activity report  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Update SIP phone  [ label = "ip_address : register_server"] type: string, parameter: body
Get sign In / sign out activity report  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get sign In / sign out activity report  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get sign In / sign out activity report  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get telephone reports  ->  Add IM directory group members  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Add a meeting registrant  [ label = "country_name : country"] type: string, parameter: body
Get telephone reports  ->  Add a meeting registrant  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Add a webinar registrant  [ label = "country_name : country"] type: string, parameter: body
Get telephone reports  ->  Add a webinar registrant  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Add assistants  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Add group admins  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Add group members  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Check a user email  [ label = "host_email : email"] type: string, parameter: query
Get telephone reports  ->  Create a meeting  [ label = "host_name : name"] type: string, parameter: body
Get telephone reports  ->  Create a meeting  [ label = "host_email : contact_email"] type: string, parameter: body
Get telephone reports  ->  Create a meeting  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Create a meeting  [ label = "host_name : contact_name"] type: string, parameter: body
Get telephone reports  ->  Create a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Get telephone reports  ->  Create a recording registrant  [ label = "country_name : country"] type: string, parameter: body
Get telephone reports  ->  Create a recording registrant  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Create a webinar  [ label = "host_email : contact_email"] type: string, parameter: body
Get telephone reports  ->  Create a webinar  [ label = "host_name : contact_name"] type: string, parameter: body
Get telephone reports  ->  Create meeting's invite links  [ label = "host_name : name"] type: string, parameter: body
Get telephone reports  ->  Create users  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Create webinar's invite links  [ label = "host_name : name"] type: string, parameter: body
Get telephone reports  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get telephone reports  ->  Delete a user  [ label = "host_email : transfer_email"] type: string, parameter: query
Get telephone reports  ->  Enable SIP phone  [ label = "host_name : user_name"] type: string, parameter: body
Get telephone reports  ->  Enable SIP phone  [ label = "host_email : user_email"] type: string, parameter: body
Get telephone reports  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get telephone reports  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get telephone reports  ->  List SIP phones  [ label = "host_email : search_key"] type: string, parameter: query
Get telephone reports  ->  Perform batch registration  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get telephone reports  ->  Update Live Stream Status  [ label = "host_name : display_name"] type: string, parameter: body
Get telephone reports  ->  Update SIP phone  [ label = "host_name : user_name"] type: string, parameter: body
Get telephone reports  ->  Update a group's settings  [ label = "country_name : value"] type: string, parameter: body
Get telephone reports  ->  Update a meeting  [ label = "host_email : schedule_for"] type: string, parameter: body
Get telephone reports  ->  Update a user  [ label = "country_name : phone_country"] type: string, parameter: body
Get telephone reports  ->  Update a user  [ label = "country_name : country"] type: string, parameter: body
Get telephone reports  ->  Update a user's email  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Update registrant's status  [ label = "host_email : email"] type: string, parameter: body
Get telephone reports  ->  Use in-meeting cloud recording controls  [ label = "host_email : email"] type: string, parameter: body
Get top 25 Zoom Rooms with issues  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get top 25 issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  Get zoom meetings client feedback  [ label = "to : to"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  List Zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  List client meeting satisfaction  [ label = "to : to"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  List client meeting satisfaction  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  List meetings  [ label = "from : from"] type: string, parameter: query
Get top 25 Zoom Rooms with issues  ->  List webinars  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get top 25 Zoom Rooms with issues  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get zoom meetings client feedback  [ label = "to : to"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  Get zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  List Zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  List client meeting satisfaction  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  List client meeting satisfaction  [ label = "to : to"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  List meetings  [ label = "from : from"] type: string, parameter: query
Get top 25 issues of Zoom Rooms  ->  List webinars  [ label = "from : from"] type: string, parameter: query
Get upcoming events report  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Get upcoming events report  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get upcoming events report  ->  Get active/inactive host reports  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get upcoming events report  ->  Get sign In / sign out activity report  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get upcoming events report  ->  Get telephone reports  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get upcoming events report  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get upcoming events report  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Get user settings  ->  Create a meeting  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get user settings  ->  Create a meeting  [ label = "audio_type : audio"] type: string, parameter: body
Get user settings  ->  Create a webinar  [ label = "audio_type : value"] type: string, parameter: body
Get user settings  ->  Create a webinar  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get user settings  ->  Update a group's settings  [ label = "who_can_share_screen_when_someone_is_sharing : entry_exit_chime"] type: string, parameter: body
Get user settings  ->  Update a group's settings  [ label = "who_can_share_screen : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get user settings  ->  Update a group's settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen"] type: string, parameter: body
Get user settings  ->  Update a group's settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get user settings  ->  Update a group's settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get user settings  ->  Update a group's settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get user settings  ->  Update account settings  [ label = "who_can_share_screen_when_someone_is_sharing : who_can_share_screen"] type: string, parameter: body
Get user settings  ->  Update account settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get user settings  ->  Update account settings  [ label = "who_can_share_screen_when_someone_is_sharing : entry_exit_chime"] type: string, parameter: body
Get user settings  ->  Update account settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get user settings  ->  Update account settings  [ label = "who_can_share_screen : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get user settings  ->  Update account settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get user settings  ->  Update locked settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get user settings  ->  Update locked settings  [ label = "who_can_share_screen : entry_exit_chime"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "audio_conference_info : audio_conference_info"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "pmi_password : pmi_password"] type: int, parameter: body
Get user settings  ->  Update user settings  [ label = "entry_exit_chime : entry_exit_chime"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "entry_exit_chime : who_can_share_screen"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "who_can_share_screen : who_can_share_screen_when_someone_is_sharing"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "who_can_share_screen : who_can_share_screen"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "audio_type : audio_type"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "auto_recording : auto_recording"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "who_can_share_screen : entry_exit_chime"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "require_password_for_pmi_meetings : require_password_for_pmi_meetings"] type: string, parameter: body
Get user settings  ->  Update user settings  [ label = "default_password_for_scheduled_meetings : default_password_for_scheduled_meetings"] type: int, parameter: body
Get webinar Q&A report  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
Get webinar Q&A report  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
Get webinar Q&A report  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
Get webinar Q&A report  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
Get webinar Q&A report  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
Get webinar Q&A report  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar Q&A report  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get webinar Q&A report  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar Q&A report  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar Q&A report  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar Q&A report  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
Get webinar Q&A report  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get webinar detail reports  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Add a meeting registrant  [ label = "value : country"] type: string, parameter: body
Get webinar detail reports  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Add a webinar registrant  [ label = "value : country"] type: string, parameter: body
Get webinar detail reports  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get webinar detail reports  ->  Create a meeting  [ label = "user_name : contact_name"] type: string, parameter: body
Get webinar detail reports  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
Get webinar detail reports  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get webinar detail reports  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get webinar detail reports  ->  Create a meeting  [ label = "user_name : name"] type: string, parameter: body
Get webinar detail reports  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get webinar detail reports  ->  Create a recording registrant  [ label = "value : country"] type: string, parameter: body
Get webinar detail reports  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Create a webinar  [ label = "user_name : contact_name"] type: string, parameter: body
Get webinar detail reports  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get webinar detail reports  ->  Create meeting's invite links  [ label = "user_name : name"] type: string, parameter: body
Get webinar detail reports  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Create webinar's invite links  [ label = "user_name : name"] type: string, parameter: body
Get webinar detail reports  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar detail reports  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get webinar detail reports  ->  Enable SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get webinar detail reports  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get webinar detail reports  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar detail reports  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar detail reports  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get webinar detail reports  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar detail reports  ->  Update Live Stream Status  [ label = "user_name : display_name"] type: string, parameter: body
Get webinar detail reports  ->  Update SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
Get webinar detail reports  ->  Update a group's settings  [ label = "value : value"] type: string, parameter: body
Get webinar detail reports  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
Get webinar detail reports  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get webinar detail reports  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
Get webinar detail reports  ->  Update a user  [ label = "value : country"] type: string, parameter: body
Get webinar detail reports  ->  Update a user  [ label = "value : phone_country"] type: string, parameter: body
Get webinar detail reports  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get webinar detail reports  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get webinar details  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get webinar details  ->  Assign a role  [ label = "host : email"] type: string, parameter: body
Get webinar details  ->  Create a group  [ label = "dept : name"] type: string, parameter: body
Get webinar details  ->  Create a meeting  [ label = "value : value"] type: string, parameter: body
Get webinar details  ->  Create a webinar  [ label = "value : value"] type: string, parameter: body
Get webinar details  ->  Create an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get webinar details  ->  Update a group  [ label = "dept : name"] type: string, parameter: body
Get webinar details  ->  Update a user  [ label = "dept : dept"] type: string, parameter: body
Get webinar details  ->  Update an IM directory group  [ label = "dept : name"] type: string, parameter: body
Get webinar participant QoS  ->  Create a meeting  [ label = "domain : authentication_domains"] type: string, parameter: body
Get webinar participant QoS  ->  Create a webinar  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get webinar participant QoS  ->  Create a webinar  [ label = "domain : authentication_domains"] type: string, parameter: body
Get webinar participant QoS  ->  Enable SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get webinar participant QoS  ->  Update SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get webinar participant QoS  ->  Update account settings  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get webinar participant reports  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
Get webinar participant reports  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
Get webinar participant reports  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get webinar participant reports  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
Get webinar participant reports  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
Get webinar participant reports  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
Get webinar participant reports  ->  Get account settings  [ label = "status : custom_query_fields"] type: string, parameter: query
Get webinar participant reports  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
Get webinar participant reports  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get webinar participant reports  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
Get webinar participant reports  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
Get webinar participant reports  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
Get webinar participants  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get webinar participants  ->  Create a meeting  [ label = "sip_uri : authentication_domains"] type: string, parameter: body
Get webinar participants  ->  Create a meeting  [ label = "domain : authentication_domains"] type: string, parameter: body
Get webinar participants  ->  Create a meeting  [ label = "from_sip_uri : authentication_domains"] type: string, parameter: body
Get webinar participants  ->  Create a webinar  [ label = "from_sip_uri : authentication_domains"] type: string, parameter: body
Get webinar participants  ->  Create a webinar  [ label = "sip_uri : enforce_login_domains"] type: string, parameter: body
Get webinar participants  ->  Create a webinar  [ label = "domain : authentication_domains"] type: string, parameter: body
Get webinar participants  ->  Create a webinar  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get webinar participants  ->  Create a webinar  [ label = "from_sip_uri : enforce_login_domains"] type: string, parameter: body
Get webinar participants  ->  Create a webinar  [ label = "sip_uri : authentication_domains"] type: string, parameter: body
Get webinar participants  ->  Enable SIP phone  [ label = "connection_type : transport_protocol2"] type: string, parameter: body
Get webinar participants  ->  Enable SIP phone  [ label = "connection_type : transport_protocol3"] type: string, parameter: body
Get webinar participants  ->  Enable SIP phone  [ label = "sip_uri : domain"] type: string, parameter: body
Get webinar participants  ->  Enable SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get webinar participants  ->  Enable SIP phone  [ label = "connection_type : transport_protocol"] type: string, parameter: body
Get webinar participants  ->  Enable SIP phone  [ label = "from_sip_uri : domain"] type: string, parameter: body
Get webinar participants  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
Get webinar participants  ->  Update SIP phone  [ label = "connection_type : transport_protocol2"] type: string, parameter: body
Get webinar participants  ->  Update SIP phone  [ label = "connection_type : transport_protocol"] type: string, parameter: body
Get webinar participants  ->  Update SIP phone  [ label = "domain : domain"] type: string, parameter: body
Get webinar participants  ->  Update SIP phone  [ label = "connection_type : transport_protocol3"] type: string, parameter: body
Get webinar participants  ->  Update SIP phone  [ label = "sip_uri : domain"] type: string, parameter: body
Get webinar participants  ->  Update SIP phone  [ label = "from_sip_uri : domain"] type: string, parameter: body
Get webinar participants  ->  Update a group's settings  [ label = "role : who_can_share_screen"] type: string, parameter: body
Get webinar participants  ->  Update a group's settings  [ label = "role : entry_exit_chime"] type: string, parameter: body
Get webinar participants  ->  Update account settings  [ label = "domain : enforce_login_domains"] type: string, parameter: body
Get webinar participants  ->  Update account settings  [ label = "role : who_can_share_screen"] type: string, parameter: body
Get webinar participants  ->  Update account settings  [ label = "role : entry_exit_chime"] type: string, parameter: body
Get webinar participants  ->  Update account settings  [ label = "from_sip_uri : enforce_login_domains"] type: string, parameter: body
Get webinar participants  ->  Update account settings  [ label = "sip_uri : enforce_login_domains"] type: string, parameter: body
Get webinar poll reports  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Get webinar poll reports  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get webinar poll reports  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
Get webinar poll reports  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Get webinar poll reports  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
Get webinar poll reports  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Get webinar poll reports  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
Get webinar poll reports  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
Get webinar poll reports  ->  Create users  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
Get webinar poll reports  ->  Delete a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar poll reports  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Get webinar poll reports  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Get webinar poll reports  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get webinar poll reports  ->  Get a meeting's archived files  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar poll reports  ->  Get past meeting participants  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar poll reports  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Get webinar poll reports  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Recover meeting recordings  [ label = "uuid : meetingUUID"] type: string, parameter: path
Get webinar poll reports  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
Get webinar poll reports  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
Get webinar poll reports  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Get webinar poll reports  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Get webinar poll reports  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Get webinar tracking sources  ->  Create a webinar  [ label = "source_name : survey_url"] type: string, parameter: body
Get webinar tracking sources  ->  List webinar registrants  [ label = "id : tracking_source_id"] type: int, parameter: query
Get webinar tracking sources  ->  Set global dial-in URL for a TSP user  [ label = "source_name : audio_url"] type: string, parameter: body
Get webinar tracking sources  ->  Update a meeting survey  [ label = "source_name : third_party_survey"] type: string, parameter: body
Get webinar tracking sources  ->  Update a webinar survey  [ label = "source_name : third_party_survey"] type: string, parameter: body
Get webinar's session branding  ->  Set webinar's default branding Virtual Background  [ label = "id : id"] type: string, parameter: query
Get zoom meetings client feedback  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
Get zoom meetings client feedback  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get top 25 Zoom Rooms with issues  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get top 25 issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  List Zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  List client meeting satisfaction  [ label = "to : to"] type: string, parameter: query
Get zoom meetings client feedback  ->  List client meeting satisfaction  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  List meetings  [ label = "from : from"] type: string, parameter: query
Get zoom meetings client feedback  ->  List webinars  [ label = "from : from"] type: string, parameter: query
List Q&A of past webinar  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List Q&A of past webinar  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List Q&A of past webinar  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List Q&A of past webinar  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
List Q&A of past webinar  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
List Q&A of past webinar  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
List Q&A of past webinar  ->  Create a webinar  [ label = "start_time : start_time"] type: string, parameter: body
List Q&A of past webinar  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List Q&A of past webinar  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
List Q&A of past webinar  ->  Create users  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
List Q&A of past webinar  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List Q&A of past webinar  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List Q&A of past webinar  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
List Q&A of past webinar  ->  Get webinar absentees  [ label = "uuid : WebinarUUID"] type: string, parameter: path
List Q&A of past webinar  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List Q&A of past webinar  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
List Q&A of past webinar  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
List Q&A of past webinar  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List Q&A of past webinar  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List Q&A of past webinar  ->  Update registration questions  [ label = "question : title"] type: string, parameter: body
List Q&A of past webinar  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List SIP phones  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
List SIP phones  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
List SIP phones  ->  Create a meeting  [ label = "user_name : contact_name"] type: string, parameter: body
List SIP phones  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Create a meeting  [ label = "id : password"] type: int, parameter: body
List SIP phones  ->  Create a meeting  [ label = "user_name : name"] type: string, parameter: body
List SIP phones  ->  Create a meeting  [ label = "domain : authentication_domains"] type: string, parameter: body
List SIP phones  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
List SIP phones  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Create a webinar  [ label = "user_name : contact_name"] type: string, parameter: body
List SIP phones  ->  Create a webinar  [ label = "id : password"] type: int, parameter: body
List SIP phones  ->  Create a webinar  [ label = "domain : authentication_domains"] type: string, parameter: body
List SIP phones  ->  Create a webinar  [ label = "domain : enforce_login_domains"] type: string, parameter: body
List SIP phones  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
List SIP phones  ->  Create meeting's invite links  [ label = "user_name : name"] type: string, parameter: body
List SIP phones  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Create webinar's invite links  [ label = "user_name : name"] type: string, parameter: body
List SIP phones  ->  Delete SIP phone  [ label = "id : phoneId"] type: int, parameter: path
List SIP phones  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol2 : transport_protocol2"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol : transport_protocol"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol2 : transport_protocol"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "proxy_server3 : proxy_server3"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "register_server : register_server"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol3 : transport_protocol2"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "register_server2 : register_server2"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "authorization_name : authorization_name"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "voice_mail : voice_mail"] type: int, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol2 : transport_protocol3"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "id : password"] type: int, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol : transport_protocol2"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol3 : transport_protocol3"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "register_server3 : register_server3"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "proxy_server : proxy_server"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol3 : transport_protocol"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "proxy_server2 : proxy_server2"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "transport_protocol : transport_protocol3"] type: string, parameter: body
List SIP phones  ->  Enable SIP phone  [ label = "domain : domain"] type: string, parameter: body
List SIP phones  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Update Live Stream Status  [ label = "user_name : display_name"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "voice_mail : voice_mail"] type: int, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "id : password"] type: int, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol3 : transport_protocol3"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "proxy_server2 : proxy_server2"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "user_name : user_name"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "register_server3 : register_server3"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "proxy_server : proxy_server"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol : transport_protocol3"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol3 : transport_protocol"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol : transport_protocol2"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol2 : transport_protocol2"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "domain : domain"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol2 : transport_protocol"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "register_server2 : register_server2"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "proxy_server3 : proxy_server3"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "id : phoneId"] type: int, parameter: path
List SIP phones  ->  Update SIP phone  [ label = "register_server : register_server"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol3 : transport_protocol2"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "authorization_name : authorization_name"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol : transport_protocol"] type: string, parameter: body
List SIP phones  ->  Update SIP phone  [ label = "transport_protocol2 : transport_protocol3"] type: string, parameter: body
List SIP phones  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
List SIP phones  ->  Update a meeting  [ label = "id : password"] type: int, parameter: body
List SIP phones  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Update a webinar  [ label = "id : password"] type: int, parameter: body
List SIP phones  ->  Update account settings  [ label = "domain : enforce_login_domains"] type: string, parameter: body
List SIP phones  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
List SIP phones  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
List Zoom Room devices  ->  Add a Zoom Room  [ label = "room_name : name"] type: string, parameter: body
List Zoom Room devices  ->  Update a Zoom Room profile  [ label = "room_name : name"] type: string, parameter: body
List Zoom Room locations  ->  Add a Zoom Room  [ label = "parent_location_id : location_id"] type: string, parameter: body
List Zoom Room locations  ->  Add a Zoom Room  [ label = "id : location_id"] type: string, parameter: body
List Zoom Room locations  ->  Add a location  [ label = "parent_location_id : parent_location_id"] type: string, parameter: body
List Zoom Room locations  ->  Add a location  [ label = "id : parent_location_id"] type: string, parameter: body
List Zoom Room locations  ->  Change a Zoom Room's location  [ label = "id : location_id"] type: string, parameter: body
List Zoom Room locations  ->  Change a Zoom Room's location  [ label = "parent_location_id : location_id"] type: string, parameter: body
List Zoom Room locations  ->  Change the assigned parent location  [ label = "parent_location_id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Change the assigned parent location  [ label = "id : parent_location_id"] type: string, parameter: body
List Zoom Room locations  ->  Change the assigned parent location  [ label = "id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Change the assigned parent location  [ label = "parent_location_id : parent_location_id"] type: string, parameter: body
List Zoom Room locations  ->  Get Zoom Room location profile  [ label = "parent_location_id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Get Zoom Room location profile  [ label = "id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Get location settings  [ label = "id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Get location settings  [ label = "parent_location_id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  List Zoom Rooms  [ label = "parent_location_id : location_id"] type: string, parameter: query
List Zoom Room locations  ->  List Zoom Rooms  [ label = "id : location_id"] type: string, parameter: query
List Zoom Room locations  ->  List workspaces  [ label = "parent_location_id : location_id"] type: string, parameter: query
List Zoom Room locations  ->  List workspaces  [ label = "id : location_id"] type: string, parameter: query
List Zoom Room locations  ->  Update Zoom Room location profile  [ label = "parent_location_id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Update Zoom Room location profile  [ label = "id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Update location settings  [ label = "parent_location_id : locationId"] type: string, parameter: path
List Zoom Room locations  ->  Update location settings  [ label = "id : locationId"] type: string, parameter: path
List Zoom Rooms  ->  Add a Zoom Room  [ label = "name : name"] type: string, parameter: body
List Zoom Rooms  ->  Add a Zoom Room  [ label = "location_id : location_id"] type: string, parameter: body
List Zoom Rooms  ->  Add a location  [ label = "location_id : parent_location_id"] type: string, parameter: body
List Zoom Rooms  ->  Change Zoom Rooms app version  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Change Zoom Rooms app version  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Change a Zoom Room's location  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Change a Zoom Room's location  [ label = "location_id : location_id"] type: string, parameter: body
List Zoom Rooms  ->  Change a Zoom Room's location  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Change the assigned parent location  [ label = "location_id : locationId"] type: string, parameter: path
List Zoom Rooms  ->  Change the assigned parent location  [ label = "location_id : parent_location_id"] type: string, parameter: body
List Zoom Rooms  ->  Check-in or check-out of a Zoom Room  [ label = "id : id"] type: string, parameter: path
List Zoom Rooms  ->  Check-in or check-out of a Zoom Room  [ label = "room_id : id"] type: string, parameter: path
List Zoom Rooms  ->  Create a device profile  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Create a device profile  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Create a reservation  [ label = "room_id : workspaceId"] type: string, parameter: path
List Zoom Rooms  ->  Create a reservation  [ label = "id : workspaceId"] type: string, parameter: path
List Zoom Rooms  ->  Delete a Zoom Room  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Delete a Zoom Room  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Delete a device profile  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Delete a device profile  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Delete a reservation  [ label = "id : workspaceId"] type: string, parameter: path
List Zoom Rooms  ->  Delete a reservation  [ label = "room_id : workspaceId"] type: string, parameter: path
List Zoom Rooms  ->  Get Zoom Room location profile  [ label = "location_id : locationId"] type: string, parameter: path
List Zoom Rooms  ->  Get Zoom Room profile  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get Zoom Room profile  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get Zoom Room settings  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get Zoom Room settings  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get a device profile  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get a device profile  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get device information  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get device information  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Get location settings  [ label = "location_id : locationId"] type: string, parameter: path
List Zoom Rooms  ->  List Zoom Room devices  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  List Zoom Room devices  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  List Zoom Room locations  [ label = "location_id : parent_location_id"] type: string, parameter: query
List Zoom Rooms  ->  List device profiles  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  List device profiles  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  List workspaces  [ label = "location_id : location_id"] type: string, parameter: query
List Zoom Rooms  ->  Update E911 digital signage  [ label = "id : target_ids"] type: string, parameter: body
List Zoom Rooms  ->  Update E911 digital signage  [ label = "room_id : target_ids"] type: string, parameter: body
List Zoom Rooms  ->  Update Zoom Room location profile  [ label = "location_id : locationId"] type: string, parameter: path
List Zoom Rooms  ->  Update Zoom Room settings  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Update Zoom Room settings  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Update a Zoom Room profile  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Update a Zoom Room profile  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Update a Zoom Room profile  [ label = "name : name"] type: string, parameter: body
List Zoom Rooms  ->  Update a device profile  [ label = "room_id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Update a device profile  [ label = "id : roomId"] type: string, parameter: path
List Zoom Rooms  ->  Update a reservation  [ label = "room_id : workspaceId"] type: string, parameter: path
List Zoom Rooms  ->  Update a reservation  [ label = "id : workspaceId"] type: string, parameter: path
List Zoom Rooms  ->  Update location settings  [ label = "location_id : locationId"] type: string, parameter: path
List Zoom meetings client feedback  ->  Add a user's TSP account  [ label = "feedback_id : code"] type: int, parameter: body
List Zoom meetings client feedback  ->  Create a meeting  [ label = "feedback_id : weekly_days"] type: int, parameter: body
List Zoom meetings client feedback  ->  Create a webinar  [ label = "feedback_id : weekly_days"] type: int, parameter: body
List Zoom meetings client feedback  ->  Delete a user's TSP account  [ label = "feedback_id : tspId"] type: int, parameter: path
List Zoom meetings client feedback  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get a user's TSP account  [ label = "feedback_id : tspId"] type: int, parameter: path
List Zoom meetings client feedback  ->  Get active/inactive host reports  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get meeting recordings  [ label = "feedback_id : ttl"] type: int, parameter: query
List Zoom meetings client feedback  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get telephone reports  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  Get telephone reports  [ label = "feedback_id : type"] type: int, parameter: query
List Zoom meetings client feedback  ->  Get top 25 Zoom Rooms with issues  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get top 25 issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get zoom meetings client feedback  [ label = "to : to"] type: string, parameter: query
List Zoom meetings client feedback  ->  Get zoom meetings client feedback  [ label = "feedback_id : feedbackId"] type: int, parameter: path
List Zoom meetings client feedback  ->  Get zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  List H.323/SIP devices  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List IM directory group members  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List SIP phones  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List Zoom Rooms  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List client meeting satisfaction  [ label = "to : to"] type: string, parameter: query
List Zoom meetings client feedback  ->  List client meeting satisfaction  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  List group members  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List meeting registrants  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List meetings  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  List meetings  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List members in a role  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List recording registrants  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List users  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List webinar registrants  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  List webinars  [ label = "from : from"] type: string, parameter: query
List Zoom meetings client feedback  ->  List webinars  [ label = "feedback_id : page_number"] type: int, parameter: query
List Zoom meetings client feedback  ->  Update a TSP account  [ label = "feedback_id : tspId"] type: int, parameter: path
List Zoom meetings client feedback  ->  Update a TSP account  [ label = "feedback_id : code"] type: int, parameter: body
List Zoom meetings client feedback  ->  Update a user  [ label = "feedback_id : value"] type: int, parameter: body
List a user's PAC accounts  ->  Add a meeting registrant  [ label = "number : phone"] type: int, parameter: body
List a user's PAC accounts  ->  Add a webinar registrant  [ label = "number : phone"] type: int, parameter: body
List a user's PAC accounts  ->  Create a recording registrant  [ label = "number : phone"] type: int, parameter: body
List a user's PAC accounts  ->  Update a user  [ label = "number : number"] type: int, parameter: body
List a user's PAC accounts  ->  Update a user  [ label = "number : phone_number"] type: int, parameter: body
List all recordings  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get top 25 Zoom Rooms with issues  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get top 25 issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  Get zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
List all recordings  ->  List Zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  List client meeting satisfaction  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  List meetings  [ label = "from : from"] type: string, parameter: query
List all recordings  ->  List webinars  [ label = "from : from"] type: string, parameter: query
List archived files  ->  Create a reservation  [ label = "topic : topic"] type: string, parameter: body
List archived files  ->  Delete a meeting recording file  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Delete meeting recordings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Get meeting recording settings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Get meeting recordings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Get registration questions  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Recover a single recording  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Update Zoom Room location profile  [ label = "timezone : timezone"] type: string, parameter: body
List archived files  ->  Update a reservation  [ label = "topic : topic"] type: string, parameter: body
List archived files  ->  Update meeting recording settings  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List archived files  ->  Update meeting recording settings  [ label = "topic : topic"] type: string, parameter: body
List archived files  ->  Update registration questions  [ label = "parent_meeting_id : meetingId"] type: string, parameter: path
List client meeting satisfaction  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get CRC port usage  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get IM metrics  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get Zoom Rooms details  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get active/inactive host reports  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get chat messages reports  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get chat metrics  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get chat sessions reports  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get cloud recording usage report  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get issues of Zoom Rooms  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get meeting quality scores  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get meeting reports  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get operation logs report  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get telephone reports  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get top 25 Zoom Rooms with issues  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get top 25 Zoom Rooms with issues  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get top 25 issues of Zoom Rooms  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get top 25 issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get upcoming events report  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get zoom meetings client feedback  [ label = "to : to"] type: string, parameter: query
List client meeting satisfaction  ->  Get zoom meetings client feedback  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  Get zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  List Zoom meetings client feedback  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  List Zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  List meetings  [ label = "from : from"] type: string, parameter: query
List client meeting satisfaction  ->  List meetings  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  List webinars  [ label = "date : from"] type: string, parameter: query
List client meeting satisfaction  ->  List webinars  [ label = "from : from"] type: string, parameter: query
List device profiles  ->  Create a device profile  [ label = "camera_id : camera_id"] type: string, parameter: body
List device profiles  ->  Create a device profile  [ label = "microphone_id : microphone_id"] type: string, parameter: body
List device profiles  ->  Create a device profile  [ label = "name : name"] type: string, parameter: body
List device profiles  ->  Create a device profile  [ label = "speaker_id : speaker_id"] type: string, parameter: body
List device profiles  ->  Update a device profile  [ label = "camera_id : camera_id"] type: string, parameter: body
List device profiles  ->  Update a device profile  [ label = "speaker_id : speaker_id"] type: string, parameter: body
List device profiles  ->  Update a device profile  [ label = "microphone_id : microphone_id"] type: string, parameter: body
List group admins  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List group admins  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
List group admins  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
List group admins  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List group admins  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List group admins  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
List group admins  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List group admins  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
List group admins  ->  Create users  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
List group admins  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List group admins  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List group admins  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
List group admins  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List group admins  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
List group admins  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
List group admins  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List group admins  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List group admins  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add IM directory group members  [ label = "id : id"] type: string, parameter: body
List group members  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
List group members  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
List group members  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
List group members  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
List group members  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add group admins  [ label = "id : id"] type: string, parameter: body
List group members  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List group members  ->  Add group members  [ label = "id : id"] type: string, parameter: body
List group members  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List group members  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
List group members  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List group members  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List group members  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List group members  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List group members  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
List group members  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
List group members  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List group members  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
List group members  ->  Create users  [ label = "email : email"] type: string, parameter: body
List group members  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
List group members  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List group members  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List group members  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List group members  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
List group members  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
List group members  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List group members  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List group members  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
List group members  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
List group members  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List group members  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List group members  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List groups  ->  Add IM directory group members  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Add IM directory group members  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Add group admins  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Add group admins  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Add group members  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Add group members  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Delete IM directory group member  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Delete IM directory group member  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Delete a group  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Delete a group  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Delete a group admin  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Delete a group admin  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Delete a group member  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Delete a group member  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Delete an IM directory group  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Delete an IM directory group  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Get a group  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Get a group  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  List IM directory group members  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  List IM directory group members  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  List group admins  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  List group admins  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  List group members  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  List group members  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Retrieve an IM directory group  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Retrieve an IM directory group  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Update a group  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Update a group  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Update a group member  [ label = "value : target_group_id"] type: string, parameter: body
List groups  ->  Update a group member  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Update a group member  [ label = "value : groupId"] type: string, parameter: path
List groups  ->  Update a group member  [ label = "id : target_group_id"] type: string, parameter: body
List groups  ->  Update an IM directory group  [ label = "id : groupId"] type: string, parameter: path
List groups  ->  Update an IM directory group  [ label = "value : groupId"] type: string, parameter: path
List meeting participants  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
List meeting participants  ->  Create a meeting  [ label = "domain : authentication_domains"] type: string, parameter: body
List meeting participants  ->  Create a meeting  [ label = "sip_uri : authentication_domains"] type: string, parameter: body
List meeting participants  ->  Create a meeting  [ label = "from_sip_uri : authentication_domains"] type: string, parameter: body
List meeting participants  ->  Create a webinar  [ label = "from_sip_uri : enforce_login_domains"] type: string, parameter: body
List meeting participants  ->  Create a webinar  [ label = "domain : enforce_login_domains"] type: string, parameter: body
List meeting participants  ->  Create a webinar  [ label = "from_sip_uri : authentication_domains"] type: string, parameter: body
List meeting participants  ->  Create a webinar  [ label = "sip_uri : enforce_login_domains"] type: string, parameter: body
List meeting participants  ->  Create a webinar  [ label = "sip_uri : authentication_domains"] type: string, parameter: body
List meeting participants  ->  Create a webinar  [ label = "domain : authentication_domains"] type: string, parameter: body
List meeting participants  ->  Enable SIP phone  [ label = "sip_uri : domain"] type: string, parameter: body
List meeting participants  ->  Enable SIP phone  [ label = "from_sip_uri : domain"] type: string, parameter: body
List meeting participants  ->  Enable SIP phone  [ label = "connection_type : transport_protocol"] type: string, parameter: body
List meeting participants  ->  Enable SIP phone  [ label = "domain : domain"] type: string, parameter: body
List meeting participants  ->  Enable SIP phone  [ label = "connection_type : transport_protocol3"] type: string, parameter: body
List meeting participants  ->  Enable SIP phone  [ label = "connection_type : transport_protocol2"] type: string, parameter: body
List meeting participants  ->  Get account settings  [ label = "status : custom_query_fields"] type: string, parameter: query
List meeting participants  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
List meeting participants  ->  Update SIP phone  [ label = "from_sip_uri : domain"] type: string, parameter: body
List meeting participants  ->  Update SIP phone  [ label = "connection_type : transport_protocol2"] type: string, parameter: body
List meeting participants  ->  Update SIP phone  [ label = "connection_type : transport_protocol"] type: string, parameter: body
List meeting participants  ->  Update SIP phone  [ label = "domain : domain"] type: string, parameter: body
List meeting participants  ->  Update SIP phone  [ label = "connection_type : transport_protocol3"] type: string, parameter: body
List meeting participants  ->  Update SIP phone  [ label = "sip_uri : domain"] type: string, parameter: body
List meeting participants  ->  Update a group's settings  [ label = "role : who_can_share_screen"] type: string, parameter: body
List meeting participants  ->  Update a group's settings  [ label = "role : entry_exit_chime"] type: string, parameter: body
List meeting participants  ->  Update account settings  [ label = "domain : enforce_login_domains"] type: string, parameter: body
List meeting participants  ->  Update account settings  [ label = "role : who_can_share_screen"] type: string, parameter: body
List meeting participants  ->  Update account settings  [ label = "sip_uri : enforce_login_domains"] type: string, parameter: body
List meeting participants  ->  Update account settings  [ label = "from_sip_uri : enforce_login_domains"] type: string, parameter: body
List meeting participants  ->  Update account settings  [ label = "role : entry_exit_chime"] type: string, parameter: body
List meetings  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
List meetings  ->  Create a group  [ label = "value : name"] type: string, parameter: body
List meetings  ->  Create a meeting  [ label = "agenda : agenda"] type: string, parameter: body
List meetings  ->  Create a meeting  [ label = "topic : topic"] type: string, parameter: body
List meetings  ->  Create a meeting  [ label = "topic : agenda"] type: string, parameter: body
List meetings  ->  Create a meeting  [ label = "agenda : topic"] type: string, parameter: body
List meetings  ->  Create a meeting  [ label = "timezone : timezone"] type: string, parameter: body
List meetings  ->  Create a webinar  [ label = "timezone : timezone"] type: string, parameter: body
List meetings  ->  Create an IM directory group  [ label = "value : name"] type: string, parameter: body
List meetings  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
List meetings  ->  List meeting templates  [ label = "host_id : userId"] type: string, parameter: path
List meetings  ->  Update a group  [ label = "value : name"] type: string, parameter: body
List meetings  ->  Update a meeting  [ label = "agenda : agenda"] type: string, parameter: body
List meetings  ->  Update a meeting  [ label = "topic : topic"] type: string, parameter: body
List meetings  ->  Update a meeting  [ label = "timezone : timezone"] type: string, parameter: body
List meetings  ->  Update a meeting  [ label = "topic : agenda"] type: string, parameter: body
List meetings  ->  Update a meeting  [ label = "agenda : topic"] type: string, parameter: body
List meetings  ->  Update a user  [ label = "value : dept"] type: string, parameter: body
List meetings  ->  Update a webinar  [ label = "timezone : timezone"] type: string, parameter: body
List meetings  ->  Update an IM directory group  [ label = "value : name"] type: string, parameter: body
List meetings  ->  Use in-meeting cloud recording controls  [ label = "host_id : id"] type: string, parameter: body
List members in a role  ->  Add a Zoom Room  [ label = "id : location_id"] type: string, parameter: body
List members in a role  ->  Add a location  [ label = "id : parent_location_id"] type: string, parameter: body
List members in a role  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
List members in a role  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
List members in a role  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
List members in a role  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
List members in a role  ->  Change a Zoom Room's location  [ label = "id : location_id"] type: string, parameter: body
List members in a role  ->  Change the assigned parent location  [ label = "id : parent_location_id"] type: string, parameter: body
List members in a role  ->  Change the assigned parent location  [ label = "id : locationId"] type: string, parameter: path
List members in a role  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
List members in a role  ->  Create a group  [ label = "department : name"] type: string, parameter: body
List members in a role  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
List members in a role  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
List members in a role  ->  Create an IM directory group  [ label = "department : name"] type: string, parameter: body
List members in a role  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
List members in a role  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
List members in a role  ->  Get Zoom Room location profile  [ label = "id : locationId"] type: string, parameter: path
List members in a role  ->  Get location settings  [ label = "id : locationId"] type: string, parameter: path
List members in a role  ->  List Zoom Room locations  [ label = "id : parent_location_id"] type: string, parameter: query
List members in a role  ->  List Zoom Rooms  [ label = "id : location_id"] type: string, parameter: query
List members in a role  ->  List workspaces  [ label = "id : location_id"] type: string, parameter: query
List members in a role  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
List members in a role  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
List members in a role  ->  Update Zoom Room location profile  [ label = "id : locationId"] type: string, parameter: path
List members in a role  ->  Update a group  [ label = "department : name"] type: string, parameter: body
List members in a role  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
List members in a role  ->  Update a user  [ label = "department : dept"] type: string, parameter: body
List members in a role  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
List members in a role  ->  Update an IM directory group  [ label = "department : name"] type: string, parameter: body
List members in a role  ->  Update location settings  [ label = "id : locationId"] type: string, parameter: path
List past meeting's poll results  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List past meeting's poll results  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
List past meeting's poll results  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
List past meeting's poll results  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List past meeting's poll results  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List past meeting's poll results  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
List past meeting's poll results  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List past meeting's poll results  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
List past meeting's poll results  ->  Create users  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
List past meeting's poll results  ->  Delete a meeting poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past meeting's poll results  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List past meeting's poll results  ->  Delete a webinar poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past meeting's poll results  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List past meeting's poll results  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
List past meeting's poll results  ->  Get a meeting poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past meeting's poll results  ->  Get a webinar poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past meeting's poll results  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List past meeting's poll results  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
List past meeting's poll results  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
List past meeting's poll results  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List past meeting's poll results  ->  Update a meeting poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past meeting's poll results  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Update a webinar poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past meeting's poll results  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List past meeting's poll results  ->  Update registration questions  [ label = "question : title"] type: string, parameter: body
List past meeting's poll results  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List past webinar poll results  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
List past webinar poll results  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List past webinar poll results  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List past webinar poll results  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
List past webinar poll results  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List past webinar poll results  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
List past webinar poll results  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
List past webinar poll results  ->  Create users  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
List past webinar poll results  ->  Delete a meeting poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past webinar poll results  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List past webinar poll results  ->  Delete a webinar poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past webinar poll results  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
List past webinar poll results  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List past webinar poll results  ->  Get a meeting poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past webinar poll results  ->  Get a webinar poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past webinar poll results  ->  Get webinar absentees  [ label = "uuid : WebinarUUID"] type: string, parameter: path
List past webinar poll results  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List past webinar poll results  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
List past webinar poll results  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
List past webinar poll results  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List past webinar poll results  ->  Update a meeting poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past webinar poll results  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Update a webinar poll  [ label = "polling_id : pollId"] type: string, parameter: path
List past webinar poll results  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List past webinar poll results  ->  Update registration questions  [ label = "question : title"] type: string, parameter: body
List past webinar poll results  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List registration questions  ->  Update registration questions  [ label = "title : title"] type: string, parameter: body
List registration questions  ->  Update registration questions  [ label = "type : type"] type: string, parameter: body
List registration questions  ->  Update registration questions  [ label = "field_name : field_name"] type: string, parameter: body
List user assistants  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Add assistants  [ label = "id : id"] type: string, parameter: body
List user assistants  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List user assistants  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List user assistants  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List user assistants  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Create a reservation  [ label = "id : reserve_for"] type: string, parameter: body
List user assistants  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List user assistants  ->  Create users  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Delete Virtual Background files  [ label = "id : userId"] type: string, parameter: path
List user assistants  ->  Delete a scheduler  [ label = "id : schedulerId"] type: string, parameter: path
List user assistants  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List user assistants  ->  Delete a user assistant  [ label = "id : assistantId"] type: string, parameter: path
List user assistants  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List user assistants  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List user assistants  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List user assistants  ->  Update a user  [ label = "id : cms_user_id"] type: string, parameter: body
List user assistants  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Update a user's presence status  [ label = "id : userId"] type: string, parameter: path
List user assistants  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List user assistants  ->  Upload Virtual Background files  [ label = "id : userId"] type: string, parameter: path
List user assistants  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Add assistants  [ label = "id : id"] type: string, parameter: body
List user schedulers  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List user schedulers  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List user schedulers  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List user schedulers  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Create a reservation  [ label = "id : reserve_for"] type: string, parameter: body
List user schedulers  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List user schedulers  ->  Create users  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Delete Virtual Background files  [ label = "id : userId"] type: string, parameter: path
List user schedulers  ->  Delete a scheduler  [ label = "id : schedulerId"] type: string, parameter: path
List user schedulers  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List user schedulers  ->  Delete a user assistant  [ label = "id : assistantId"] type: string, parameter: path
List user schedulers  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List user schedulers  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List user schedulers  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List user schedulers  ->  Update a user  [ label = "id : cms_user_id"] type: string, parameter: body
List user schedulers  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Update a user's presence status  [ label = "id : userId"] type: string, parameter: path
List user schedulers  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List user schedulers  ->  Upload Virtual Background files  [ label = "id : userId"] type: string, parameter: path
List user schedulers  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "country_label : country_label"] type: string, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "tsp_bridge : leader_pin"] type: string, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "number : number"] type: string, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "id : code"] type: int, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "code : code"] type: int, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "conference_code : conference_code"] type: string, parameter: body
List user's TSP accounts  ->  Add a user's TSP account  [ label = "type : type"] type: string, parameter: body
List user's TSP accounts  ->  Create a meeting  [ label = "code : weekly_days"] type: int, parameter: body
List user's TSP accounts  ->  Create a meeting  [ label = "id : weekly_days"] type: int, parameter: body
List user's TSP accounts  ->  Create a webinar  [ label = "id : weekly_days"] type: int, parameter: body
List user's TSP accounts  ->  Create a webinar  [ label = "code : weekly_days"] type: int, parameter: body
List user's TSP accounts  ->  Delete a user's TSP account  [ label = "id : tspId"] type: int, parameter: path
List user's TSP accounts  ->  Delete a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
List user's TSP accounts  ->  Get a user's TSP account  [ label = "code : tspId"] type: int, parameter: path
List user's TSP accounts  ->  Get a user's TSP account  [ label = "id : tspId"] type: int, parameter: path
List user's TSP accounts  ->  Get active/inactive host reports  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  Get active/inactive host reports  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  Get meeting recordings  [ label = "id : ttl"] type: int, parameter: query
List user's TSP accounts  ->  Get meeting recordings  [ label = "code : ttl"] type: int, parameter: query
List user's TSP accounts  ->  Get telephone reports  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  Get telephone reports  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  Get telephone reports  [ label = "id : type"] type: int, parameter: query
List user's TSP accounts  ->  Get telephone reports  [ label = "code : type"] type: int, parameter: query
List user's TSP accounts  ->  Get zoom meetings client feedback  [ label = "id : feedbackId"] type: int, parameter: path
List user's TSP accounts  ->  Get zoom meetings client feedback  [ label = "code : feedbackId"] type: int, parameter: path
List user's TSP accounts  ->  List H.323/SIP devices  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List H.323/SIP devices  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List IM directory group members  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List IM directory group members  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List SIP phones  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List SIP phones  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List Zoom Rooms  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List Zoom Rooms  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List group members  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List group members  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List meeting registrants  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List meeting registrants  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List meetings  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List meetings  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List members in a role  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List members in a role  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List recording registrants  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List recording registrants  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List users  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List users  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List webinar registrants  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List webinar registrants  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List webinars  [ label = "id : page_number"] type: int, parameter: query
List user's TSP accounts  ->  List webinars  [ label = "code : page_number"] type: int, parameter: query
List user's TSP accounts  ->  Update a TSP account  [ label = "number : number"] type: string, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "id : tspId"] type: int, parameter: path
List user's TSP accounts  ->  Update a TSP account  [ label = "code : tspId"] type: int, parameter: path
List user's TSP accounts  ->  Update a TSP account  [ label = "code : code"] type: int, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "leader_pin : leader_pin"] type: int, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "id : code"] type: int, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "type : type"] type: string, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "conference_code : conference_code"] type: string, parameter: body
List user's TSP accounts  ->  Update a TSP account  [ label = "country_label : country_label"] type: string, parameter: body
List user's TSP accounts  ->  Update a user  [ label = "id : value"] type: int, parameter: body
List user's TSP accounts  ->  Update a user  [ label = "code : value"] type: int, parameter: body
List user's TSP accounts  ->  Update account's TSP information  [ label = "tsp_bridge : tsp_bridge"] type: string, parameter: body
List users  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
List users  ->  Add a meeting registrant  [ label = "first_name : first_name"] type: string, parameter: body
List users  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
List users  ->  Add a meeting registrant  [ label = "last_name : last_name"] type: string, parameter: body
List users  ->  Add a webinar registrant  [ label = "last_name : last_name"] type: string, parameter: body
List users  ->  Add a webinar registrant  [ label = "first_name : first_name"] type: string, parameter: body
List users  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
List users  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
List users  ->  Add assistants  [ label = "id : id"] type: string, parameter: body
List users  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
List users  ->  Add group members  [ label = "email : email"] type: string, parameter: body
List users  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
List users  ->  Check a user's PM room  [ label = "first_name : vanity_name"] type: string, parameter: query
List users  ->  Create a group  [ label = "dept : name"] type: string, parameter: body
List users  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List users  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
List users  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
List users  ->  Create a recording registrant  [ label = "first_name : first_name"] type: string, parameter: body
List users  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
List users  ->  Create a recording registrant  [ label = "last_name : last_name"] type: string, parameter: body
List users  ->  Create a reservation  [ label = "id : reserve_for"] type: string, parameter: body
List users  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
List users  ->  Create an IM directory group  [ label = "dept : name"] type: string, parameter: body
List users  ->  Create users  [ label = "email : email"] type: string, parameter: body
List users  ->  Create users  [ label = "first_name : first_name"] type: string, parameter: body
List users  ->  Create users  [ label = "last_name : last_name"] type: string, parameter: body
List users  ->  Delete Virtual Background files  [ label = "id : userId"] type: string, parameter: path
List users  ->  Delete a scheduler  [ label = "id : schedulerId"] type: string, parameter: path
List users  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
List users  ->  Delete a user assistant  [ label = "id : assistantId"] type: string, parameter: path
List users  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
List users  ->  Get active/inactive host reports  [ label = "status : type"] type: string, parameter: query
List users  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
List users  ->  Perform batch registration  [ label = "first_name : first_name"] type: string, parameter: body
List users  ->  Perform batch registration  [ label = "email : email"] type: string, parameter: body
List users  ->  Perform batch registration  [ label = "last_name : last_name"] type: string, parameter: body
List users  ->  Update Zoom Room location profile  [ label = "timezone : timezone"] type: string, parameter: body
List users  ->  Update a group  [ label = "dept : name"] type: string, parameter: body
List users  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
List users  ->  Update a user  [ label = "dept : dept"] type: string, parameter: body
List users  ->  Update a user  [ label = "key : key"] type: string, parameter: body
List users  ->  Update a user  [ label = "last_name : last_name"] type: string, parameter: body
List users  ->  Update a user  [ label = "id : cms_user_id"] type: string, parameter: body
List users  ->  Update a user  [ label = "name : name"] type: string, parameter: body
List users  ->  Update a user  [ label = "first_name : first_name"] type: string, parameter: body
List users  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
List users  ->  Update a user's presence status  [ label = "id : userId"] type: string, parameter: path
List users  ->  Update an IM directory group  [ label = "dept : name"] type: string, parameter: body
List users  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
List users  ->  Upload Virtual Background files  [ label = "id : userId"] type: string, parameter: path
List users  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
List webinar participants  ->  Add IM directory group members  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Add a meeting registrant  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Add a webinar registrant  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Add assistants  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Add group admins  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Add group members  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Check a user email  [ label = "user_email : email"] type: string, parameter: query
List webinar participants  ->  Create a meeting  [ label = "name : name"] type: string, parameter: body
List webinar participants  ->  Create a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
List webinar participants  ->  Create a meeting  [ label = "name : contact_name"] type: string, parameter: body
List webinar participants  ->  Create a meeting  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Create a meeting  [ label = "user_email : contact_email"] type: string, parameter: body
List webinar participants  ->  Create a recording registrant  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Create a webinar  [ label = "user_email : contact_email"] type: string, parameter: body
List webinar participants  ->  Create a webinar  [ label = "name : contact_name"] type: string, parameter: body
List webinar participants  ->  Create meeting's invite links  [ label = "name : name"] type: string, parameter: body
List webinar participants  ->  Create users  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Create webinar's invite links  [ label = "name : name"] type: string, parameter: body
List webinar participants  ->  Delete a user  [ label = "user_email : transfer_email"] type: string, parameter: query
List webinar participants  ->  Enable SIP phone  [ label = "user_email : user_email"] type: string, parameter: body
List webinar participants  ->  Enable SIP phone  [ label = "name : user_name"] type: string, parameter: body
List webinar participants  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
List webinar participants  ->  List SIP phones  [ label = "user_email : search_key"] type: string, parameter: query
List webinar participants  ->  List meeting templates  [ label = "id : userId"] type: string, parameter: path
List webinar participants  ->  Perform batch registration  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Update Live Stream Status  [ label = "name : display_name"] type: string, parameter: body
List webinar participants  ->  Update SIP phone  [ label = "name : user_name"] type: string, parameter: body
List webinar participants  ->  Update a meeting  [ label = "user_email : schedule_for"] type: string, parameter: body
List webinar participants  ->  Update a user's email  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Update registrant's status  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Use in-meeting cloud recording controls  [ label = "user_email : email"] type: string, parameter: body
List webinar participants  ->  Use in-meeting cloud recording controls  [ label = "id : id"] type: string, parameter: body
List webinars  ->  Assign a role  [ label = "email : email"] type: string, parameter: body
List webinars  ->  Assign a role  [ label = "host : email"] type: string, parameter: body
List webinars  ->  Create a group  [ label = "value : name"] type: string, parameter: body
List webinars  ->  Create an IM directory group  [ label = "value : name"] type: string, parameter: body
List webinars  ->  Get CRC port usage  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get IM metrics  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get Zoom Rooms details  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get active/inactive host reports  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get chat messages reports  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get chat metrics  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get chat sessions reports  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get cloud recording usage report  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get meeting quality scores  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get meeting reports  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get operation logs report  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get telephone reports  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get top 25 Zoom Rooms with issues  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get top 25 issues of Zoom Rooms  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get upcoming events report  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Get zoom meetings client feedback  [ label = "to : to"] type: string, parameter: query
List webinars  ->  Get zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List webinars  ->  List SIP phones  [ label = "next_page_token : next_page_token"] type: string, parameter: query
List webinars  ->  List Zoom meetings client feedback  [ label = "from : from"] type: string, parameter: query
List webinars  ->  List client meeting satisfaction  [ label = "to : to"] type: string, parameter: query
List webinars  ->  List client meeting satisfaction  [ label = "from : from"] type: string, parameter: query
List webinars  ->  List meetings  [ label = "from : from"] type: string, parameter: query
List webinars  ->  Update a group  [ label = "value : name"] type: string, parameter: body
List webinars  ->  Update a user  [ label = "value : dept"] type: string, parameter: body
List webinars  ->  Update an IM directory group  [ label = "value : name"] type: string, parameter: body
List workspaces  ->  Add a Zoom Room  [ label = "workspace_name : name"] type: string, parameter: body
List workspaces  ->  Change Zoom Rooms app version  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Change a Zoom Room's location  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Check-in or check-out of a Zoom Room  [ label = "id : id"] type: string, parameter: path
List workspaces  ->  Create a device profile  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Create a reservation  [ label = "id : workspaceId"] type: string, parameter: path
List workspaces  ->  Delete a Zoom Room  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Delete a device profile  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Delete a reservation  [ label = "id : workspaceId"] type: string, parameter: path
List workspaces  ->  Get Zoom Room profile  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Get Zoom Room settings  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Get a device profile  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Get device information  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  List Zoom Room devices  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  List device profiles  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Update E911 digital signage  [ label = "id : target_ids"] type: string, parameter: body
List workspaces  ->  Update Zoom Room settings  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Update a Zoom Room profile  [ label = "workspace_name : name"] type: string, parameter: body
List workspaces  ->  Update a Zoom Room profile  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Update a device profile  [ label = "id : roomId"] type: string, parameter: path
List workspaces  ->  Update a reservation  [ label = "id : workspaceId"] type: string, parameter: path
Perform batch poll creation  ->  Create a meeting poll  [ label = "name : name"] type: string, parameter: body
Perform batch poll creation  ->  Create a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Perform batch poll creation  ->  Create a meeting poll  [ label = "value : value"] type: string, parameter: body
Perform batch poll creation  ->  Create a meeting poll  [ label = "title : title"] type: string, parameter: body
Perform batch poll creation  ->  Create a meeting poll  [ label = "type : type"] type: string, parameter: body
Perform batch poll creation  ->  Create a webinar's poll  [ label = "type : type"] type: string, parameter: body
Perform batch poll creation  ->  Create a webinar's poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Perform batch poll creation  ->  Create a webinar's poll  [ label = "name : name"] type: string, parameter: body
Perform batch poll creation  ->  Create a webinar's poll  [ label = "title : title"] type: string, parameter: body
Perform batch poll creation  ->  Create a webinar's poll  [ label = "value : value"] type: string, parameter: body
Perform batch poll creation  ->  Delete a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Perform batch poll creation  ->  Delete a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Perform batch poll creation  ->  Get a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Perform batch poll creation  ->  Get a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Perform batch poll creation  ->  Update a meeting poll  [ label = "value : value"] type: string, parameter: body
Perform batch poll creation  ->  Update a meeting poll  [ label = "type : type"] type: string, parameter: body
Perform batch poll creation  ->  Update a meeting poll  [ label = "name : name"] type: string, parameter: body
Perform batch poll creation  ->  Update a meeting poll  [ label = "id : pollId"] type: string, parameter: path
Perform batch poll creation  ->  Update a meeting poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Perform batch poll creation  ->  Update a meeting poll  [ label = "title : title"] type: string, parameter: body
Perform batch poll creation  ->  Update a webinar poll  [ label = "rating_min_label : rating_min_label"] type: string, parameter: body
Perform batch poll creation  ->  Update a webinar poll  [ label = "type : type"] type: string, parameter: body
Perform batch poll creation  ->  Update a webinar poll  [ label = "name : name"] type: string, parameter: body
Perform batch poll creation  ->  Update a webinar poll  [ label = "id : pollId"] type: string, parameter: path
Perform batch poll creation  ->  Update a webinar poll  [ label = "title : title"] type: string, parameter: body
Perform batch poll creation  ->  Update a webinar poll  [ label = "value : value"] type: string, parameter: body
Perform batch registration  ->  Add IM directory group members  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Add a meeting registrant  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Add a webinar registrant  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Add assistants  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Add group admins  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Add group members  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Check a user email  [ label = "email : email"] type: string, parameter: query
Perform batch registration  ->  Create a meeting  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Create a meeting  [ label = "email : contact_email"] type: string, parameter: body
Perform batch registration  ->  Create a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Perform batch registration  ->  Create a recording registrant  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Create a webinar  [ label = "email : contact_email"] type: string, parameter: body
Perform batch registration  ->  Create users  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Delete a meeting registrant  [ label = "registrant_id : registrantId"] type: string, parameter: path
Perform batch registration  ->  Delete a user  [ label = "email : transfer_email"] type: string, parameter: query
Perform batch registration  ->  Delete a webinar registrant  [ label = "registrant_id : registrantId"] type: string, parameter: path
Perform batch registration  ->  Enable SIP phone  [ label = "email : user_email"] type: string, parameter: body
Perform batch registration  ->  Get a meeting registrant  [ label = "registrant_id : registrantId"] type: string, parameter: path
Perform batch registration  ->  Get a webinar registrant  [ label = "registrant_id : registrantId"] type: string, parameter: path
Perform batch registration  ->  List SIP phones  [ label = "email : search_key"] type: string, parameter: query
Perform batch registration  ->  Update a meeting  [ label = "email : schedule_for"] type: string, parameter: body
Perform batch registration  ->  Update a user's email  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Update registrant's status  [ label = "email : email"] type: string, parameter: body
Perform batch registration  ->  Update registrant's status  [ label = "registrant_id : id"] type: string, parameter: body
Perform batch registration  ->  Use in-meeting cloud recording controls  [ label = "email : email"] type: string, parameter: body
Retrieve an IM directory group  ->  Create a group  [ label = "name : name"] type: string, parameter: body
Retrieve an IM directory group  ->  Create an IM directory group  [ label = "type : type"] type: string, parameter: body
Retrieve an IM directory group  ->  Create an IM directory group  [ label = "name : name"] type: string, parameter: body
Retrieve an IM directory group  ->  Update a group  [ label = "name : name"] type: string, parameter: body
Retrieve an IM directory group  ->  Update a user  [ label = "name : dept"] type: string, parameter: body
Retrieve an IM directory group  ->  Update an IM directory group  [ label = "name : name"] type: string, parameter: body
Retrieve an IM directory group  ->  Update an IM directory group  [ label = "type : type"] type: string, parameter: body
Update E911 digital signage  ->  Check-in or check-out of a Zoom Room  [ label = "event_id : event_id"] type: string, parameter: body
Update E911 digital signage  ->  Delete a reservation  [ label = "event_id : reservationId"] type: string, parameter: path
Update E911 digital signage  ->  Update a reservation  [ label = "event_id : reservationId"] type: string, parameter: path
Upload Virtual Background files  ->  Delete Virtual Background files  [ label = "id : file_ids"] type: string, parameter: query
Upload a webinar's branding wallpaper  ->  Set webinar's default branding Virtual Background  [ label = "id : id"] type: string, parameter: query
List tracking fields
Get user permissions
Update webinar status
Get a webinar's join token for local recording
Remove panelists
Update user status
Delete a webinar survey
Update meeting status
Get meeting invitation
List past meeting instances
List IM directory groups
Delete a webinar's branding wallpaper
Update a user's password
Upload a webinar's branding Virtual Background
List past webinar files
Delete user schedulers
Revoke a user's SSO token
Delete user assistants
Get webinar's token
Get a user's token
Get a meeting's join token for local recording
List roles
Get user's ZAK
List past webinar instances
Update Zoom Room account settings
Get meeting's token
List meeting participants QoS
List panelists
Delete a webinar's branding Virtual Backgrounds
Delete a meeting survey
Upload a user's profile picture
List a webinar's polls
Get Zoom Room account settings
List webinar templates
Remove a panelist
List webinar participant QoS
List meeting polls
List past meeting's files
Delete a user's profile picture
List digital signage contents

-----------List of endpoints and methods--------------

Get account settings, method: GET
Update account settings, method: PATCH
Get account's managed domains, method: GET
Get account's trusted domains, method: GET
List group admins, method: GET
Add group admins, method: POST
Delete a group admin, method: DELETE
Get locked settings, method: GET
Update locked settings, method: PATCH
Delete a group member, method: DELETE
Update a group member, method: PATCH
List group members, method: GET
Add group members, method: POST
Delete Virtual Background files, method: DELETE
Upload Virtual Background files, method: POST
Get a group's settings, method: GET
Update a group's settings, method: PATCH
Delete a group, method: DELETE
Get a group, method: GET
Update a group, method: PATCH
List groups, method: GET
Create a group, method: POST
Delete a H.323/SIP device, method: DELETE
Update a H.323/SIP device, method: PATCH
List H.323/SIP devices, method: GET
Create a H.323/SIP device, method: POST
List IM directory group members, method: GET
Add IM directory group members, method: POST
Delete IM directory group member, method: DELETE
Delete an IM directory group, method: DELETE
Retrieve an IM directory group, method: GET
Update an IM directory group, method: PATCH
List IM directory groups, method: GET
Create an IM directory group, method: POST
List meetings, method: GET
Create a meeting, method: POST
Delete user assistants, method: DELETE
List user assistants, method: GET
Add assistants, method: POST
Delete a user assistant, method: DELETE
Delete a user's profile picture, method: DELETE
Upload a user's profile picture, method: POST
Delete user schedulers, method: DELETE
List user schedulers, method: GET
Delete a scheduler, method: DELETE
Get user settings, method: GET
Update user settings, method: PATCH
Revoke a user's SSO token, method: DELETE
Get a user's token, method: GET
Delete a user's TSP account, method: DELETE
Get a user's TSP account, method: GET
Update a TSP account, method: PATCH
List user's TSP accounts, method: GET
Add a user's TSP account, method: POST
Set global dial-in URL for a TSP user, method: PATCH
List webinars, method: GET
Create a webinar, method: POST
Delete a user, method: DELETE
Get a user, method: GET
Update a user, method: PATCH
List meeting templates, method: GET
Update a user's email, method: PUT
List a user's PAC accounts, method: GET
Update a user's password, method: PUT
Get user permissions, method: GET
Update a user's presence status, method: PUT
List all recordings, method: GET
Update user status, method: PUT
List webinar templates, method: GET
List users, method: GET
Create users, method: POST
Check a user email, method: GET
Get user's ZAK, method: GET
Check a user's PM room, method: GET
Get a meeting registrant, method: GET
Delete a meeting registrant, method: DELETE
List registration questions, method: GET
Update registration questions, method: PATCH
List meeting registrants, method: GET
Add a meeting registrant, method: POST
Update registrant's status, method: PUT
Get a meeting poll, method: GET
Update a meeting poll, method: PUT
Delete a meeting poll, method: DELETE
List meeting polls, method: GET
Create a meeting poll, method: POST
Get a meeting survey, method: GET
Update a meeting survey, method: PATCH
Delete a meeting survey, method: DELETE
Get livestream details, method: GET
Update a livestream, method: PATCH
Update Live Stream Status, method: PATCH
Get registration questions, method: GET
List recording registrants, method: GET
Create a recording registrant, method: POST
Get meeting recording settings, method: GET
Update meeting recording settings, method: PATCH
Delete a meeting recording file, method: DELETE
Recover a single recording, method: PUT
Delete meeting recordings, method: DELETE
Get meeting recordings, method: GET
Delete a meeting, method: DELETE
Get a meeting, method: GET
Update a meeting, method: PATCH
Update meeting status, method: PUT
Create meeting's invite links, method: POST
Get meeting invitation, method: GET
Perform batch registration, method: POST
Perform batch poll creation, method: POST
Get meeting's token, method: GET
Get a meeting's join token for local recording, method: GET
Recover meeting recordings, method: PUT
Get past meeting details, method: GET
List past meeting instances, method: GET
List past meeting's poll results, method: GET
List past meeting's files, method: GET
Delete a meeting's archived files, method: DELETE
Get a meeting's archived files, method: GET
Get past meeting participants, method: GET
List Zoom meetings client feedback, method: GET
Get zoom meetings client feedback, method: GET
List client meeting satisfaction, method: GET
Get top 25 Zoom Rooms with issues, method: GET
Get issues of Zoom Rooms, method: GET
List meeting participants, method: GET
List meeting participants QoS, method: GET
Get post meeting feedback, method: GET
Get sharing/recording details, method: GET
Get meeting participant QoS, method: GET
Get meeting details, method: GET
Get webinar participants, method: GET
List webinar participant QoS, method: GET
Get post webinar feedback, method: GET
Get webinar participant QoS, method: GET
Get webinar details, method: GET
List Zoom Rooms, method: GET
Get top 25 issues of Zoom Rooms, method: GET
Get Zoom Rooms details, method: GET
Get chat metrics, method: GET
Get CRC port usage, method: GET
Get IM metrics, method: GET
Get meeting quality scores, method: GET
List past webinar files, method: GET
List past webinar instances, method: GET
List webinar participants, method: GET
List past webinar poll results, method: GET
List Q&A of past webinar, method: GET
Get webinar absentees, method: GET
Get billing reports, method: GET
Get billing invoice reports, method: GET
Get chat sessions reports, method: GET
Get chat messages reports, method: GET
Get meeting detail reports, method: GET
Get meeting participant reports, method: GET
Get meeting poll reports, method: GET
Get active/inactive host reports, method: GET
Get meeting reports, method: GET
Get webinar detail reports, method: GET
Get webinar participant reports, method: GET
Get webinar poll reports, method: GET
Get webinar Q&A report, method: GET
Get sign In / sign out activity report, method: GET
Get cloud recording usage report, method: GET
Get daily usage report, method: GET
Get operation logs report, method: GET
Get telephone reports, method: GET
Get upcoming events report, method: GET
List members in a role, method: GET
Assign a role, method: POST
Unassign a role, method: DELETE
Delete a role, method: DELETE
Get role information, method: GET
Update role information, method: PATCH
List roles, method: GET
Create a role, method: POST
Get Zoom Room account profile, method: GET
Update Zoom Room account profile, method: PATCH
Get Zoom Room account settings, method: GET
Update Zoom Room account settings, method: PATCH
Get Zoom Room location structure, method: GET
Update Zoom Rooms location structure, method: PUT
Get location settings, method: GET
Update location settings, method: PATCH
Get Zoom Room location profile, method: GET
Update Zoom Room location profile, method: PATCH
Change the assigned parent location, method: PUT
List Zoom Room locations, method: GET
Add a location, method: POST
Delete a device profile, method: DELETE
Get a device profile, method: GET
Update a device profile, method: PATCH
List device profiles, method: GET
Create a device profile, method: POST
Get device information, method: GET
List Zoom Room devices, method: GET
Change Zoom Rooms app version, method: PUT
Get Zoom Room settings, method: GET
Update Zoom Room settings, method: PATCH
Delete a Zoom Room, method: DELETE
Get Zoom Room profile, method: GET
Update a Zoom Room profile, method: PATCH
Change a Zoom Room's location, method: PUT
Add a Zoom Room, method: POST
List digital signage contents, method: GET
Update E911 digital signage, method: PATCH
Check-in or check-out of a Zoom Room, method: PATCH
Delete SIP phone, method: DELETE
Update SIP phone, method: PATCH
List SIP phones, method: GET
Enable SIP phone, method: POST
Delete a tracking field, method: DELETE
Get a tracking field, method: GET
Update a tracking field, method: PATCH
List tracking fields, method: GET
Create a tracking field, method: POST
Get account's TSP information, method: GET
Update account's TSP information, method: PATCH
Get live stream details, method: GET
Update a live stream, method: PATCH
Remove panelists, method: DELETE
List panelists, method: GET
Add panelists, method: POST
Remove a panelist, method: DELETE
Delete a webinar poll, method: DELETE
Get a webinar poll, method: GET
Update a webinar poll, method: PUT
List a webinar's polls, method: GET
Create a webinar's poll, method: POST
Delete a webinar registrant, method: DELETE
Get a webinar registrant, method: GET
List webinar registrants, method: GET
Add a webinar registrant, method: POST
Delete a webinar survey, method: DELETE
Get a webinar survey, method: GET
Update a webinar survey, method: PATCH
Upload a webinar's branding Virtual Background, method: POST
Set webinar's default branding Virtual Background, method: PATCH
Delete a webinar's branding Virtual Backgrounds, method: DELETE
Upload a webinar's branding wallpaper, method: POST
Delete a webinar's branding wallpaper, method: DELETE
Get webinar's session branding, method: GET
Delete a webinar, method: DELETE
Get a webinar, method: GET
Update a webinar, method: PATCH
Create webinar's invite links, method: POST
Update webinar status, method: PUT
Get webinar tracking sources, method: GET
Get webinar's token, method: GET
Get a webinar's join token for local recording, method: GET
Delete a reservation, method: DELETE
Update a reservation, method: PATCH
Create a reservation, method: POST
List workspaces, method: GET
List archived files, method: GET
Use in-meeting cloud recording controls, method: PATCH
